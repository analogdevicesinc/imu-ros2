<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.8" xml:lang="en-US">
  <compounddef id="iio__wrapper_8cpp" kind="file" language="C++">
    <compoundname>iio_wrapper.cpp</compoundname>
    <includes refid="iio__wrapper_8h" local="yes">adi_imu/iio_wrapper.h</includes>
    <includes local="no">rclcpp/rclcpp.hpp</includes>
    <incdepgraph>
      <node id="5">
        <label>adis_data_access.h</label>
        <link refid="adis__data__access_8h_source"/>
      </node>
      <node id="2">
        <label>adi_imu/iio_wrapper.h</label>
        <link refid="iio__wrapper_8h_source"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>src/iio_wrapper.cpp</label>
        <link refid="iio__wrapper_8cpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>iio.h</label>
      </node>
      <node id="6">
        <label>rclcpp/rclcpp.hpp</label>
      </node>
      <node id="4">
        <label>string</label>
      </node>
    </incdepgraph>
    <sectiondef kind="define">
      <memberdef kind="define" id="iio__wrapper_8cpp_1a2caa0716e56afb87d491d87fb4460b62" prot="public" static="no">
        <name>MAX_NO_OF_SAMPLES</name>
        <initializer>1</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Maximum allowed number of samples in IIO buffer. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/iio_wrapper.cpp" line="26" column="9" bodyfile="src/iio_wrapper.cpp" bodystart="26" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="enum">
      <memberdef kind="enum" id="iio__wrapper_8cpp_1a06fc87d81c62e9abb8790b6e5713c55b" prot="public" static="no" strong="no">
        <type></type>
        <name></name>
        <enumvalue id="iio__wrapper_8cpp_1a06fc87d81c62e9abb8790b6e5713c55ba9ae031eef8c60bba76c743b0cae54e66" prot="public">
          <name>CHAN_GYRO_X</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="iio__wrapper_8cpp_1a06fc87d81c62e9abb8790b6e5713c55ba945871e61cdb7aefce8f81a61457a78f" prot="public">
          <name>CHAN_GYRO_Y</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="iio__wrapper_8cpp_1a06fc87d81c62e9abb8790b6e5713c55bac32c37f16b5b2cfd2c96b19c181eb542" prot="public">
          <name>CHAN_GYRO_Z</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="iio__wrapper_8cpp_1a06fc87d81c62e9abb8790b6e5713c55ba1151b288032c105b3da89eece48cc10c" prot="public">
          <name>CHAN_ACCEL_X</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="iio__wrapper_8cpp_1a06fc87d81c62e9abb8790b6e5713c55ba2d99758af2fade9dd76984a2eee9f932" prot="public">
          <name>CHAN_ACCEL_Y</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="iio__wrapper_8cpp_1a06fc87d81c62e9abb8790b6e5713c55baeca21da86b7bfab5f4d104dfb58ae724" prot="public">
          <name>CHAN_ACCEL_Z</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="iio__wrapper_8cpp_1a06fc87d81c62e9abb8790b6e5713c55baafc9bd9078df467284f69f2017599501" prot="public">
          <name>CHAN_TEMP</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="iio__wrapper_8cpp_1a06fc87d81c62e9abb8790b6e5713c55ba76baa67431ba615d41e1ddc2b188926e" prot="public">
          <name>CHAN_DATA_TIMESTAMP</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="iio__wrapper_8cpp_1a06fc87d81c62e9abb8790b6e5713c55ba1b5abeee0bde7a3daa47d29c8665848e" prot="public">
          <name>NO_OF_CHANS</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/iio_wrapper.cpp" line="28" column="1" bodyfile="src/iio_wrapper.cpp" bodystart="29" bodyend="47"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="var">
      <memberdef kind="variable" id="iio__wrapper_8cpp_1a51e5bf2f116b1e09c8b9ed29bb4e326b" prot="public" static="no" mutable="no">
        <type>uint32_t</type>
        <definition>uint32_t buff_write_idx</definition>
        <argsstring></argsstring>
        <name>buff_write_idx</name>
        <initializer>= 0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Buffer write index. <linebreak/>
 </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/iio_wrapper.cpp" line="85" column="10" bodyfile="src/iio_wrapper.cpp" bodystart="85" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="iio__wrapper_8cpp_1a1532e6c5918d0afd3d2b45eaff3f6f68" prot="public" static="no" mutable="no">
        <type>uint32_t</type>
        <definition>uint32_t buff_read_idx</definition>
        <argsstring></argsstring>
        <name>buff_read_idx</name>
        <initializer>= <ref refid="iio__wrapper_8cpp_1a2caa0716e56afb87d491d87fb4460b62" kindref="member">MAX_NO_OF_SAMPLES</ref></initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Buffer read index. <linebreak/>
 </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/iio_wrapper.cpp" line="87" column="10" bodyfile="src/iio_wrapper.cpp" bodystart="87" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="iio__wrapper_8cpp_1a9c684a2e63c59045ea4d135add263bb9" prot="public" static="no" mutable="no">
        <type>uint32_t</type>
        <definition>uint32_t buff_data[NO_OF_CHANS+1][MAX_NO_OF_SAMPLES]</definition>
        <argsstring>[NO_OF_CHANS+1][MAX_NO_OF_SAMPLES]</argsstring>
        <name>buff_data</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Buffer containing the read data. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/iio_wrapper.cpp" line="89" column="10" bodyfile="src/iio_wrapper.cpp" bodystart="89" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="iio__wrapper_8cpp_1a4ce011ebc45fa44e68df76ab78144541" prot="public" static="no" mutable="no">
        <type>double</type>
        <definition>double samp_freq</definition>
        <argsstring></argsstring>
        <name>samp_freq</name>
        <initializer>= 2000.0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Sampling frequency of the device. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/iio_wrapper.cpp" line="91" column="8" bodyfile="src/iio_wrapper.cpp" bodystart="91" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="iio__wrapper_8cpp_1ad00387e7a9a10b544928c5afc4ded5b7" prot="public" static="no" mutable="no">
        <type>uint32_t</type>
        <definition>uint32_t no_of_samp</definition>
        <argsstring></argsstring>
        <name>no_of_samp</name>
        <initializer>= <ref refid="iio__wrapper_8cpp_1a2caa0716e56afb87d491d87fb4460b62" kindref="member">MAX_NO_OF_SAMPLES</ref></initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Number of samples to be read at once. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/iio_wrapper.cpp" line="93" column="10" bodyfile="src/iio_wrapper.cpp" bodystart="93" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="iio__wrapper_8cpp_1a60e90dbaa463bf8637eb6f63512b97d1" prot="public" static="no" mutable="no">
        <type>uint32_t</type>
        <definition>uint32_t current_data_selection</definition>
        <argsstring></argsstring>
        <name>current_data_selection</name>
        <initializer>= FULL_MEASURED_DATA</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Current set data selection. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/iio_wrapper.cpp" line="95" column="10" bodyfile="src/iio_wrapper.cpp" bodystart="95" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="iio__wrapper_8cpp_1a80b9e2e5df0b6e005c30488d59b6d97a" prot="public" static="no" mutable="no">
        <type>bool</type>
        <definition>bool has_delta_channels</definition>
        <argsstring></argsstring>
        <name>has_delta_channels</name>
        <initializer>= true</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/iio_wrapper.cpp" line="97" column="6" bodyfile="src/iio_wrapper.cpp" bodystart="97" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="iio__wrapper_8cpp_1ae29e0ad226de4f0dd3fefa66453759e6" prot="public" static="no" mutable="no">
        <type>bool</type>
        <definition>bool has_timestamp_channel</definition>
        <argsstring></argsstring>
        <name>has_timestamp_channel</name>
        <initializer>= false</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/iio_wrapper.cpp" line="98" column="6" bodyfile="src/iio_wrapper.cpp" bodystart="98" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="func">
      <memberdef kind="function" id="iio__wrapper_8cpp_1a9fb0463243d8a11004e5f95022d5f188" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>ssize_t</type>
        <definition>static ssize_t demux_sample</definition>
        <argsstring>(const struct iio_channel *chn, void *sample, size_t size, __attribute__((unused)) void *d)</argsstring>
        <name>demux_sample</name>
        <param>
          <type>const struct iio_channel *</type>
          <declname>chn</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>sample</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>size</declname>
        </param>
        <param>
          <type>__attribute__((unused)) void *</type>
          <declname>d</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/iio_wrapper.cpp" line="401" column="16" bodyfile="src/iio_wrapper.cpp" bodystart="401" bodyend="434"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
<para>Implementation for iio wrapper library. </para>
    </briefdescription>
    <detaileddescription>
<para><simplesect kind="author"><para>Vasile Holonec (<ulink url="mailto:Vasile.Holonec@analog.com">Vasile.Holonec@analog.com</ulink>)</para>
</simplesect>
Copyright 2023(c) Analog Devices, Inc.</para>
<para>Licensed under the Apache License, Version 2.0 (the &quot;License&quot;); you may not use this file except in compliance with the License. You may obtain a copy of the License at <verbatim>http://www.apache.org/licenses/LICENSE-2.0
</verbatim> Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on an &quot;AS IS&quot; BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions and limitations under the License. </para>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/***************************************************************************/</highlight><highlight class="normal"><sp/></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;adi_imu/iio_wrapper.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;rclcpp/rclcpp.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MAX_NO_OF_SAMPLES<sp/>1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="keyword">enum</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal">{</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/>CHAN_GYRO_X,</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/>CHAN_GYRO_Y,</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/>CHAN_GYRO_Z,</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/>CHAN_ACCEL_X,</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/>CHAN_ACCEL_Y,</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/>CHAN_ACCEL_Z,</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/>CHAN_TEMP,</highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>ADIS_HAS_DELTA_BURST</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/>CHAN_DELTA_ANGL_X,</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/>CHAN_DELTA_ANGL_Y,</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/>CHAN_DELTA_ANGL_Z,</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/>CHAN_DELTA_VEL_X,</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/>CHAN_DELTA_VEL_Y,</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/>CHAN_DELTA_VEL_Z,</highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/>CHAN_DATA_TIMESTAMP,</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/>NO_OF_CHANS,</highlight></codeline>
<codeline lineno="47"><highlight class="normal">};</highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">iio_context<sp/>*<sp/><ref refid="classIIOWrapper_1aef4fe3a3f93085da695bf65639f09b87" kindref="member">IIOWrapper::m_iio_context</ref><sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">iio_device<sp/>*<sp/><ref refid="classIIOWrapper_1aa54f78cb0c53f73b6562e303367b20be" kindref="member">IIOWrapper::m_dev</ref><sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">iio_device<sp/>*<sp/><ref refid="classIIOWrapper_1a4c656678d45e8e978480712451b69649" kindref="member">IIOWrapper::m_dev_trigger</ref><sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">iio_buffer<sp/>*<sp/><ref refid="classIIOWrapper_1ac6c3cec6da827146507437ee27296a96" kindref="member">IIOWrapper::m_dev_buffer</ref><sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">iio_channel<sp/>*<sp/><ref refid="classIIOWrapper_1ac1fb844f82d64a1b6e2e6cc6c089bd71" kindref="member">IIOWrapper::m_channel_accel_x</ref><sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">iio_channel<sp/>*<sp/><ref refid="classIIOWrapper_1ad1e0779435221c690f93d6d05a76f176" kindref="member">IIOWrapper::m_channel_accel_y</ref><sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">iio_channel<sp/>*<sp/><ref refid="classIIOWrapper_1aa5f24dc01a83090154c57359a4668cd9" kindref="member">IIOWrapper::m_channel_accel_z</ref><sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">iio_channel<sp/>*<sp/><ref refid="classIIOWrapper_1a9b7c68d2cd7161e853b261c3e1363ef3" kindref="member">IIOWrapper::m_channel_anglvel_x</ref><sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">iio_channel<sp/>*<sp/><ref refid="classIIOWrapper_1a1b138c4cc8238e52a68f830363a04b8d" kindref="member">IIOWrapper::m_channel_anglvel_y</ref><sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">iio_channel<sp/>*<sp/><ref refid="classIIOWrapper_1a1b2384d209272000f673f25e7134d06d" kindref="member">IIOWrapper::m_channel_anglvel_z</ref><sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">iio_channel<sp/>*<sp/><ref refid="classIIOWrapper_1ae585f76ba5a1e003c9416bc87d5d7897" kindref="member">IIOWrapper::m_channel_deltaangl_x</ref><sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">iio_channel<sp/>*<sp/><ref refid="classIIOWrapper_1a60cc79165edc458ad3af03ad976feb2d" kindref="member">IIOWrapper::m_channel_deltaangl_y</ref><sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">iio_channel<sp/>*<sp/><ref refid="classIIOWrapper_1a7f9f033ffb31d35240723713a9769a6b" kindref="member">IIOWrapper::m_channel_deltaangl_z</ref><sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">iio_channel<sp/>*<sp/><ref refid="classIIOWrapper_1a13c3a4d31efdd2d329b3acc14b697aa4" kindref="member">IIOWrapper::m_channel_deltavelocity_x</ref><sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">iio_channel<sp/>*<sp/><ref refid="classIIOWrapper_1a7fba21deedbdc14adf0f4a46cb59fdff" kindref="member">IIOWrapper::m_channel_deltavelocity_y</ref><sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">iio_channel<sp/>*<sp/><ref refid="classIIOWrapper_1a38e16f0f6f97028d0eee31b7e98d40aa" kindref="member">IIOWrapper::m_channel_deltavelocity_z</ref><sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">iio_channel<sp/>*<sp/><ref refid="classIIOWrapper_1a49a1068fef0e2c1c48096f6b88d103b7" kindref="member">IIOWrapper::m_channel_temp</ref><sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">iio_channel<sp/>*<sp/><ref refid="classIIOWrapper_1a335fdbf54f6ea1f463b4b7e9e74e0cc8" kindref="member">IIOWrapper::m_channel_timestamp</ref><sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="classIIOWrapper_1ac4a267304bf82229d032adf4c167c8be" kindref="member">IIOWrapper::m_scale_accel_x</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="classIIOWrapper_1a39297415934efc288f6ced765861d19d" kindref="member">IIOWrapper::m_scale_accel_y</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="classIIOWrapper_1a62c70c9017644054942d0a27c5582291" kindref="member">IIOWrapper::m_scale_accel_z</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="classIIOWrapper_1a60201aaf24995e68520d846c5446cd23" kindref="member">IIOWrapper::m_scale_anglvel_x</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="classIIOWrapper_1aabb94da5ca0c007e066898cd7767f5a2" kindref="member">IIOWrapper::m_scale_anglvel_y</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="classIIOWrapper_1acdb2f23b02ac0650e12b76a02502e725" kindref="member">IIOWrapper::m_scale_anglvel_z</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="classIIOWrapper_1a9d05021dd126ae2446d4bfc8e122d926" kindref="member">IIOWrapper::m_scale_deltaangl_x</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="classIIOWrapper_1a0a614ad2a77e11186da5c6d22743c1cc" kindref="member">IIOWrapper::m_scale_deltaangl_y</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="classIIOWrapper_1aa60f12b53d29ad7a17750da6cfe56a9b" kindref="member">IIOWrapper::m_scale_deltaangl_z</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="classIIOWrapper_1a6b769d1cfe0c7e2f09d7af4cdbea5c09" kindref="member">IIOWrapper::m_scale_deltavelocity_x</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="80"><highlight class="normal"></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="classIIOWrapper_1a5f29b5ac8ea9c50f38059626899f45ab" kindref="member">IIOWrapper::m_scale_deltavelocity_y</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="81"><highlight class="normal"></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="classIIOWrapper_1a822cfeb7635264d647df73dabd2ec4d6" kindref="member">IIOWrapper::m_scale_deltavelocity_z</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="82"><highlight class="normal"></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="classIIOWrapper_1ac33c30566920a17f9f0b20321c7bb4ae" kindref="member">IIOWrapper::m_scale_temp</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="83"><highlight class="normal"></highlight></codeline>
<codeline lineno="85"><highlight class="normal">uint32_t<sp/><ref refid="iio__wrapper_8cpp_1a51e5bf2f116b1e09c8b9ed29bb4e326b" kindref="member">buff_write_idx</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="87"><highlight class="normal">uint32_t<sp/><ref refid="iio__wrapper_8cpp_1a1532e6c5918d0afd3d2b45eaff3f6f68" kindref="member">buff_read_idx</ref><sp/>=<sp/><ref refid="iio__wrapper_8cpp_1a2caa0716e56afb87d491d87fb4460b62" kindref="member">MAX_NO_OF_SAMPLES</ref>;</highlight></codeline>
<codeline lineno="89"><highlight class="normal">uint32_t<sp/><ref refid="iio__wrapper_8cpp_1a9c684a2e63c59045ea4d135add263bb9" kindref="member">buff_data</ref>[NO_OF_CHANS<sp/>+<sp/>1][<ref refid="iio__wrapper_8cpp_1a2caa0716e56afb87d491d87fb4460b62" kindref="member">MAX_NO_OF_SAMPLES</ref>];</highlight></codeline>
<codeline lineno="91"><highlight class="normal"></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="iio__wrapper_8cpp_1a4ce011ebc45fa44e68df76ab78144541" kindref="member">samp_freq</ref><sp/>=<sp/>2000.0;</highlight></codeline>
<codeline lineno="93"><highlight class="normal">uint32_t<sp/><ref refid="iio__wrapper_8cpp_1ad00387e7a9a10b544928c5afc4ded5b7" kindref="member">no_of_samp</ref><sp/>=<sp/><ref refid="iio__wrapper_8cpp_1a2caa0716e56afb87d491d87fb4460b62" kindref="member">MAX_NO_OF_SAMPLES</ref>;</highlight></codeline>
<codeline lineno="95"><highlight class="normal">uint32_t<sp/><ref refid="iio__wrapper_8cpp_1a60e90dbaa463bf8637eb6f63512b97d1" kindref="member">current_data_selection</ref><sp/>=<sp/>FULL_MEASURED_DATA;</highlight></codeline>
<codeline lineno="96"><highlight class="normal"></highlight></codeline>
<codeline lineno="97"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>has_delta_channels<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="98"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>has_timestamp_channel<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="99"><highlight class="normal"></highlight></codeline>
<codeline lineno="100"><highlight class="normal"><ref refid="classIIOWrapper_1ae9b4506c5a6cb9d56e36d11c3d4fc56e" kindref="member">IIOWrapper::IIOWrapper</ref>()<sp/>{}</highlight></codeline>
<codeline lineno="101"><highlight class="normal"></highlight></codeline>
<codeline lineno="102"><highlight class="normal"><ref refid="classIIOWrapper_1ab4e9232cf3ba9539db8e4bfac2e0ebf0" kindref="member">IIOWrapper::~IIOWrapper</ref>()</highlight></codeline>
<codeline lineno="103"><highlight class="normal">{</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classIIOWrapper_1ac6c3cec6da827146507437ee27296a96" kindref="member">m_dev_buffer</ref><sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/>iio_buffer_destroy(<ref refid="classIIOWrapper_1ac6c3cec6da827146507437ee27296a96" kindref="member">m_dev_buffer</ref>);</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classIIOWrapper_1ac6c3cec6da827146507437ee27296a96" kindref="member">m_dev_buffer</ref><sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classIIOWrapper_1aef4fe3a3f93085da695bf65639f09b87" kindref="member">m_iio_context</ref><sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/>iio_context_destroy(<ref refid="classIIOWrapper_1aef4fe3a3f93085da695bf65639f09b87" kindref="member">m_iio_context</ref>);</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classIIOWrapper_1aef4fe3a3f93085da695bf65639f09b87" kindref="member">m_iio_context</ref><sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="112"><highlight class="normal">}</highlight></codeline>
<codeline lineno="113"><highlight class="normal"></highlight></codeline>
<codeline lineno="114"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classIIOWrapper_1aa56bb91153c46ef51c3d3d53a68cc423" kindref="member">IIOWrapper::createContext</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<sp/>context)</highlight></codeline>
<codeline lineno="115"><highlight class="normal">{</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classIIOWrapper_1aef4fe3a3f93085da695bf65639f09b87" kindref="member">m_iio_context</ref>)<sp/>{</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/>RCLCPP_INFO(rclcpp::get_logger(</highlight><highlight class="stringliteral">&quot;rclcpp_iiowrapper&quot;</highlight><highlight class="normal">),<sp/></highlight><highlight class="stringliteral">&quot;IIO<sp/>context<sp/>already<sp/>exists.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>IIO_CONTEXT_ERROR;</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="120"><highlight class="normal"></highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!strcmp(context,<sp/></highlight><highlight class="stringliteral">&quot;local:&quot;</highlight><highlight class="normal">))</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classIIOWrapper_1aef4fe3a3f93085da695bf65639f09b87" kindref="member">m_iio_context</ref><sp/>=<sp/>iio_create_local_context();</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classIIOWrapper_1aef4fe3a3f93085da695bf65639f09b87" kindref="member">m_iio_context</ref><sp/>=<sp/>iio_create_context_from_uri(context);</highlight></codeline>
<codeline lineno="125"><highlight class="normal"></highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="classIIOWrapper_1aef4fe3a3f93085da695bf65639f09b87" kindref="member">m_iio_context</ref>)<sp/>{</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/>RCLCPP_INFO(rclcpp::get_logger(</highlight><highlight class="stringliteral">&quot;rclcpp_iiowrapper&quot;</highlight><highlight class="normal">),<sp/></highlight><highlight class="stringliteral">&quot;IIO<sp/>context<sp/>is<sp/>null&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>IIO_CONTEXT_ERROR;</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="130"><highlight class="normal"></highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/>iio_context_set_timeout(<ref refid="classIIOWrapper_1aef4fe3a3f93085da695bf65639f09b87" kindref="member">m_iio_context</ref>,<sp/>5000);</highlight></codeline>
<codeline lineno="132"><highlight class="normal"></highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/>std::list&lt;std::string&gt;<sp/>supported_devices{</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;adis16465-1&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;adis16465-2&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;adis16465-3&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;adis16467-1&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;adis16467-2&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;adis16467-3&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;adis16470&quot;</highlight><highlight class="normal">,<sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;adis16475-1&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;adis16475-2&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;adis16475-3&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;adis16477-1&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;adis16477-2&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;adis16477-3&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;adis16500&quot;</highlight><highlight class="normal">,<sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;adis16501&quot;</highlight><highlight class="normal">,<sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;adis16505-1&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;adis16505-2&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;adis16505-3&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;adis16507-1&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;adis16507-2&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;adis16507-3&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;adis16545-1&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;adis16545-2&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;adis16545-3&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;adis16547-1&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;adis16547-2&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;adis16547-3&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;adis16550&quot;</highlight><highlight class="normal">,<sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;adis16550w&quot;</highlight><highlight class="normal">,<sp/><sp/></highlight><highlight class="stringliteral">&quot;adis16575-2&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;adis16575-3&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;adis16576-2&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;adis16576-3&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;adis16577-2&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;adis16577-3&quot;</highlight><highlight class="normal">};</highlight></codeline>
<codeline lineno="140"><highlight class="normal"></highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/>uint8_t<sp/>dev_id<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="142"><highlight class="normal"></highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(std::string<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>devname<sp/>:<sp/>supported_devices)<sp/>{</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classIIOWrapper_1aa54f78cb0c53f73b6562e303367b20be" kindref="member">m_dev</ref><sp/>=<sp/>iio_context_find_device(<ref refid="classIIOWrapper_1aef4fe3a3f93085da695bf65639f09b87" kindref="member">m_iio_context</ref>,<sp/>devname.c_str());</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classIIOWrapper_1aa54f78cb0c53f73b6562e303367b20be" kindref="member">m_dev</ref>)<sp/>{</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>RCLCPP_INFO(rclcpp::get_logger(</highlight><highlight class="stringliteral">&quot;rclcpp_iiowrapper&quot;</highlight><highlight class="normal">),<sp/></highlight><highlight class="stringliteral">&quot;Found<sp/>device:<sp/>%s&quot;</highlight><highlight class="normal">,<sp/>devname.c_str());</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classIIOWrapper_1a4c656678d45e8e978480712451b69649" kindref="member">m_dev_trigger</ref><sp/>==<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>devid<sp/>=<sp/>iio_device_get_id(<ref refid="classIIOWrapper_1aa54f78cb0c53f73b6562e303367b20be" kindref="member">m_dev</ref>);</highlight></codeline>
<codeline lineno="149"><highlight class="normal"></highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Get<sp/>device<sp/>number<sp/>in<sp/>the<sp/>form<sp/>of<sp/>0,<sp/>1,<sp/>etc.<sp/>to<sp/>append<sp/>to<sp/>the</highlight></codeline>
<codeline lineno="151"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>trigger<sp/>name.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::string<sp/>devnb;</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>devid.std::string::length();<sp/>i++)</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(isdigit(devid.c_str()[i]))<sp/>devnb.std::string::append(&amp;devid.c_str()[i]);</highlight></codeline>
<codeline lineno="155"><highlight class="normal"></highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::string<sp/>triggerName<sp/>=<sp/>devname<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;-dev&quot;</highlight><highlight class="normal"><sp/>+<sp/>devnb;</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classIIOWrapper_1a4c656678d45e8e978480712451b69649" kindref="member">m_dev_trigger</ref><sp/>=<sp/>iio_context_find_device(<ref refid="classIIOWrapper_1aef4fe3a3f93085da695bf65639f09b87" kindref="member">m_iio_context</ref>,<sp/>triggerName.c_str());</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>RCLCPP_INFO(</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rclcpp::get_logger(</highlight><highlight class="stringliteral">&quot;rclcpp_iiowrapper&quot;</highlight><highlight class="normal">),<sp/></highlight><highlight class="stringliteral">&quot;Found<sp/>trigger:<sp/>%s&quot;</highlight><highlight class="normal">,<sp/>triggerName.c_str());</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="classIIOWrapper_1a4c656678d45e8e978480712451b69649" kindref="member">m_dev_trigger</ref>)<sp/>{</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>RCLCPP_INFO(</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rclcpp::get_logger(</highlight><highlight class="stringliteral">&quot;rclcpp_iiowrapper&quot;</highlight><highlight class="normal">),<sp/></highlight><highlight class="stringliteral">&quot;Did<sp/>not<sp/>find<sp/>a<sp/>trigger<sp/>for<sp/>device<sp/>%s.&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>devname.c_str());</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>IIO_CONTEXT_ERROR;</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/>dev_id++;</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="171"><highlight class="normal"></highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="classIIOWrapper_1aa54f78cb0c53f73b6562e303367b20be" kindref="member">m_dev</ref>)<sp/>{</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/>iio_context_destroy(<ref refid="classIIOWrapper_1aef4fe3a3f93085da695bf65639f09b87" kindref="member">m_iio_context</ref>);</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classIIOWrapper_1aef4fe3a3f93085da695bf65639f09b87" kindref="member">m_iio_context</ref><sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/>RCLCPP_INFO(rclcpp::get_logger(</highlight><highlight class="stringliteral">&quot;rclcpp_iiowrapper&quot;</highlight><highlight class="normal">),<sp/></highlight><highlight class="stringliteral">&quot;No<sp/>supported<sp/>IIO<sp/>device<sp/>found.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>IIO_CONTEXT_ERROR;</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="178"><highlight class="normal"></highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/>iio_device_set_trigger(<ref refid="classIIOWrapper_1aa54f78cb0c53f73b6562e303367b20be" kindref="member">m_dev</ref>,<sp/><ref refid="classIIOWrapper_1a4c656678d45e8e978480712451b69649" kindref="member">m_dev_trigger</ref>);</highlight></codeline>
<codeline lineno="180"><highlight class="normal"></highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classIIOWrapper_1ac1fb844f82d64a1b6e2e6cc6c089bd71" kindref="member">m_channel_accel_x</ref><sp/>==<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classIIOWrapper_1ac1fb844f82d64a1b6e2e6cc6c089bd71" kindref="member">m_channel_accel_x</ref><sp/>=<sp/>iio_device_find_channel(<ref refid="classIIOWrapper_1aa54f78cb0c53f73b6562e303367b20be" kindref="member">m_dev</ref>,<sp/></highlight><highlight class="stringliteral">&quot;accel_x&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classIIOWrapper_1ad1e0779435221c690f93d6d05a76f176" kindref="member">m_channel_accel_y</ref><sp/>==<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classIIOWrapper_1ad1e0779435221c690f93d6d05a76f176" kindref="member">m_channel_accel_y</ref><sp/>=<sp/>iio_device_find_channel(<ref refid="classIIOWrapper_1aa54f78cb0c53f73b6562e303367b20be" kindref="member">m_dev</ref>,<sp/></highlight><highlight class="stringliteral">&quot;accel_y&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classIIOWrapper_1aa5f24dc01a83090154c57359a4668cd9" kindref="member">m_channel_accel_z</ref><sp/>==<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classIIOWrapper_1aa5f24dc01a83090154c57359a4668cd9" kindref="member">m_channel_accel_z</ref><sp/>=<sp/>iio_device_find_channel(<ref refid="classIIOWrapper_1aa54f78cb0c53f73b6562e303367b20be" kindref="member">m_dev</ref>,<sp/></highlight><highlight class="stringliteral">&quot;accel_z&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="187"><highlight class="normal"></highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classIIOWrapper_1a9b7c68d2cd7161e853b261c3e1363ef3" kindref="member">m_channel_anglvel_x</ref><sp/>==<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classIIOWrapper_1a9b7c68d2cd7161e853b261c3e1363ef3" kindref="member">m_channel_anglvel_x</ref><sp/>=<sp/>iio_device_find_channel(<ref refid="classIIOWrapper_1aa54f78cb0c53f73b6562e303367b20be" kindref="member">m_dev</ref>,<sp/></highlight><highlight class="stringliteral">&quot;anglvel_x&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classIIOWrapper_1a1b138c4cc8238e52a68f830363a04b8d" kindref="member">m_channel_anglvel_y</ref><sp/>==<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classIIOWrapper_1a1b138c4cc8238e52a68f830363a04b8d" kindref="member">m_channel_anglvel_y</ref><sp/>=<sp/>iio_device_find_channel(<ref refid="classIIOWrapper_1aa54f78cb0c53f73b6562e303367b20be" kindref="member">m_dev</ref>,<sp/></highlight><highlight class="stringliteral">&quot;anglvel_y&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classIIOWrapper_1a1b2384d209272000f673f25e7134d06d" kindref="member">m_channel_anglvel_z</ref><sp/>==<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classIIOWrapper_1a1b2384d209272000f673f25e7134d06d" kindref="member">m_channel_anglvel_z</ref><sp/>=<sp/>iio_device_find_channel(<ref refid="classIIOWrapper_1aa54f78cb0c53f73b6562e303367b20be" kindref="member">m_dev</ref>,<sp/></highlight><highlight class="stringliteral">&quot;anglvel_z&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="194"><highlight class="normal"></highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classIIOWrapper_1ae585f76ba5a1e003c9416bc87d5d7897" kindref="member">m_channel_deltaangl_x</ref><sp/>==<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classIIOWrapper_1ae585f76ba5a1e003c9416bc87d5d7897" kindref="member">m_channel_deltaangl_x</ref><sp/>=<sp/>iio_device_find_channel(<ref refid="classIIOWrapper_1aa54f78cb0c53f73b6562e303367b20be" kindref="member">m_dev</ref>,<sp/></highlight><highlight class="stringliteral">&quot;deltaangl_x&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classIIOWrapper_1ae585f76ba5a1e003c9416bc87d5d7897" kindref="member">m_channel_deltaangl_x</ref><sp/>==<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)<sp/>has_delta_channels<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="199"><highlight class="normal"></highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(has_delta_channels)<sp/>{</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classIIOWrapper_1a60cc79165edc458ad3af03ad976feb2d" kindref="member">m_channel_deltaangl_y</ref><sp/>==<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classIIOWrapper_1a60cc79165edc458ad3af03ad976feb2d" kindref="member">m_channel_deltaangl_y</ref><sp/>=<sp/>iio_device_find_channel(<ref refid="classIIOWrapper_1aa54f78cb0c53f73b6562e303367b20be" kindref="member">m_dev</ref>,<sp/></highlight><highlight class="stringliteral">&quot;deltaangl_y&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classIIOWrapper_1a7f9f033ffb31d35240723713a9769a6b" kindref="member">m_channel_deltaangl_z</ref><sp/>==<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classIIOWrapper_1a7f9f033ffb31d35240723713a9769a6b" kindref="member">m_channel_deltaangl_z</ref><sp/>=<sp/>iio_device_find_channel(<ref refid="classIIOWrapper_1aa54f78cb0c53f73b6562e303367b20be" kindref="member">m_dev</ref>,<sp/></highlight><highlight class="stringliteral">&quot;deltaangl_z&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="205"><highlight class="normal"></highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classIIOWrapper_1a13c3a4d31efdd2d329b3acc14b697aa4" kindref="member">m_channel_deltavelocity_x</ref><sp/>==<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classIIOWrapper_1a13c3a4d31efdd2d329b3acc14b697aa4" kindref="member">m_channel_deltavelocity_x</ref><sp/>=<sp/>iio_device_find_channel(<ref refid="classIIOWrapper_1aa54f78cb0c53f73b6562e303367b20be" kindref="member">m_dev</ref>,<sp/></highlight><highlight class="stringliteral">&quot;deltavelocity_x&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classIIOWrapper_1a7fba21deedbdc14adf0f4a46cb59fdff" kindref="member">m_channel_deltavelocity_y</ref><sp/>==<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classIIOWrapper_1a7fba21deedbdc14adf0f4a46cb59fdff" kindref="member">m_channel_deltavelocity_y</ref><sp/>=<sp/>iio_device_find_channel(<ref refid="classIIOWrapper_1aa54f78cb0c53f73b6562e303367b20be" kindref="member">m_dev</ref>,<sp/></highlight><highlight class="stringliteral">&quot;deltavelocity_y&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classIIOWrapper_1a38e16f0f6f97028d0eee31b7e98d40aa" kindref="member">m_channel_deltavelocity_z</ref><sp/>==<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classIIOWrapper_1a38e16f0f6f97028d0eee31b7e98d40aa" kindref="member">m_channel_deltavelocity_z</ref><sp/>=<sp/>iio_device_find_channel(<ref refid="classIIOWrapper_1aa54f78cb0c53f73b6562e303367b20be" kindref="member">m_dev</ref>,<sp/></highlight><highlight class="stringliteral">&quot;deltavelocity_z&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="213"><highlight class="normal"></highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classIIOWrapper_1a49a1068fef0e2c1c48096f6b88d103b7" kindref="member">m_channel_temp</ref><sp/>==<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)<sp/><ref refid="classIIOWrapper_1a49a1068fef0e2c1c48096f6b88d103b7" kindref="member">m_channel_temp</ref><sp/>=<sp/>iio_device_find_channel(<ref refid="classIIOWrapper_1aa54f78cb0c53f73b6562e303367b20be" kindref="member">m_dev</ref>,<sp/></highlight><highlight class="stringliteral">&quot;temp0&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="215"><highlight class="normal"></highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classIIOWrapper_1a335fdbf54f6ea1f463b4b7e9e74e0cc8" kindref="member">m_channel_timestamp</ref><sp/>==<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classIIOWrapper_1a335fdbf54f6ea1f463b4b7e9e74e0cc8" kindref="member">m_channel_timestamp</ref><sp/>=<sp/>iio_device_find_channel(<ref refid="classIIOWrapper_1aa54f78cb0c53f73b6562e303367b20be" kindref="member">m_dev</ref>,<sp/></highlight><highlight class="stringliteral">&quot;timestamp&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="218"><highlight class="normal"></highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classIIOWrapper_1a49a1068fef0e2c1c48096f6b88d103b7" kindref="member">m_channel_temp</ref>)<sp/>iio_channel_enable(<ref refid="classIIOWrapper_1a49a1068fef0e2c1c48096f6b88d103b7" kindref="member">m_channel_temp</ref>);</highlight></codeline>
<codeline lineno="220"><highlight class="normal"></highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classIIOWrapper_1a335fdbf54f6ea1f463b4b7e9e74e0cc8" kindref="member">m_channel_timestamp</ref>)<sp/>{</highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/>iio_channel_enable(<ref refid="classIIOWrapper_1a335fdbf54f6ea1f463b4b7e9e74e0cc8" kindref="member">m_channel_timestamp</ref>);</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/>has_timestamp_channel<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="225"><highlight class="normal"></highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classIIOWrapper_1ac1fb844f82d64a1b6e2e6cc6c089bd71" kindref="member">m_channel_accel_x</ref>)<sp/>iio_channel_attr_read_double(<ref refid="classIIOWrapper_1ac1fb844f82d64a1b6e2e6cc6c089bd71" kindref="member">m_channel_accel_x</ref>,<sp/></highlight><highlight class="stringliteral">&quot;scale&quot;</highlight><highlight class="normal">,<sp/>&amp;<ref refid="classIIOWrapper_1ac4a267304bf82229d032adf4c167c8be" kindref="member">m_scale_accel_x</ref>);</highlight></codeline>
<codeline lineno="227"><highlight class="normal"></highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classIIOWrapper_1ad1e0779435221c690f93d6d05a76f176" kindref="member">m_channel_accel_y</ref>)<sp/>iio_channel_attr_read_double(<ref refid="classIIOWrapper_1ad1e0779435221c690f93d6d05a76f176" kindref="member">m_channel_accel_y</ref>,<sp/></highlight><highlight class="stringliteral">&quot;scale&quot;</highlight><highlight class="normal">,<sp/>&amp;<ref refid="classIIOWrapper_1a39297415934efc288f6ced765861d19d" kindref="member">m_scale_accel_y</ref>);</highlight></codeline>
<codeline lineno="229"><highlight class="normal"></highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classIIOWrapper_1aa5f24dc01a83090154c57359a4668cd9" kindref="member">m_channel_accel_z</ref>)<sp/>iio_channel_attr_read_double(<ref refid="classIIOWrapper_1aa5f24dc01a83090154c57359a4668cd9" kindref="member">m_channel_accel_z</ref>,<sp/></highlight><highlight class="stringliteral">&quot;scale&quot;</highlight><highlight class="normal">,<sp/>&amp;<ref refid="classIIOWrapper_1a62c70c9017644054942d0a27c5582291" kindref="member">m_scale_accel_z</ref>);</highlight></codeline>
<codeline lineno="231"><highlight class="normal"></highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classIIOWrapper_1a9b7c68d2cd7161e853b261c3e1363ef3" kindref="member">m_channel_anglvel_x</ref>)</highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/>iio_channel_attr_read_double(<ref refid="classIIOWrapper_1a9b7c68d2cd7161e853b261c3e1363ef3" kindref="member">m_channel_anglvel_x</ref>,<sp/></highlight><highlight class="stringliteral">&quot;scale&quot;</highlight><highlight class="normal">,<sp/>&amp;<ref refid="classIIOWrapper_1a60201aaf24995e68520d846c5446cd23" kindref="member">m_scale_anglvel_x</ref>);</highlight></codeline>
<codeline lineno="234"><highlight class="normal"></highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classIIOWrapper_1a1b138c4cc8238e52a68f830363a04b8d" kindref="member">m_channel_anglvel_y</ref>)</highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/>iio_channel_attr_read_double(<ref refid="classIIOWrapper_1a1b138c4cc8238e52a68f830363a04b8d" kindref="member">m_channel_anglvel_y</ref>,<sp/></highlight><highlight class="stringliteral">&quot;scale&quot;</highlight><highlight class="normal">,<sp/>&amp;<ref refid="classIIOWrapper_1aabb94da5ca0c007e066898cd7767f5a2" kindref="member">m_scale_anglvel_y</ref>);</highlight></codeline>
<codeline lineno="237"><highlight class="normal"></highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classIIOWrapper_1a1b2384d209272000f673f25e7134d06d" kindref="member">m_channel_anglvel_z</ref>)</highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/>iio_channel_attr_read_double(<ref refid="classIIOWrapper_1a1b2384d209272000f673f25e7134d06d" kindref="member">m_channel_anglvel_z</ref>,<sp/></highlight><highlight class="stringliteral">&quot;scale&quot;</highlight><highlight class="normal">,<sp/>&amp;<ref refid="classIIOWrapper_1acdb2f23b02ac0650e12b76a02502e725" kindref="member">m_scale_anglvel_z</ref>);</highlight></codeline>
<codeline lineno="240"><highlight class="normal"></highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(has_delta_channels)<sp/>{</highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/>iio_channel_attr_read_double(<ref refid="classIIOWrapper_1ae585f76ba5a1e003c9416bc87d5d7897" kindref="member">m_channel_deltaangl_x</ref>,<sp/></highlight><highlight class="stringliteral">&quot;scale&quot;</highlight><highlight class="normal">,<sp/>&amp;<ref refid="classIIOWrapper_1a9d05021dd126ae2446d4bfc8e122d926" kindref="member">m_scale_deltaangl_x</ref>);</highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/>iio_channel_attr_read_double(<ref refid="classIIOWrapper_1a60cc79165edc458ad3af03ad976feb2d" kindref="member">m_channel_deltaangl_y</ref>,<sp/></highlight><highlight class="stringliteral">&quot;scale&quot;</highlight><highlight class="normal">,<sp/>&amp;<ref refid="classIIOWrapper_1a0a614ad2a77e11186da5c6d22743c1cc" kindref="member">m_scale_deltaangl_y</ref>);</highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/>iio_channel_attr_read_double(<ref refid="classIIOWrapper_1a7f9f033ffb31d35240723713a9769a6b" kindref="member">m_channel_deltaangl_z</ref>,<sp/></highlight><highlight class="stringliteral">&quot;scale&quot;</highlight><highlight class="normal">,<sp/>&amp;<ref refid="classIIOWrapper_1aa60f12b53d29ad7a17750da6cfe56a9b" kindref="member">m_scale_deltaangl_z</ref>);</highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/>iio_channel_attr_read_double(<ref refid="classIIOWrapper_1a13c3a4d31efdd2d329b3acc14b697aa4" kindref="member">m_channel_deltavelocity_x</ref>,<sp/></highlight><highlight class="stringliteral">&quot;scale&quot;</highlight><highlight class="normal">,<sp/>&amp;<ref refid="classIIOWrapper_1a6b769d1cfe0c7e2f09d7af4cdbea5c09" kindref="member">m_scale_deltavelocity_x</ref>);</highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/>iio_channel_attr_read_double(<ref refid="classIIOWrapper_1a7fba21deedbdc14adf0f4a46cb59fdff" kindref="member">m_channel_deltavelocity_y</ref>,<sp/></highlight><highlight class="stringliteral">&quot;scale&quot;</highlight><highlight class="normal">,<sp/>&amp;<ref refid="classIIOWrapper_1a5f29b5ac8ea9c50f38059626899f45ab" kindref="member">m_scale_deltavelocity_y</ref>);</highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/>iio_channel_attr_read_double(<ref refid="classIIOWrapper_1a38e16f0f6f97028d0eee31b7e98d40aa" kindref="member">m_channel_deltavelocity_z</ref>,<sp/></highlight><highlight class="stringliteral">&quot;scale&quot;</highlight><highlight class="normal">,<sp/>&amp;<ref refid="classIIOWrapper_1a822cfeb7635264d647df73dabd2ec4d6" kindref="member">m_scale_deltavelocity_z</ref>);</highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Set<sp/>scale<sp/>manually<sp/>in<sp/>case<sp/>delta<sp/>channels<sp/>are<sp/>not<sp/>available<sp/>in<sp/>the</highlight></codeline>
<codeline lineno="250"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>linux<sp/>driver.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classIIOWrapper_1aec9b699fd6110a7795a32e84343a1c1d" kindref="member">setDeltaAngleScales</ref>((</highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/>adis_device_id)dev_id);</highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classIIOWrapper_1a7287fe1ab85c9aebb746dff3baf7300d" kindref="member">setDeltaVelocityScales</ref>((</highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/>adis_device_id)dev_id);</highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="254"><highlight class="normal"></highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classIIOWrapper_1a49a1068fef0e2c1c48096f6b88d103b7" kindref="member">m_channel_temp</ref>)<sp/>iio_channel_attr_read_double(<ref refid="classIIOWrapper_1a49a1068fef0e2c1c48096f6b88d103b7" kindref="member">m_channel_temp</ref>,<sp/></highlight><highlight class="stringliteral">&quot;scale&quot;</highlight><highlight class="normal">,<sp/>&amp;<ref refid="classIIOWrapper_1ac33c30566920a17f9f0b20321c7bb4ae" kindref="member">m_scale_temp</ref>);</highlight></codeline>
<codeline lineno="256"><highlight class="normal"></highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="258"><highlight class="normal">}</highlight></codeline>
<codeline lineno="259"><highlight class="normal"></highlight></codeline>
<codeline lineno="260"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classIIOWrapper_1a3b99dc4a11bfc1044779befc29c9385a" kindref="member">IIOWrapper::updateField</ref>(uint32_t<sp/>reg,<sp/>uint32_t<sp/>val,<sp/>uint32_t<sp/>mask)</highlight></codeline>
<codeline lineno="261"><highlight class="normal">{</highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ret;</highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/>uint32_t<sp/>__val;</highlight></codeline>
<codeline lineno="264"><highlight class="normal"></highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="classIIOWrapper_1aa54f78cb0c53f73b6562e303367b20be" kindref="member">m_dev</ref>)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="266"><highlight class="normal"></highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/>ret<sp/>=<sp/>iio_device_reg_read(<ref refid="classIIOWrapper_1aa54f78cb0c53f73b6562e303367b20be" kindref="member">m_dev</ref>,<sp/>reg,<sp/>&amp;__val);</highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ret)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="269"><highlight class="normal"></highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/>__val<sp/>=<sp/>(__val<sp/>&amp;<sp/>~mask)<sp/>|<sp/>(val<sp/>&amp;<sp/>mask);</highlight></codeline>
<codeline lineno="271"><highlight class="normal"></highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(iio_device_reg_write(<ref refid="classIIOWrapper_1aa54f78cb0c53f73b6562e303367b20be" kindref="member">m_dev</ref>,<sp/>reg,<sp/>__val)<sp/>==<sp/>0);</highlight></codeline>
<codeline lineno="273"><highlight class="normal">}</highlight></codeline>
<codeline lineno="274"><highlight class="normal"></highlight></codeline>
<codeline lineno="275"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classIIOWrapper_1aec9b699fd6110a7795a32e84343a1c1d" kindref="member">IIOWrapper::setDeltaAngleScales</ref>(</highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/>adis_device_id<sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="276"><highlight class="normal">{</highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">id</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>ADIS16465_1:</highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>ADIS16467_1:</highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>ADIS16475_1:</highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>ADIS16477_1:</highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>ADIS16505_1:</highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>ADIS16507_1:</highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classIIOWrapper_1a9d05021dd126ae2446d4bfc8e122d926" kindref="member">m_scale_deltaangl_x</ref><sp/>=<sp/>0.000000002;</highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classIIOWrapper_1a0a614ad2a77e11186da5c6d22743c1cc" kindref="member">m_scale_deltaangl_y</ref><sp/>=<sp/>0.000000002;</highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classIIOWrapper_1aa60f12b53d29ad7a17750da6cfe56a9b" kindref="member">m_scale_deltaangl_z</ref><sp/>=<sp/>0.000000002;</highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>ADIS16465_2:</highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>ADIS16467_2:</highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>ADIS16475_2:</highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>ADIS16477_2:</highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>ADIS16501:</highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>ADIS16505_2:</highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>ADIS16507_2:</highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>ADIS16550:</highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>ADIS16550W:</highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classIIOWrapper_1a9d05021dd126ae2446d4bfc8e122d926" kindref="member">m_scale_deltaangl_x</ref><sp/>=<sp/>0.000000006;</highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classIIOWrapper_1a0a614ad2a77e11186da5c6d22743c1cc" kindref="member">m_scale_deltaangl_y</ref><sp/>=<sp/>0.000000006;</highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classIIOWrapper_1aa60f12b53d29ad7a17750da6cfe56a9b" kindref="member">m_scale_deltaangl_z</ref><sp/>=<sp/>0.000000006;</highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>ADIS16465_3:</highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>ADIS16467_3:</highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>ADIS16470:</highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>ADIS16475_3:</highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>ADIS16477_3:</highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>ADIS16500:</highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>ADIS16505_3:</highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>ADIS16507_3:</highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>ADIS16545_1:</highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>ADIS16545_2:</highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>ADIS16545_3:</highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>ADIS16547_1:</highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>ADIS16547_2:</highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>ADIS16547_3:</highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classIIOWrapper_1a9d05021dd126ae2446d4bfc8e122d926" kindref="member">m_scale_deltaangl_x</ref><sp/>=<sp/>0.000000017;</highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classIIOWrapper_1a0a614ad2a77e11186da5c6d22743c1cc" kindref="member">m_scale_deltaangl_y</ref><sp/>=<sp/>0.000000017;</highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classIIOWrapper_1aa60f12b53d29ad7a17750da6cfe56a9b" kindref="member">m_scale_deltaangl_z</ref><sp/>=<sp/>0.000000017;</highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>ADIS16575_2:</highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>ADIS16576_2:</highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>ADIS16577_2:</highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classIIOWrapper_1a9d05021dd126ae2446d4bfc8e122d926" kindref="member">m_scale_deltaangl_x</ref><sp/>=<sp/>0.000000003;</highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classIIOWrapper_1a0a614ad2a77e11186da5c6d22743c1cc" kindref="member">m_scale_deltaangl_y</ref><sp/>=<sp/>0.000000003;</highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classIIOWrapper_1aa60f12b53d29ad7a17750da6cfe56a9b" kindref="member">m_scale_deltaangl_z</ref><sp/>=<sp/>0.000000003;</highlight></codeline>
<codeline lineno="325"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="326"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>ADIS16575_3:</highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>ADIS16576_3:</highlight></codeline>
<codeline lineno="328"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>ADIS16577_3:</highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classIIOWrapper_1a9d05021dd126ae2446d4bfc8e122d926" kindref="member">m_scale_deltaangl_x</ref><sp/>=<sp/>0.000000016;</highlight></codeline>
<codeline lineno="330"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classIIOWrapper_1a0a614ad2a77e11186da5c6d22743c1cc" kindref="member">m_scale_deltaangl_y</ref><sp/>=<sp/>0.000000016;</highlight></codeline>
<codeline lineno="331"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classIIOWrapper_1aa60f12b53d29ad7a17750da6cfe56a9b" kindref="member">m_scale_deltaangl_z</ref><sp/>=<sp/>0.000000016;</highlight></codeline>
<codeline lineno="332"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="333"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="334"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="335"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="336"><highlight class="normal">}</highlight></codeline>
<codeline lineno="337"><highlight class="normal"></highlight></codeline>
<codeline lineno="338"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classIIOWrapper_1a7287fe1ab85c9aebb746dff3baf7300d" kindref="member">IIOWrapper::setDeltaVelocityScales</ref>(</highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/>adis_device_id<sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="339"><highlight class="normal">{</highlight></codeline>
<codeline lineno="340"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">id</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="341"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>ADIS16467_1:</highlight></codeline>
<codeline lineno="342"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>ADIS16467_2:</highlight></codeline>
<codeline lineno="343"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>ADIS16467_3:</highlight></codeline>
<codeline lineno="344"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>ADIS16470:</highlight></codeline>
<codeline lineno="345"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>ADIS16477_1:</highlight></codeline>
<codeline lineno="346"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>ADIS16477_2:</highlight></codeline>
<codeline lineno="347"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>ADIS16477_3:</highlight></codeline>
<codeline lineno="348"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>ADIS16500:</highlight></codeline>
<codeline lineno="349"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>ADIS16507_1:</highlight></codeline>
<codeline lineno="350"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>ADIS16507_2:</highlight></codeline>
<codeline lineno="351"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>ADIS16507_3:</highlight></codeline>
<codeline lineno="352"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classIIOWrapper_1a6b769d1cfe0c7e2f09d7af4cdbea5c09" kindref="member">m_scale_deltavelocity_x</ref><sp/>=<sp/>0.000000186;</highlight></codeline>
<codeline lineno="353"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classIIOWrapper_1a5f29b5ac8ea9c50f38059626899f45ab" kindref="member">m_scale_deltavelocity_y</ref><sp/>=<sp/>0.000000186;</highlight></codeline>
<codeline lineno="354"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classIIOWrapper_1a822cfeb7635264d647df73dabd2ec4d6" kindref="member">m_scale_deltavelocity_z</ref><sp/>=<sp/>0.000000186;</highlight></codeline>
<codeline lineno="355"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="356"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>ADIS16465_1:</highlight></codeline>
<codeline lineno="357"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>ADIS16465_2:</highlight></codeline>
<codeline lineno="358"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>ADIS16465_3:</highlight></codeline>
<codeline lineno="359"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>ADIS16475_1:</highlight></codeline>
<codeline lineno="360"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>ADIS16475_2:</highlight></codeline>
<codeline lineno="361"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>ADIS16475_3:</highlight></codeline>
<codeline lineno="362"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>ADIS16505_1:</highlight></codeline>
<codeline lineno="363"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>ADIS16505_2:</highlight></codeline>
<codeline lineno="364"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>ADIS16505_3:</highlight></codeline>
<codeline lineno="365"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>ADIS16545_1:</highlight></codeline>
<codeline lineno="366"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>ADIS16545_2:</highlight></codeline>
<codeline lineno="367"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>ADIS16545_3:</highlight></codeline>
<codeline lineno="368"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>ADIS16547_1:</highlight></codeline>
<codeline lineno="369"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>ADIS16547_2:</highlight></codeline>
<codeline lineno="370"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>ADIS16547_3:</highlight></codeline>
<codeline lineno="371"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>ADIS16575_2:</highlight></codeline>
<codeline lineno="372"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>ADIS16575_3:</highlight></codeline>
<codeline lineno="373"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>ADIS16576_2:</highlight></codeline>
<codeline lineno="374"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>ADIS16576_3:</highlight></codeline>
<codeline lineno="375"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>ADIS16577_2:</highlight></codeline>
<codeline lineno="376"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>ADIS16577_3:</highlight></codeline>
<codeline lineno="377"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classIIOWrapper_1a6b769d1cfe0c7e2f09d7af4cdbea5c09" kindref="member">m_scale_deltavelocity_x</ref><sp/>=<sp/>0.000000046;</highlight></codeline>
<codeline lineno="378"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classIIOWrapper_1a5f29b5ac8ea9c50f38059626899f45ab" kindref="member">m_scale_deltavelocity_y</ref><sp/>=<sp/>0.000000046;</highlight></codeline>
<codeline lineno="379"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classIIOWrapper_1a822cfeb7635264d647df73dabd2ec4d6" kindref="member">m_scale_deltavelocity_z</ref><sp/>=<sp/>0.000000046;</highlight></codeline>
<codeline lineno="380"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="381"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>ADIS16501:</highlight></codeline>
<codeline lineno="382"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>ADIS16550:</highlight></codeline>
<codeline lineno="383"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>ADIS16550W:</highlight></codeline>
<codeline lineno="384"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classIIOWrapper_1a6b769d1cfe0c7e2f09d7af4cdbea5c09" kindref="member">m_scale_deltavelocity_x</ref><sp/>=<sp/>0.000000058;</highlight></codeline>
<codeline lineno="385"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classIIOWrapper_1a5f29b5ac8ea9c50f38059626899f45ab" kindref="member">m_scale_deltavelocity_y</ref><sp/>=<sp/>0.000000058;</highlight></codeline>
<codeline lineno="386"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classIIOWrapper_1a822cfeb7635264d647df73dabd2ec4d6" kindref="member">m_scale_deltavelocity_z</ref><sp/>=<sp/>0.000000058;</highlight></codeline>
<codeline lineno="387"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="388"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="389"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="390"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="391"><highlight class="normal">}</highlight></codeline>
<codeline lineno="392"><highlight class="normal"></highlight></codeline>
<codeline lineno="393"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classIIOWrapper_1a807ef883b1b5a6119ce4ab75d21985c5" kindref="member">IIOWrapper::stopBufferAcquisition</ref>()</highlight></codeline>
<codeline lineno="394"><highlight class="normal">{</highlight></codeline>
<codeline lineno="395"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classIIOWrapper_1ac6c3cec6da827146507437ee27296a96" kindref="member">m_dev_buffer</ref><sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="396"><highlight class="normal"><sp/><sp/><sp/><sp/>iio_buffer_destroy(<ref refid="classIIOWrapper_1ac6c3cec6da827146507437ee27296a96" kindref="member">m_dev_buffer</ref>);</highlight></codeline>
<codeline lineno="397"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classIIOWrapper_1ac6c3cec6da827146507437ee27296a96" kindref="member">m_dev_buffer</ref><sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="398"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="399"><highlight class="normal">}</highlight></codeline>
<codeline lineno="400"><highlight class="normal"></highlight></codeline>
<codeline lineno="401"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>ssize_t<sp/>demux_sample(</highlight></codeline>
<codeline lineno="402"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>iio_channel<sp/>*<sp/>chn,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<sp/>sample,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>size,<sp/>__attribute__((unused))<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<sp/>d)</highlight></codeline>
<codeline lineno="403"><highlight class="normal">{</highlight></codeline>
<codeline lineno="404"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(size<sp/>==<sp/>2)<sp/>{</highlight></codeline>
<codeline lineno="405"><highlight class="normal"><sp/><sp/><sp/><sp/>int16_t<sp/>val;</highlight></codeline>
<codeline lineno="406"><highlight class="normal"><sp/><sp/><sp/><sp/>iio_channel_convert(chn,<sp/>&amp;val,<sp/>sample);</highlight></codeline>
<codeline lineno="407"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="iio__wrapper_8cpp_1a9c684a2e63c59045ea4d135add263bb9" kindref="member">buff_data</ref>[iio_channel_get_index(chn)][<ref refid="iio__wrapper_8cpp_1a51e5bf2f116b1e09c8b9ed29bb4e326b" kindref="member">buff_write_idx</ref>]<sp/>=<sp/>val;</highlight></codeline>
<codeline lineno="408"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!has_timestamp_channel)<sp/>{</highlight></codeline>
<codeline lineno="409"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>timestamp<sp/>channel<sp/>is<sp/>not<sp/>available,<sp/>have<sp/>to<sp/>update<sp/>buff_write_idx</highlight></codeline>
<codeline lineno="410"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="411"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="iio__wrapper_8cpp_1a51e5bf2f116b1e09c8b9ed29bb4e326b" kindref="member">buff_write_idx</ref>++;</highlight></codeline>
<codeline lineno="412"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="413"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(size<sp/>==<sp/>4)<sp/>{</highlight></codeline>
<codeline lineno="414"><highlight class="normal"><sp/><sp/><sp/><sp/>int32_t<sp/>val;</highlight></codeline>
<codeline lineno="415"><highlight class="normal"><sp/><sp/><sp/><sp/>iio_channel_convert(chn,<sp/>&amp;val,<sp/>sample);</highlight></codeline>
<codeline lineno="416"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="iio__wrapper_8cpp_1a9c684a2e63c59045ea4d135add263bb9" kindref="member">buff_data</ref>[iio_channel_get_index(chn)][<ref refid="iio__wrapper_8cpp_1a51e5bf2f116b1e09c8b9ed29bb4e326b" kindref="member">buff_write_idx</ref>]<sp/>=<sp/>val;</highlight></codeline>
<codeline lineno="417"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!has_timestamp_channel)<sp/>{</highlight></codeline>
<codeline lineno="418"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>timestamp<sp/>channel<sp/>is<sp/>not<sp/>available,<sp/>have<sp/>to<sp/>update<sp/>buff_write_idx<sp/>for<sp/>last</highlight></codeline>
<codeline lineno="419"><highlight class="comment"><sp/>*<sp/>read<sp/>channel<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="420"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>ADIS_HAS_DELTA_BURST</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="421"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(iio_channel_get_index(chn)<sp/>==<sp/>CHAN_DELTA_VEL_Z)<sp/><ref refid="iio__wrapper_8cpp_1a51e5bf2f116b1e09c8b9ed29bb4e326b" kindref="member">buff_write_idx</ref>++;</highlight></codeline>
<codeline lineno="422"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="423"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="424"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="425"><highlight class="normal"><sp/><sp/><sp/><sp/>int64_t<sp/>val;</highlight></codeline>
<codeline lineno="426"><highlight class="normal"><sp/><sp/><sp/><sp/>iio_channel_convert(chn,<sp/>&amp;val,<sp/>sample);</highlight></codeline>
<codeline lineno="427"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="iio__wrapper_8cpp_1a9c684a2e63c59045ea4d135add263bb9" kindref="member">buff_data</ref>[CHAN_DATA_TIMESTAMP][<ref refid="iio__wrapper_8cpp_1a51e5bf2f116b1e09c8b9ed29bb4e326b" kindref="member">buff_write_idx</ref>]<sp/>=<sp/>val;</highlight></codeline>
<codeline lineno="428"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="iio__wrapper_8cpp_1a9c684a2e63c59045ea4d135add263bb9" kindref="member">buff_data</ref>[CHAN_DATA_TIMESTAMP<sp/>+<sp/>1][<ref refid="iio__wrapper_8cpp_1a51e5bf2f116b1e09c8b9ed29bb4e326b" kindref="member">buff_write_idx</ref>++]<sp/>=<sp/>val<sp/>&gt;&gt;<sp/>32;</highlight></codeline>
<codeline lineno="429"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="430"><highlight class="normal"></highlight></codeline>
<codeline lineno="431"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="iio__wrapper_8cpp_1a51e5bf2f116b1e09c8b9ed29bb4e326b" kindref="member">buff_write_idx</ref><sp/>==<sp/><ref refid="iio__wrapper_8cpp_1ad00387e7a9a10b544928c5afc4ded5b7" kindref="member">no_of_samp</ref>)<sp/><ref refid="iio__wrapper_8cpp_1a51e5bf2f116b1e09c8b9ed29bb4e326b" kindref="member">buff_write_idx</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="432"><highlight class="normal"></highlight></codeline>
<codeline lineno="433"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>size;</highlight></codeline>
<codeline lineno="434"><highlight class="normal">}</highlight></codeline>
<codeline lineno="435"><highlight class="normal"></highlight></codeline>
<codeline lineno="436"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classIIOWrapper_1ae179fe95e80ad6624c6782de04c854ed" kindref="member">IIOWrapper::updateBuffer</ref>(uint32_t<sp/>data_selection)</highlight></codeline>
<codeline lineno="437"><highlight class="normal">{</highlight></codeline>
<codeline lineno="438"><highlight class="normal"><sp/><sp/>ssize_t<sp/>ret;</highlight></codeline>
<codeline lineno="439"><highlight class="normal"></highlight></codeline>
<codeline lineno="440"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="iio__wrapper_8cpp_1a60e90dbaa463bf8637eb6f63512b97d1" kindref="member">current_data_selection</ref><sp/>!=<sp/>data_selection)<sp/>{</highlight></codeline>
<codeline lineno="441"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classIIOWrapper_1a807ef883b1b5a6119ce4ab75d21985c5" kindref="member">stopBufferAcquisition</ref>();</highlight></codeline>
<codeline lineno="442"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(data_selection<sp/>==<sp/>ACCEL_GYRO_BUFFERED_DATA)<sp/>{</highlight></codeline>
<codeline lineno="443"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>ADIS_HAS_DELTA_BURST</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="444"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(has_delta_channels)<sp/>{</highlight></codeline>
<codeline lineno="445"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>iio_channel_disable(<ref refid="classIIOWrapper_1ae585f76ba5a1e003c9416bc87d5d7897" kindref="member">m_channel_deltaangl_x</ref>);</highlight></codeline>
<codeline lineno="446"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>iio_channel_disable(<ref refid="classIIOWrapper_1a60cc79165edc458ad3af03ad976feb2d" kindref="member">m_channel_deltaangl_y</ref>);</highlight></codeline>
<codeline lineno="447"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>iio_channel_disable(<ref refid="classIIOWrapper_1a7f9f033ffb31d35240723713a9769a6b" kindref="member">m_channel_deltaangl_z</ref>);</highlight></codeline>
<codeline lineno="448"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>iio_channel_disable(<ref refid="classIIOWrapper_1a13c3a4d31efdd2d329b3acc14b697aa4" kindref="member">m_channel_deltavelocity_x</ref>);</highlight></codeline>
<codeline lineno="449"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>iio_channel_disable(<ref refid="classIIOWrapper_1a7fba21deedbdc14adf0f4a46cb59fdff" kindref="member">m_channel_deltavelocity_y</ref>);</highlight></codeline>
<codeline lineno="450"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>iio_channel_disable(<ref refid="classIIOWrapper_1a38e16f0f6f97028d0eee31b7e98d40aa" kindref="member">m_channel_deltavelocity_z</ref>);</highlight></codeline>
<codeline lineno="451"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="452"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="453"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>iio_channel_enable(<ref refid="classIIOWrapper_1ac1fb844f82d64a1b6e2e6cc6c089bd71" kindref="member">m_channel_accel_x</ref>);</highlight></codeline>
<codeline lineno="454"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>iio_channel_enable(<ref refid="classIIOWrapper_1ad1e0779435221c690f93d6d05a76f176" kindref="member">m_channel_accel_y</ref>);</highlight></codeline>
<codeline lineno="455"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>iio_channel_enable(<ref refid="classIIOWrapper_1aa5f24dc01a83090154c57359a4668cd9" kindref="member">m_channel_accel_z</ref>);</highlight></codeline>
<codeline lineno="456"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>iio_channel_enable(<ref refid="classIIOWrapper_1a9b7c68d2cd7161e853b261c3e1363ef3" kindref="member">m_channel_anglvel_x</ref>);</highlight></codeline>
<codeline lineno="457"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>iio_channel_enable(<ref refid="classIIOWrapper_1a1b138c4cc8238e52a68f830363a04b8d" kindref="member">m_channel_anglvel_y</ref>);</highlight></codeline>
<codeline lineno="458"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>iio_channel_enable(<ref refid="classIIOWrapper_1a1b2384d209272000f673f25e7134d06d" kindref="member">m_channel_anglvel_z</ref>);</highlight></codeline>
<codeline lineno="459"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="460"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>iio_channel_disable(<ref refid="classIIOWrapper_1ac1fb844f82d64a1b6e2e6cc6c089bd71" kindref="member">m_channel_accel_x</ref>);</highlight></codeline>
<codeline lineno="461"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>iio_channel_disable(<ref refid="classIIOWrapper_1ad1e0779435221c690f93d6d05a76f176" kindref="member">m_channel_accel_y</ref>);</highlight></codeline>
<codeline lineno="462"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>iio_channel_disable(<ref refid="classIIOWrapper_1aa5f24dc01a83090154c57359a4668cd9" kindref="member">m_channel_accel_z</ref>);</highlight></codeline>
<codeline lineno="463"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>iio_channel_disable(<ref refid="classIIOWrapper_1a9b7c68d2cd7161e853b261c3e1363ef3" kindref="member">m_channel_anglvel_x</ref>);</highlight></codeline>
<codeline lineno="464"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>iio_channel_disable(<ref refid="classIIOWrapper_1a1b138c4cc8238e52a68f830363a04b8d" kindref="member">m_channel_anglvel_y</ref>);</highlight></codeline>
<codeline lineno="465"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>iio_channel_disable(<ref refid="classIIOWrapper_1a1b2384d209272000f673f25e7134d06d" kindref="member">m_channel_anglvel_z</ref>);</highlight></codeline>
<codeline lineno="466"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>ADIS_HAS_DELTA_BURST</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="467"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(has_delta_channels)<sp/>{</highlight></codeline>
<codeline lineno="468"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>iio_channel_enable(<ref refid="classIIOWrapper_1ae585f76ba5a1e003c9416bc87d5d7897" kindref="member">m_channel_deltaangl_x</ref>);</highlight></codeline>
<codeline lineno="469"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>iio_channel_enable(<ref refid="classIIOWrapper_1a60cc79165edc458ad3af03ad976feb2d" kindref="member">m_channel_deltaangl_y</ref>);</highlight></codeline>
<codeline lineno="470"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>iio_channel_enable(<ref refid="classIIOWrapper_1a7f9f033ffb31d35240723713a9769a6b" kindref="member">m_channel_deltaangl_z</ref>);</highlight></codeline>
<codeline lineno="471"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>iio_channel_enable(<ref refid="classIIOWrapper_1a13c3a4d31efdd2d329b3acc14b697aa4" kindref="member">m_channel_deltavelocity_x</ref>);</highlight></codeline>
<codeline lineno="472"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>iio_channel_enable(<ref refid="classIIOWrapper_1a7fba21deedbdc14adf0f4a46cb59fdff" kindref="member">m_channel_deltavelocity_y</ref>);</highlight></codeline>
<codeline lineno="473"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>iio_channel_enable(<ref refid="classIIOWrapper_1a38e16f0f6f97028d0eee31b7e98d40aa" kindref="member">m_channel_deltavelocity_z</ref>);</highlight></codeline>
<codeline lineno="474"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="475"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classIIOWrapper_1a807ef883b1b5a6119ce4ab75d21985c5" kindref="member">stopBufferAcquisition</ref>();</highlight></codeline>
<codeline lineno="476"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="477"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="478"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="479"><highlight class="normal"></highlight></codeline>
<codeline lineno="480"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="iio__wrapper_8cpp_1a60e90dbaa463bf8637eb6f63512b97d1" kindref="member">current_data_selection</ref><sp/>=<sp/>data_selection;</highlight></codeline>
<codeline lineno="481"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="482"><highlight class="normal"></highlight></codeline>
<codeline lineno="483"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classIIOWrapper_1ac6c3cec6da827146507437ee27296a96" kindref="member">m_dev_buffer</ref><sp/>==<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="484"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classIIOWrapper_1ac8584252d4635e9a3c00f464cc176b17" kindref="member">sampling_frequency</ref>(&amp;<ref refid="iio__wrapper_8cpp_1a4ce011ebc45fa44e68df76ab78144541" kindref="member">samp_freq</ref>);</highlight></codeline>
<codeline lineno="485"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="iio__wrapper_8cpp_1ad00387e7a9a10b544928c5afc4ded5b7" kindref="member">no_of_samp</ref><sp/>=<sp/><ref refid="iio__wrapper_8cpp_1a2caa0716e56afb87d491d87fb4460b62" kindref="member">MAX_NO_OF_SAMPLES</ref>;</highlight></codeline>
<codeline lineno="486"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="iio__wrapper_8cpp_1ad00387e7a9a10b544928c5afc4ded5b7" kindref="member">no_of_samp</ref><sp/>&gt;<sp/><ref refid="iio__wrapper_8cpp_1a4ce011ebc45fa44e68df76ab78144541" kindref="member">samp_freq</ref>)</highlight></codeline>
<codeline lineno="487"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Overwrite<sp/>number<sp/>of<sp/>samples<sp/>based<sp/>on<sp/>sampling<sp/>frequency,<sp/>to<sp/>avoid</highlight></codeline>
<codeline lineno="488"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>timeout<sp/>errors<sp/>from<sp/>LibIIO<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="489"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="iio__wrapper_8cpp_1ad00387e7a9a10b544928c5afc4ded5b7" kindref="member">no_of_samp</ref><sp/>=<sp/><ref refid="iio__wrapper_8cpp_1a4ce011ebc45fa44e68df76ab78144541" kindref="member">samp_freq</ref>;</highlight></codeline>
<codeline lineno="490"><highlight class="normal"></highlight></codeline>
<codeline lineno="491"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classIIOWrapper_1ac6c3cec6da827146507437ee27296a96" kindref="member">m_dev_buffer</ref><sp/>=<sp/>iio_device_create_buffer(<ref refid="classIIOWrapper_1aa54f78cb0c53f73b6562e303367b20be" kindref="member">m_dev</ref>,<sp/><ref refid="iio__wrapper_8cpp_1ad00387e7a9a10b544928c5afc4ded5b7" kindref="member">no_of_samp</ref>,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="492"><highlight class="normal"></highlight></codeline>
<codeline lineno="493"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="classIIOWrapper_1ac6c3cec6da827146507437ee27296a96" kindref="member">m_dev_buffer</ref>)<sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>std::runtime_error(</highlight><highlight class="stringliteral">&quot;Exception:<sp/>device<sp/>buffer<sp/>is<sp/>null&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="494"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="iio__wrapper_8cpp_1a1532e6c5918d0afd3d2b45eaff3f6f68" kindref="member">buff_read_idx</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="495"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="iio__wrapper_8cpp_1a51e5bf2f116b1e09c8b9ed29bb4e326b" kindref="member">buff_write_idx</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="496"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="497"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="iio__wrapper_8cpp_1a1532e6c5918d0afd3d2b45eaff3f6f68" kindref="member">buff_read_idx</ref>++;</highlight></codeline>
<codeline lineno="498"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="iio__wrapper_8cpp_1a1532e6c5918d0afd3d2b45eaff3f6f68" kindref="member">buff_read_idx</ref><sp/>&lt;<sp/><ref refid="iio__wrapper_8cpp_1ad00387e7a9a10b544928c5afc4ded5b7" kindref="member">no_of_samp</ref>)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="499"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="500"><highlight class="normal"></highlight></codeline>
<codeline lineno="501"><highlight class="normal"><sp/><sp/>ret<sp/>=<sp/>iio_buffer_refill(<ref refid="classIIOWrapper_1ac6c3cec6da827146507437ee27296a96" kindref="member">m_dev_buffer</ref>);</highlight></codeline>
<codeline lineno="502"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((ret<sp/>==<sp/>0)<sp/>||<sp/>(ret<sp/>==<sp/>-110))<sp/>{</highlight></codeline>
<codeline lineno="503"><highlight class="normal"><sp/><sp/><sp/><sp/>RCLCPP_INFO(</highlight></codeline>
<codeline lineno="504"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>rclcpp::get_logger(</highlight><highlight class="stringliteral">&quot;rclcpp_iiowrapper&quot;</highlight><highlight class="normal">),<sp/></highlight><highlight class="stringliteral">&quot;no<sp/>samples<sp/>available<sp/>yet,<sp/>retrying<sp/>ret<sp/>=<sp/>%ld&quot;</highlight><highlight class="normal">,<sp/>ret);</highlight></codeline>
<codeline lineno="505"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="506"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="507"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ret<sp/>&lt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="508"><highlight class="normal"><sp/><sp/><sp/><sp/>RCLCPP_INFO(rclcpp::get_logger(</highlight><highlight class="stringliteral">&quot;rclcpp_iiowrapper&quot;</highlight><highlight class="normal">),<sp/></highlight><highlight class="stringliteral">&quot;buffer<sp/>refill<sp/>error<sp/>status<sp/>%ld&quot;</highlight><highlight class="normal">,<sp/>ret);</highlight></codeline>
<codeline lineno="509"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classIIOWrapper_1a807ef883b1b5a6119ce4ab75d21985c5" kindref="member">stopBufferAcquisition</ref>();</highlight></codeline>
<codeline lineno="510"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="511"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="512"><highlight class="normal"><sp/><sp/>iio_buffer_foreach_sample(<ref refid="classIIOWrapper_1ac6c3cec6da827146507437ee27296a96" kindref="member">m_dev_buffer</ref>,<sp/>demux_sample,<sp/>NULL);</highlight></codeline>
<codeline lineno="513"><highlight class="normal"><sp/><sp/><ref refid="iio__wrapper_8cpp_1a1532e6c5918d0afd3d2b45eaff3f6f68" kindref="member">buff_read_idx</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="514"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="515"><highlight class="normal">}</highlight></codeline>
<codeline lineno="516"><highlight class="normal"></highlight></codeline>
<codeline lineno="517"><highlight class="normal"></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="classIIOWrapper_1a24d03c22a08baf0c5209d7f31c9d0533" kindref="member">IIOWrapper::getBuffLinearAccelerationX</ref>()</highlight></codeline>
<codeline lineno="518"><highlight class="normal">{</highlight></codeline>
<codeline lineno="519"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(int32_t)<ref refid="iio__wrapper_8cpp_1a9c684a2e63c59045ea4d135add263bb9" kindref="member">buff_data</ref>[CHAN_ACCEL_X][<ref refid="iio__wrapper_8cpp_1a1532e6c5918d0afd3d2b45eaff3f6f68" kindref="member">buff_read_idx</ref>]<sp/>*<sp/><ref refid="classIIOWrapper_1ac4a267304bf82229d032adf4c167c8be" kindref="member">m_scale_accel_x</ref>;</highlight></codeline>
<codeline lineno="520"><highlight class="normal">}</highlight></codeline>
<codeline lineno="521"><highlight class="normal"></highlight></codeline>
<codeline lineno="522"><highlight class="normal"></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="classIIOWrapper_1a809c113401e38fdf0fc660735a2192e1" kindref="member">IIOWrapper::getBuffLinearAccelerationY</ref>()</highlight></codeline>
<codeline lineno="523"><highlight class="normal">{</highlight></codeline>
<codeline lineno="524"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(int32_t)<ref refid="iio__wrapper_8cpp_1a9c684a2e63c59045ea4d135add263bb9" kindref="member">buff_data</ref>[CHAN_ACCEL_Y][<ref refid="iio__wrapper_8cpp_1a1532e6c5918d0afd3d2b45eaff3f6f68" kindref="member">buff_read_idx</ref>]<sp/>*<sp/><ref refid="classIIOWrapper_1a39297415934efc288f6ced765861d19d" kindref="member">m_scale_accel_y</ref>;</highlight></codeline>
<codeline lineno="525"><highlight class="normal">}</highlight></codeline>
<codeline lineno="526"><highlight class="normal"></highlight></codeline>
<codeline lineno="527"><highlight class="normal"></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="classIIOWrapper_1a41e760380fa5036a652201e2df50c889" kindref="member">IIOWrapper::getBuffLinearAccelerationZ</ref>()</highlight></codeline>
<codeline lineno="528"><highlight class="normal">{</highlight></codeline>
<codeline lineno="529"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(int32_t)<ref refid="iio__wrapper_8cpp_1a9c684a2e63c59045ea4d135add263bb9" kindref="member">buff_data</ref>[CHAN_ACCEL_Z][<ref refid="iio__wrapper_8cpp_1a1532e6c5918d0afd3d2b45eaff3f6f68" kindref="member">buff_read_idx</ref>]<sp/>*<sp/><ref refid="classIIOWrapper_1a62c70c9017644054942d0a27c5582291" kindref="member">m_scale_accel_z</ref>;</highlight></codeline>
<codeline lineno="530"><highlight class="normal">}</highlight></codeline>
<codeline lineno="531"><highlight class="normal"></highlight></codeline>
<codeline lineno="532"><highlight class="normal"></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="classIIOWrapper_1ab98be528a5805d948e0cbf8c81bdac26" kindref="member">IIOWrapper::getBuffAngularVelocityX</ref>()</highlight></codeline>
<codeline lineno="533"><highlight class="normal">{</highlight></codeline>
<codeline lineno="534"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(int32_t)<ref refid="iio__wrapper_8cpp_1a9c684a2e63c59045ea4d135add263bb9" kindref="member">buff_data</ref>[CHAN_GYRO_X][<ref refid="iio__wrapper_8cpp_1a1532e6c5918d0afd3d2b45eaff3f6f68" kindref="member">buff_read_idx</ref>]<sp/>*<sp/><ref refid="classIIOWrapper_1a60201aaf24995e68520d846c5446cd23" kindref="member">m_scale_anglvel_x</ref>;</highlight></codeline>
<codeline lineno="535"><highlight class="normal">}</highlight></codeline>
<codeline lineno="536"><highlight class="normal"></highlight></codeline>
<codeline lineno="537"><highlight class="normal"></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="classIIOWrapper_1a530c457c0cd4d81951b7d174072fd75b" kindref="member">IIOWrapper::getBuffAngularVelocityY</ref>()</highlight></codeline>
<codeline lineno="538"><highlight class="normal">{</highlight></codeline>
<codeline lineno="539"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(int32_t)<ref refid="iio__wrapper_8cpp_1a9c684a2e63c59045ea4d135add263bb9" kindref="member">buff_data</ref>[CHAN_GYRO_Y][<ref refid="iio__wrapper_8cpp_1a1532e6c5918d0afd3d2b45eaff3f6f68" kindref="member">buff_read_idx</ref>]<sp/>*<sp/><ref refid="classIIOWrapper_1aabb94da5ca0c007e066898cd7767f5a2" kindref="member">m_scale_anglvel_y</ref>;</highlight></codeline>
<codeline lineno="540"><highlight class="normal">}</highlight></codeline>
<codeline lineno="541"><highlight class="normal"></highlight></codeline>
<codeline lineno="542"><highlight class="normal"></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="classIIOWrapper_1a4d5286b33d41295f1cc6567f67b4d6d2" kindref="member">IIOWrapper::getBuffAngularVelocityZ</ref>()</highlight></codeline>
<codeline lineno="543"><highlight class="normal">{</highlight></codeline>
<codeline lineno="544"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(int32_t)<ref refid="iio__wrapper_8cpp_1a9c684a2e63c59045ea4d135add263bb9" kindref="member">buff_data</ref>[CHAN_GYRO_Z][<ref refid="iio__wrapper_8cpp_1a1532e6c5918d0afd3d2b45eaff3f6f68" kindref="member">buff_read_idx</ref>]<sp/>*<sp/><ref refid="classIIOWrapper_1acdb2f23b02ac0650e12b76a02502e725" kindref="member">m_scale_anglvel_z</ref>;</highlight></codeline>
<codeline lineno="545"><highlight class="normal">}</highlight></codeline>
<codeline lineno="546"><highlight class="normal"></highlight></codeline>
<codeline lineno="547"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>ADIS_HAS_DELTA_BURST</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="548"><highlight class="normal"></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>IIOWrapper::getBuffDeltaAngleX()</highlight></codeline>
<codeline lineno="549"><highlight class="normal">{</highlight></codeline>
<codeline lineno="550"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!has_delta_channels)<sp/>{</highlight></codeline>
<codeline lineno="551"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="552"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classIIOWrapper_1a78ff447b7bccef0dd8abc5239ddcda27" kindref="member">getConvertedDeltaAngleXFromDebug</ref>(result))</highlight></codeline>
<codeline lineno="553"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="554"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="555"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0.0;</highlight></codeline>
<codeline lineno="556"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="557"><highlight class="normal"></highlight></codeline>
<codeline lineno="558"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(int32_t)<ref refid="iio__wrapper_8cpp_1a9c684a2e63c59045ea4d135add263bb9" kindref="member">buff_data</ref>[CHAN_DELTA_ANGL_X][<ref refid="iio__wrapper_8cpp_1a1532e6c5918d0afd3d2b45eaff3f6f68" kindref="member">buff_read_idx</ref>]<sp/>*<sp/><ref refid="classIIOWrapper_1a9d05021dd126ae2446d4bfc8e122d926" kindref="member">m_scale_deltaangl_x</ref>;</highlight></codeline>
<codeline lineno="559"><highlight class="normal">}</highlight></codeline>
<codeline lineno="560"><highlight class="normal"></highlight></codeline>
<codeline lineno="561"><highlight class="normal"></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>IIOWrapper::getBuffDeltaAngleY()</highlight></codeline>
<codeline lineno="562"><highlight class="normal">{</highlight></codeline>
<codeline lineno="563"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!has_delta_channels)<sp/>{</highlight></codeline>
<codeline lineno="564"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="565"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classIIOWrapper_1aa52383a8d31690b73f74539cc617e7d7" kindref="member">getConvertedDeltaAngleYFromDebug</ref>(result))</highlight></codeline>
<codeline lineno="566"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="567"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="568"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0.0;</highlight></codeline>
<codeline lineno="569"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="570"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(int32_t)<ref refid="iio__wrapper_8cpp_1a9c684a2e63c59045ea4d135add263bb9" kindref="member">buff_data</ref>[CHAN_DELTA_ANGL_Y][<ref refid="iio__wrapper_8cpp_1a1532e6c5918d0afd3d2b45eaff3f6f68" kindref="member">buff_read_idx</ref>]<sp/>*<sp/><ref refid="classIIOWrapper_1a0a614ad2a77e11186da5c6d22743c1cc" kindref="member">m_scale_deltaangl_y</ref>;</highlight></codeline>
<codeline lineno="571"><highlight class="normal">}</highlight></codeline>
<codeline lineno="572"><highlight class="normal"></highlight></codeline>
<codeline lineno="573"><highlight class="normal"></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>IIOWrapper::getBuffDeltaAngleZ()</highlight></codeline>
<codeline lineno="574"><highlight class="normal">{</highlight></codeline>
<codeline lineno="575"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!has_delta_channels)<sp/>{</highlight></codeline>
<codeline lineno="576"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="577"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classIIOWrapper_1adb513e9bdd99b7fcf9accec73faba53e" kindref="member">getConvertedDeltaAngleZFromDebug</ref>(result))</highlight></codeline>
<codeline lineno="578"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="579"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="580"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0.0;</highlight></codeline>
<codeline lineno="581"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="582"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(int32_t)<ref refid="iio__wrapper_8cpp_1a9c684a2e63c59045ea4d135add263bb9" kindref="member">buff_data</ref>[CHAN_DELTA_ANGL_Z][<ref refid="iio__wrapper_8cpp_1a1532e6c5918d0afd3d2b45eaff3f6f68" kindref="member">buff_read_idx</ref>]<sp/>*<sp/><ref refid="classIIOWrapper_1aa60f12b53d29ad7a17750da6cfe56a9b" kindref="member">m_scale_deltaangl_z</ref>;</highlight></codeline>
<codeline lineno="583"><highlight class="normal">}</highlight></codeline>
<codeline lineno="584"><highlight class="normal"></highlight></codeline>
<codeline lineno="585"><highlight class="normal"></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>IIOWrapper::getBuffDeltaVelocityX()</highlight></codeline>
<codeline lineno="586"><highlight class="normal">{</highlight></codeline>
<codeline lineno="587"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!has_delta_channels)<sp/>{</highlight></codeline>
<codeline lineno="588"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="589"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classIIOWrapper_1afae369c43ec0dfdb08f41e173b968f58" kindref="member">getConvertedDeltaVelocityXFromDebug</ref>(result))</highlight></codeline>
<codeline lineno="590"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="591"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="592"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0.0;</highlight></codeline>
<codeline lineno="593"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="594"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(int32_t)<ref refid="iio__wrapper_8cpp_1a9c684a2e63c59045ea4d135add263bb9" kindref="member">buff_data</ref>[CHAN_DELTA_VEL_X][<ref refid="iio__wrapper_8cpp_1a1532e6c5918d0afd3d2b45eaff3f6f68" kindref="member">buff_read_idx</ref>]<sp/>*<sp/><ref refid="classIIOWrapper_1a6b769d1cfe0c7e2f09d7af4cdbea5c09" kindref="member">m_scale_deltavelocity_x</ref>;</highlight></codeline>
<codeline lineno="595"><highlight class="normal">}</highlight></codeline>
<codeline lineno="596"><highlight class="normal"></highlight></codeline>
<codeline lineno="597"><highlight class="normal"></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>IIOWrapper::getBuffDeltaVelocityY()</highlight></codeline>
<codeline lineno="598"><highlight class="normal">{</highlight></codeline>
<codeline lineno="599"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!has_delta_channels)<sp/>{</highlight></codeline>
<codeline lineno="600"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="601"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classIIOWrapper_1a93c0f0e87624cc045bf571ed8d85911b" kindref="member">getConvertedDeltaVelocityYFromDebug</ref>(result))</highlight></codeline>
<codeline lineno="602"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="603"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="604"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0.0;</highlight></codeline>
<codeline lineno="605"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="606"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(int32_t)<ref refid="iio__wrapper_8cpp_1a9c684a2e63c59045ea4d135add263bb9" kindref="member">buff_data</ref>[CHAN_DELTA_VEL_Y][<ref refid="iio__wrapper_8cpp_1a1532e6c5918d0afd3d2b45eaff3f6f68" kindref="member">buff_read_idx</ref>]<sp/>*<sp/><ref refid="classIIOWrapper_1a5f29b5ac8ea9c50f38059626899f45ab" kindref="member">m_scale_deltavelocity_y</ref>;</highlight></codeline>
<codeline lineno="607"><highlight class="normal">}</highlight></codeline>
<codeline lineno="608"><highlight class="normal"></highlight></codeline>
<codeline lineno="609"><highlight class="normal"></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>IIOWrapper::getBuffDeltaVelocityZ()</highlight></codeline>
<codeline lineno="610"><highlight class="normal">{</highlight></codeline>
<codeline lineno="611"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!has_delta_channels)<sp/>{</highlight></codeline>
<codeline lineno="612"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="613"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classIIOWrapper_1a9adcb8752a2895affbab03ea3d1e2ef0" kindref="member">getConvertedDeltaVelocityZFromDebug</ref>(result))</highlight></codeline>
<codeline lineno="614"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="615"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="616"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0.0;</highlight></codeline>
<codeline lineno="617"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="618"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(int32_t)<ref refid="iio__wrapper_8cpp_1a9c684a2e63c59045ea4d135add263bb9" kindref="member">buff_data</ref>[CHAN_DELTA_VEL_Z][<ref refid="iio__wrapper_8cpp_1a1532e6c5918d0afd3d2b45eaff3f6f68" kindref="member">buff_read_idx</ref>]<sp/>*<sp/><ref refid="classIIOWrapper_1a822cfeb7635264d647df73dabd2ec4d6" kindref="member">m_scale_deltavelocity_z</ref>;</highlight></codeline>
<codeline lineno="619"><highlight class="normal">}</highlight></codeline>
<codeline lineno="620"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="621"><highlight class="normal"></highlight></codeline>
<codeline lineno="622"><highlight class="normal"></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="classIIOWrapper_1a8636bc7c28c829538d05d5bb638c9074" kindref="member">IIOWrapper::getBuffTemperature</ref>()</highlight></codeline>
<codeline lineno="623"><highlight class="normal">{</highlight></codeline>
<codeline lineno="624"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(int32_t)<ref refid="iio__wrapper_8cpp_1a9c684a2e63c59045ea4d135add263bb9" kindref="member">buff_data</ref>[CHAN_TEMP][<ref refid="iio__wrapper_8cpp_1a1532e6c5918d0afd3d2b45eaff3f6f68" kindref="member">buff_read_idx</ref>]<sp/>*<sp/><ref refid="classIIOWrapper_1ac33c30566920a17f9f0b20321c7bb4ae" kindref="member">m_scale_temp</ref><sp/>/<sp/>1000.0;</highlight></codeline>
<codeline lineno="625"><highlight class="normal">}</highlight></codeline>
<codeline lineno="626"><highlight class="normal"></highlight></codeline>
<codeline lineno="627"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classIIOWrapper_1a4a4cea0c85854aef0117ce98a587b8b4" kindref="member">IIOWrapper::getBuffSampleTimestamp</ref>(int32_t<sp/>&amp;<sp/>sec,<sp/>uint32_t<sp/>&amp;<sp/>nanosec)</highlight></codeline>
<codeline lineno="628"><highlight class="normal">{</highlight></codeline>
<codeline lineno="629"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(has_timestamp_channel)<sp/>{</highlight></codeline>
<codeline lineno="630"><highlight class="normal"><sp/><sp/><sp/><sp/>uint16_t<sp/>timestamp_0_15<sp/>=<sp/><ref refid="iio__wrapper_8cpp_1a9c684a2e63c59045ea4d135add263bb9" kindref="member">buff_data</ref>[CHAN_DATA_TIMESTAMP][<ref refid="iio__wrapper_8cpp_1a1532e6c5918d0afd3d2b45eaff3f6f68" kindref="member">buff_read_idx</ref>];</highlight></codeline>
<codeline lineno="631"><highlight class="normal"><sp/><sp/><sp/><sp/>uint16_t<sp/>timestamp_16_31<sp/>=<sp/><ref refid="iio__wrapper_8cpp_1a9c684a2e63c59045ea4d135add263bb9" kindref="member">buff_data</ref>[CHAN_DATA_TIMESTAMP][<ref refid="iio__wrapper_8cpp_1a1532e6c5918d0afd3d2b45eaff3f6f68" kindref="member">buff_read_idx</ref>]<sp/>&gt;&gt;<sp/>16;</highlight></codeline>
<codeline lineno="632"><highlight class="normal"><sp/><sp/><sp/><sp/>uint16_t<sp/>timestamp_32_47<sp/>=<sp/><ref refid="iio__wrapper_8cpp_1a9c684a2e63c59045ea4d135add263bb9" kindref="member">buff_data</ref>[CHAN_DATA_TIMESTAMP<sp/>+<sp/>1][<ref refid="iio__wrapper_8cpp_1a1532e6c5918d0afd3d2b45eaff3f6f68" kindref="member">buff_read_idx</ref>];</highlight></codeline>
<codeline lineno="633"><highlight class="normal"><sp/><sp/><sp/><sp/>uint16_t<sp/>timestamp_48_63<sp/>=<sp/><ref refid="iio__wrapper_8cpp_1a9c684a2e63c59045ea4d135add263bb9" kindref="member">buff_data</ref>[CHAN_DATA_TIMESTAMP<sp/>+<sp/>1][<ref refid="iio__wrapper_8cpp_1a1532e6c5918d0afd3d2b45eaff3f6f68" kindref="member">buff_read_idx</ref>]<sp/>&gt;&gt;<sp/>16;</highlight></codeline>
<codeline lineno="634"><highlight class="normal"></highlight></codeline>
<codeline lineno="635"><highlight class="normal"><sp/><sp/><sp/><sp/>uint64_t<sp/>timestamp<sp/>=<sp/>((uint64_t)timestamp_48_63<sp/>&lt;&lt;<sp/>48)<sp/>|<sp/>((uint64_t)timestamp_32_47<sp/>&lt;&lt;<sp/>32)<sp/>|</highlight></codeline>
<codeline lineno="636"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((uint64_t)timestamp_16_31<sp/>&lt;&lt;<sp/>16)<sp/>|<sp/>timestamp_0_15;</highlight></codeline>
<codeline lineno="637"><highlight class="normal"></highlight></codeline>
<codeline lineno="638"><highlight class="normal"><sp/><sp/><sp/><sp/>sec<sp/>=<sp/>timestamp<sp/>/<sp/>1000000000;</highlight></codeline>
<codeline lineno="639"><highlight class="normal"><sp/><sp/><sp/><sp/>nanosec<sp/>=<sp/>timestamp<sp/>%<sp/>1000000000;</highlight></codeline>
<codeline lineno="640"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="641"><highlight class="normal"><sp/><sp/><sp/><sp/>sec<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="642"><highlight class="normal"><sp/><sp/><sp/><sp/>nanosec<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="643"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="644"><highlight class="normal">}</highlight></codeline>
<codeline lineno="645"><highlight class="normal"></highlight></codeline>
<codeline lineno="646"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classIIOWrapper_1ad1c329ac2d3785a4c4ceee754d5b1c7c" kindref="member">IIOWrapper::getConvertedLinearAccelerationX</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>&amp;<sp/>result)</highlight></codeline>
<codeline lineno="647"><highlight class="normal">{</highlight></codeline>
<codeline lineno="648"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>valueRaw;</highlight></codeline>
<codeline lineno="649"><highlight class="normal"></highlight></codeline>
<codeline lineno="650"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="classIIOWrapper_1ac1fb844f82d64a1b6e2e6cc6c089bd71" kindref="member">m_channel_accel_x</ref>)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="651"><highlight class="normal"></highlight></codeline>
<codeline lineno="652"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ret<sp/>=<sp/>iio_channel_attr_read_longlong(<ref refid="classIIOWrapper_1ac1fb844f82d64a1b6e2e6cc6c089bd71" kindref="member">m_channel_accel_x</ref>,<sp/></highlight><highlight class="stringliteral">&quot;raw&quot;</highlight><highlight class="normal">,<sp/>&amp;valueRaw);</highlight></codeline>
<codeline lineno="653"><highlight class="normal"></highlight></codeline>
<codeline lineno="654"><highlight class="normal"><sp/><sp/>result<sp/>=<sp/>valueRaw<sp/>*<sp/><ref refid="classIIOWrapper_1ac4a267304bf82229d032adf4c167c8be" kindref="member">m_scale_accel_x</ref>;</highlight></codeline>
<codeline lineno="655"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(ret<sp/>==<sp/>0);</highlight></codeline>
<codeline lineno="656"><highlight class="normal">}</highlight></codeline>
<codeline lineno="657"><highlight class="normal"></highlight></codeline>
<codeline lineno="658"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classIIOWrapper_1a798839e37670a3ee83381c3b8e7bee9d" kindref="member">IIOWrapper::getConvertedLinearAccelerationY</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>&amp;<sp/>result)</highlight></codeline>
<codeline lineno="659"><highlight class="normal">{</highlight></codeline>
<codeline lineno="660"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>valueRaw;</highlight></codeline>
<codeline lineno="661"><highlight class="normal"></highlight></codeline>
<codeline lineno="662"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="classIIOWrapper_1ad1e0779435221c690f93d6d05a76f176" kindref="member">m_channel_accel_y</ref>)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="663"><highlight class="normal"></highlight></codeline>
<codeline lineno="664"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ret<sp/>=<sp/>iio_channel_attr_read_longlong(<ref refid="classIIOWrapper_1ad1e0779435221c690f93d6d05a76f176" kindref="member">m_channel_accel_y</ref>,<sp/></highlight><highlight class="stringliteral">&quot;raw&quot;</highlight><highlight class="normal">,<sp/>&amp;valueRaw);</highlight></codeline>
<codeline lineno="665"><highlight class="normal"></highlight></codeline>
<codeline lineno="666"><highlight class="normal"><sp/><sp/>result<sp/>=<sp/>valueRaw<sp/>*<sp/><ref refid="classIIOWrapper_1a39297415934efc288f6ced765861d19d" kindref="member">m_scale_accel_y</ref>;</highlight></codeline>
<codeline lineno="667"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(ret<sp/>==<sp/>0);</highlight></codeline>
<codeline lineno="668"><highlight class="normal">}</highlight></codeline>
<codeline lineno="669"><highlight class="normal"></highlight></codeline>
<codeline lineno="670"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classIIOWrapper_1a63262c6685e600d505fc751db4f52f4e" kindref="member">IIOWrapper::getConvertedLinearAccelerationZ</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>&amp;<sp/>result)</highlight></codeline>
<codeline lineno="671"><highlight class="normal">{</highlight></codeline>
<codeline lineno="672"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>valueRaw;</highlight></codeline>
<codeline lineno="673"><highlight class="normal"></highlight></codeline>
<codeline lineno="674"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="classIIOWrapper_1aa5f24dc01a83090154c57359a4668cd9" kindref="member">m_channel_accel_z</ref>)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="675"><highlight class="normal"></highlight></codeline>
<codeline lineno="676"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ret<sp/>=<sp/>iio_channel_attr_read_longlong(<ref refid="classIIOWrapper_1aa5f24dc01a83090154c57359a4668cd9" kindref="member">m_channel_accel_z</ref>,<sp/></highlight><highlight class="stringliteral">&quot;raw&quot;</highlight><highlight class="normal">,<sp/>&amp;valueRaw);</highlight></codeline>
<codeline lineno="677"><highlight class="normal"></highlight></codeline>
<codeline lineno="678"><highlight class="normal"><sp/><sp/>result<sp/>=<sp/>valueRaw<sp/>*<sp/><ref refid="classIIOWrapper_1a62c70c9017644054942d0a27c5582291" kindref="member">m_scale_accel_z</ref>;</highlight></codeline>
<codeline lineno="679"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(ret<sp/>==<sp/>0);</highlight></codeline>
<codeline lineno="680"><highlight class="normal">}</highlight></codeline>
<codeline lineno="681"><highlight class="normal"></highlight></codeline>
<codeline lineno="682"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classIIOWrapper_1a188e946663bc7b97c34051307f4d5d27" kindref="member">IIOWrapper::getConvertedAngularVelocityX</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>&amp;<sp/>result)</highlight></codeline>
<codeline lineno="683"><highlight class="normal">{</highlight></codeline>
<codeline lineno="684"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>valueRaw;</highlight></codeline>
<codeline lineno="685"><highlight class="normal"></highlight></codeline>
<codeline lineno="686"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="classIIOWrapper_1a9b7c68d2cd7161e853b261c3e1363ef3" kindref="member">m_channel_anglvel_x</ref>)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="687"><highlight class="normal"></highlight></codeline>
<codeline lineno="688"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ret<sp/>=<sp/>iio_channel_attr_read_longlong(<ref refid="classIIOWrapper_1a9b7c68d2cd7161e853b261c3e1363ef3" kindref="member">m_channel_anglvel_x</ref>,<sp/></highlight><highlight class="stringliteral">&quot;raw&quot;</highlight><highlight class="normal">,<sp/>&amp;valueRaw);</highlight></codeline>
<codeline lineno="689"><highlight class="normal"></highlight></codeline>
<codeline lineno="690"><highlight class="normal"><sp/><sp/>result<sp/>=<sp/>valueRaw<sp/>*<sp/><ref refid="classIIOWrapper_1a60201aaf24995e68520d846c5446cd23" kindref="member">m_scale_anglvel_x</ref>;</highlight></codeline>
<codeline lineno="691"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(ret<sp/>==<sp/>0);</highlight></codeline>
<codeline lineno="692"><highlight class="normal">}</highlight></codeline>
<codeline lineno="693"><highlight class="normal"></highlight></codeline>
<codeline lineno="694"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classIIOWrapper_1a1f3f03307a91115e17ee3f18323f061a" kindref="member">IIOWrapper::getConvertedAngularVelocityY</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>&amp;<sp/>result)</highlight></codeline>
<codeline lineno="695"><highlight class="normal">{</highlight></codeline>
<codeline lineno="696"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>valueRaw;</highlight></codeline>
<codeline lineno="697"><highlight class="normal"></highlight></codeline>
<codeline lineno="698"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="classIIOWrapper_1a1b138c4cc8238e52a68f830363a04b8d" kindref="member">m_channel_anglvel_y</ref>)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="699"><highlight class="normal"></highlight></codeline>
<codeline lineno="700"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ret<sp/>=<sp/>iio_channel_attr_read_longlong(<ref refid="classIIOWrapper_1a1b138c4cc8238e52a68f830363a04b8d" kindref="member">m_channel_anglvel_y</ref>,<sp/></highlight><highlight class="stringliteral">&quot;raw&quot;</highlight><highlight class="normal">,<sp/>&amp;valueRaw);</highlight></codeline>
<codeline lineno="701"><highlight class="normal"></highlight></codeline>
<codeline lineno="702"><highlight class="normal"><sp/><sp/>result<sp/>=<sp/>valueRaw<sp/>*<sp/><ref refid="classIIOWrapper_1aabb94da5ca0c007e066898cd7767f5a2" kindref="member">m_scale_anglvel_y</ref>;</highlight></codeline>
<codeline lineno="703"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(ret<sp/>==<sp/>0);</highlight></codeline>
<codeline lineno="704"><highlight class="normal">}</highlight></codeline>
<codeline lineno="705"><highlight class="normal"></highlight></codeline>
<codeline lineno="706"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classIIOWrapper_1adc9f70fada12dbe6e110a8bcddf6c539" kindref="member">IIOWrapper::getConvertedAngularVelocityZ</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>&amp;<sp/>result)</highlight></codeline>
<codeline lineno="707"><highlight class="normal">{</highlight></codeline>
<codeline lineno="708"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>valueRaw;</highlight></codeline>
<codeline lineno="709"><highlight class="normal"></highlight></codeline>
<codeline lineno="710"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="classIIOWrapper_1a1b2384d209272000f673f25e7134d06d" kindref="member">m_channel_anglvel_z</ref>)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="711"><highlight class="normal"></highlight></codeline>
<codeline lineno="712"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ret<sp/>=<sp/>iio_channel_attr_read_longlong(<ref refid="classIIOWrapper_1a1b2384d209272000f673f25e7134d06d" kindref="member">m_channel_anglvel_z</ref>,<sp/></highlight><highlight class="stringliteral">&quot;raw&quot;</highlight><highlight class="normal">,<sp/>&amp;valueRaw);</highlight></codeline>
<codeline lineno="713"><highlight class="normal"></highlight></codeline>
<codeline lineno="714"><highlight class="normal"><sp/><sp/>result<sp/>=<sp/>valueRaw<sp/>*<sp/><ref refid="classIIOWrapper_1acdb2f23b02ac0650e12b76a02502e725" kindref="member">m_scale_anglvel_z</ref>;</highlight></codeline>
<codeline lineno="715"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(ret<sp/>==<sp/>0);</highlight></codeline>
<codeline lineno="716"><highlight class="normal">}</highlight></codeline>
<codeline lineno="717"><highlight class="normal"></highlight></codeline>
<codeline lineno="718"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classIIOWrapper_1a47cb7f7d914c9a12c51cfaa152645b07" kindref="member">IIOWrapper::getRawDeltaAngleXFromDebug</ref>(int32_t<sp/>&amp;<sp/>result)</highlight></codeline>
<codeline lineno="719"><highlight class="normal">{</highlight></codeline>
<codeline lineno="720"><highlight class="normal"><sp/><sp/>uint32_t<sp/>reg_low;</highlight></codeline>
<codeline lineno="721"><highlight class="normal"><sp/><sp/>uint32_t<sp/>reg_high;</highlight></codeline>
<codeline lineno="722"><highlight class="normal"></highlight></codeline>
<codeline lineno="723"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="classIIOWrapper_1aa54f78cb0c53f73b6562e303367b20be" kindref="member">m_dev</ref>)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="724"><highlight class="normal"></highlight></codeline>
<codeline lineno="725"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ret<sp/>=<sp/>iio_device_reg_read(<ref refid="classIIOWrapper_1aa54f78cb0c53f73b6562e303367b20be" kindref="member">m_dev</ref>,<sp/>ADIS_DELTANG_X_LOW_REG,<sp/>&amp;reg_low);</highlight></codeline>
<codeline lineno="726"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ret)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="727"><highlight class="normal"></highlight></codeline>
<codeline lineno="728"><highlight class="normal"><sp/><sp/>ret<sp/>=<sp/>iio_device_reg_read(<ref refid="classIIOWrapper_1aa54f78cb0c53f73b6562e303367b20be" kindref="member">m_dev</ref>,<sp/>ADIS_DELTANG_X_OUT_REG,<sp/>&amp;reg_high);</highlight></codeline>
<codeline lineno="729"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ret)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="730"><highlight class="normal"></highlight></codeline>
<codeline lineno="731"><highlight class="normal"><sp/><sp/>result<sp/>=<sp/>reg_high<sp/>&lt;&lt;<sp/>16<sp/>|<sp/>reg_low;</highlight></codeline>
<codeline lineno="732"><highlight class="normal"></highlight></codeline>
<codeline lineno="733"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="734"><highlight class="normal">}</highlight></codeline>
<codeline lineno="735"><highlight class="normal"></highlight></codeline>
<codeline lineno="736"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classIIOWrapper_1a78ff447b7bccef0dd8abc5239ddcda27" kindref="member">IIOWrapper::getConvertedDeltaAngleXFromDebug</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>&amp;<sp/>result)</highlight></codeline>
<codeline lineno="737"><highlight class="normal">{</highlight></codeline>
<codeline lineno="738"><highlight class="normal"><sp/><sp/>int32_t<sp/>reg_val<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="739"><highlight class="normal"></highlight></codeline>
<codeline lineno="740"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>ret<sp/>=<sp/><ref refid="classIIOWrapper_1a47cb7f7d914c9a12c51cfaa152645b07" kindref="member">getRawDeltaAngleXFromDebug</ref>(reg_val);</highlight></codeline>
<codeline lineno="741"><highlight class="normal"></highlight></codeline>
<codeline lineno="742"><highlight class="normal"><sp/><sp/>result<sp/>=<sp/>reg_val<sp/>*<sp/><ref refid="classIIOWrapper_1a9d05021dd126ae2446d4bfc8e122d926" kindref="member">m_scale_deltaangl_x</ref>;</highlight></codeline>
<codeline lineno="743"><highlight class="normal"></highlight></codeline>
<codeline lineno="744"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ret;</highlight></codeline>
<codeline lineno="745"><highlight class="normal">}</highlight></codeline>
<codeline lineno="746"><highlight class="normal"></highlight></codeline>
<codeline lineno="747"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classIIOWrapper_1a68420aad14da02a7fd8316b6c7853c03" kindref="member">IIOWrapper::getConvertedDeltaAngleX</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>&amp;<sp/>result)</highlight></codeline>
<codeline lineno="748"><highlight class="normal">{</highlight></codeline>
<codeline lineno="749"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>valueRaw;</highlight></codeline>
<codeline lineno="750"><highlight class="normal"></highlight></codeline>
<codeline lineno="751"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="classIIOWrapper_1ae585f76ba5a1e003c9416bc87d5d7897" kindref="member">m_channel_deltaangl_x</ref>)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classIIOWrapper_1a78ff447b7bccef0dd8abc5239ddcda27" kindref="member">getConvertedDeltaAngleXFromDebug</ref>(result);</highlight></codeline>
<codeline lineno="752"><highlight class="normal"></highlight></codeline>
<codeline lineno="753"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ret<sp/>=<sp/>iio_channel_attr_read_longlong(<ref refid="classIIOWrapper_1ae585f76ba5a1e003c9416bc87d5d7897" kindref="member">m_channel_deltaangl_x</ref>,<sp/></highlight><highlight class="stringliteral">&quot;raw&quot;</highlight><highlight class="normal">,<sp/>&amp;valueRaw);</highlight></codeline>
<codeline lineno="754"><highlight class="normal"></highlight></codeline>
<codeline lineno="755"><highlight class="normal"><sp/><sp/>result<sp/>=<sp/>valueRaw<sp/>*<sp/><ref refid="classIIOWrapper_1a9d05021dd126ae2446d4bfc8e122d926" kindref="member">m_scale_deltaangl_x</ref>;</highlight></codeline>
<codeline lineno="756"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(ret<sp/>==<sp/>0);</highlight></codeline>
<codeline lineno="757"><highlight class="normal">}</highlight></codeline>
<codeline lineno="758"><highlight class="normal"></highlight></codeline>
<codeline lineno="759"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classIIOWrapper_1adde2349c207c0d885197bb11165e6546" kindref="member">IIOWrapper::getRawDeltaAngleYFromDebug</ref>(int32_t<sp/>&amp;<sp/>result)</highlight></codeline>
<codeline lineno="760"><highlight class="normal">{</highlight></codeline>
<codeline lineno="761"><highlight class="normal"><sp/><sp/>uint32_t<sp/>reg_low;</highlight></codeline>
<codeline lineno="762"><highlight class="normal"><sp/><sp/>uint32_t<sp/>reg_high;</highlight></codeline>
<codeline lineno="763"><highlight class="normal"></highlight></codeline>
<codeline lineno="764"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="classIIOWrapper_1aa54f78cb0c53f73b6562e303367b20be" kindref="member">m_dev</ref>)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="765"><highlight class="normal"></highlight></codeline>
<codeline lineno="766"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ret<sp/>=<sp/>iio_device_reg_read(<ref refid="classIIOWrapper_1aa54f78cb0c53f73b6562e303367b20be" kindref="member">m_dev</ref>,<sp/>ADIS_DELTANG_Y_LOW_REG,<sp/>&amp;reg_low);</highlight></codeline>
<codeline lineno="767"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ret)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="768"><highlight class="normal"></highlight></codeline>
<codeline lineno="769"><highlight class="normal"><sp/><sp/>ret<sp/>=<sp/>iio_device_reg_read(<ref refid="classIIOWrapper_1aa54f78cb0c53f73b6562e303367b20be" kindref="member">m_dev</ref>,<sp/>ADIS_DELTANG_Y_OUT_REG,<sp/>&amp;reg_high);</highlight></codeline>
<codeline lineno="770"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ret)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="771"><highlight class="normal"></highlight></codeline>
<codeline lineno="772"><highlight class="normal"><sp/><sp/>result<sp/>=<sp/>reg_high<sp/>&lt;&lt;<sp/>16<sp/>|<sp/>reg_low;</highlight></codeline>
<codeline lineno="773"><highlight class="normal"></highlight></codeline>
<codeline lineno="774"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="775"><highlight class="normal">}</highlight></codeline>
<codeline lineno="776"><highlight class="normal"></highlight></codeline>
<codeline lineno="777"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classIIOWrapper_1aa52383a8d31690b73f74539cc617e7d7" kindref="member">IIOWrapper::getConvertedDeltaAngleYFromDebug</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>&amp;<sp/>result)</highlight></codeline>
<codeline lineno="778"><highlight class="normal">{</highlight></codeline>
<codeline lineno="779"><highlight class="normal"><sp/><sp/>int32_t<sp/>reg_val<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="780"><highlight class="normal"></highlight></codeline>
<codeline lineno="781"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>ret<sp/>=<sp/><ref refid="classIIOWrapper_1adde2349c207c0d885197bb11165e6546" kindref="member">getRawDeltaAngleYFromDebug</ref>(reg_val);</highlight></codeline>
<codeline lineno="782"><highlight class="normal"></highlight></codeline>
<codeline lineno="783"><highlight class="normal"><sp/><sp/>result<sp/>=<sp/>reg_val<sp/>*<sp/><ref refid="classIIOWrapper_1a0a614ad2a77e11186da5c6d22743c1cc" kindref="member">m_scale_deltaangl_y</ref>;</highlight></codeline>
<codeline lineno="784"><highlight class="normal"></highlight></codeline>
<codeline lineno="785"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ret;</highlight></codeline>
<codeline lineno="786"><highlight class="normal">}</highlight></codeline>
<codeline lineno="787"><highlight class="normal"></highlight></codeline>
<codeline lineno="788"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classIIOWrapper_1a58453b95cb9193b5b2813fd3c1f5e4d7" kindref="member">IIOWrapper::getConvertedDeltaAngleY</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>&amp;<sp/>result)</highlight></codeline>
<codeline lineno="789"><highlight class="normal">{</highlight></codeline>
<codeline lineno="790"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>valueRaw;</highlight></codeline>
<codeline lineno="791"><highlight class="normal"></highlight></codeline>
<codeline lineno="792"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="classIIOWrapper_1a60cc79165edc458ad3af03ad976feb2d" kindref="member">m_channel_deltaangl_y</ref>)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classIIOWrapper_1aa52383a8d31690b73f74539cc617e7d7" kindref="member">getConvertedDeltaAngleYFromDebug</ref>(result);</highlight></codeline>
<codeline lineno="793"><highlight class="normal"></highlight></codeline>
<codeline lineno="794"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ret<sp/>=<sp/>iio_channel_attr_read_longlong(<ref refid="classIIOWrapper_1a60cc79165edc458ad3af03ad976feb2d" kindref="member">m_channel_deltaangl_y</ref>,<sp/></highlight><highlight class="stringliteral">&quot;raw&quot;</highlight><highlight class="normal">,<sp/>&amp;valueRaw);</highlight></codeline>
<codeline lineno="795"><highlight class="normal"></highlight></codeline>
<codeline lineno="796"><highlight class="normal"><sp/><sp/>result<sp/>=<sp/>valueRaw<sp/>*<sp/><ref refid="classIIOWrapper_1a0a614ad2a77e11186da5c6d22743c1cc" kindref="member">m_scale_deltaangl_y</ref>;</highlight></codeline>
<codeline lineno="797"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(ret<sp/>==<sp/>0);</highlight></codeline>
<codeline lineno="798"><highlight class="normal">}</highlight></codeline>
<codeline lineno="799"><highlight class="normal"></highlight></codeline>
<codeline lineno="800"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classIIOWrapper_1a2f8806cda1ba466fab265a45eb66815c" kindref="member">IIOWrapper::getRawDeltaAngleZFromDebug</ref>(int32_t<sp/>&amp;<sp/>result)</highlight></codeline>
<codeline lineno="801"><highlight class="normal">{</highlight></codeline>
<codeline lineno="802"><highlight class="normal"><sp/><sp/>uint32_t<sp/>reg_low;</highlight></codeline>
<codeline lineno="803"><highlight class="normal"><sp/><sp/>uint32_t<sp/>reg_high;</highlight></codeline>
<codeline lineno="804"><highlight class="normal"></highlight></codeline>
<codeline lineno="805"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="classIIOWrapper_1aa54f78cb0c53f73b6562e303367b20be" kindref="member">m_dev</ref>)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="806"><highlight class="normal"></highlight></codeline>
<codeline lineno="807"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ret<sp/>=<sp/>iio_device_reg_read(<ref refid="classIIOWrapper_1aa54f78cb0c53f73b6562e303367b20be" kindref="member">m_dev</ref>,<sp/>ADIS_DELTANG_Z_LOW_REG,<sp/>&amp;reg_low);</highlight></codeline>
<codeline lineno="808"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ret)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="809"><highlight class="normal"></highlight></codeline>
<codeline lineno="810"><highlight class="normal"><sp/><sp/>ret<sp/>=<sp/>iio_device_reg_read(<ref refid="classIIOWrapper_1aa54f78cb0c53f73b6562e303367b20be" kindref="member">m_dev</ref>,<sp/>ADIS_DELTANG_Z_OUT_REG,<sp/>&amp;reg_high);</highlight></codeline>
<codeline lineno="811"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ret)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="812"><highlight class="normal"></highlight></codeline>
<codeline lineno="813"><highlight class="normal"><sp/><sp/>result<sp/>=<sp/>reg_high<sp/>&lt;&lt;<sp/>16<sp/>|<sp/>reg_low;</highlight></codeline>
<codeline lineno="814"><highlight class="normal"></highlight></codeline>
<codeline lineno="815"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="816"><highlight class="normal">}</highlight></codeline>
<codeline lineno="817"><highlight class="normal"></highlight></codeline>
<codeline lineno="818"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classIIOWrapper_1adb513e9bdd99b7fcf9accec73faba53e" kindref="member">IIOWrapper::getConvertedDeltaAngleZFromDebug</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>&amp;<sp/>result)</highlight></codeline>
<codeline lineno="819"><highlight class="normal">{</highlight></codeline>
<codeline lineno="820"><highlight class="normal"><sp/><sp/>int32_t<sp/>reg_val<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="821"><highlight class="normal"></highlight></codeline>
<codeline lineno="822"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>ret<sp/>=<sp/><ref refid="classIIOWrapper_1a2f8806cda1ba466fab265a45eb66815c" kindref="member">getRawDeltaAngleZFromDebug</ref>(reg_val);</highlight></codeline>
<codeline lineno="823"><highlight class="normal"></highlight></codeline>
<codeline lineno="824"><highlight class="normal"><sp/><sp/>result<sp/>=<sp/>reg_val<sp/>*<sp/><ref refid="classIIOWrapper_1aa60f12b53d29ad7a17750da6cfe56a9b" kindref="member">m_scale_deltaangl_z</ref>;</highlight></codeline>
<codeline lineno="825"><highlight class="normal"></highlight></codeline>
<codeline lineno="826"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ret;</highlight></codeline>
<codeline lineno="827"><highlight class="normal">}</highlight></codeline>
<codeline lineno="828"><highlight class="normal"></highlight></codeline>
<codeline lineno="829"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classIIOWrapper_1a29160e4f1947315e1862bf1c1a0630bc" kindref="member">IIOWrapper::getConvertedDeltaAngleZ</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>&amp;<sp/>result)</highlight></codeline>
<codeline lineno="830"><highlight class="normal">{</highlight></codeline>
<codeline lineno="831"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>valueRaw;</highlight></codeline>
<codeline lineno="832"><highlight class="normal"></highlight></codeline>
<codeline lineno="833"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="classIIOWrapper_1a7f9f033ffb31d35240723713a9769a6b" kindref="member">m_channel_deltaangl_z</ref>)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classIIOWrapper_1adb513e9bdd99b7fcf9accec73faba53e" kindref="member">getConvertedDeltaAngleZFromDebug</ref>(result);</highlight></codeline>
<codeline lineno="834"><highlight class="normal"></highlight></codeline>
<codeline lineno="835"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ret<sp/>=<sp/>iio_channel_attr_read_longlong(<ref refid="classIIOWrapper_1a7f9f033ffb31d35240723713a9769a6b" kindref="member">m_channel_deltaangl_z</ref>,<sp/></highlight><highlight class="stringliteral">&quot;raw&quot;</highlight><highlight class="normal">,<sp/>&amp;valueRaw);</highlight></codeline>
<codeline lineno="836"><highlight class="normal"></highlight></codeline>
<codeline lineno="837"><highlight class="normal"><sp/><sp/>result<sp/>=<sp/>valueRaw<sp/>*<sp/><ref refid="classIIOWrapper_1aa60f12b53d29ad7a17750da6cfe56a9b" kindref="member">m_scale_deltaangl_z</ref>;</highlight></codeline>
<codeline lineno="838"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(ret<sp/>==<sp/>0);</highlight></codeline>
<codeline lineno="839"><highlight class="normal">}</highlight></codeline>
<codeline lineno="840"><highlight class="normal"></highlight></codeline>
<codeline lineno="841"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classIIOWrapper_1a0fe6f4ff144f0c80f1452987e383318a" kindref="member">IIOWrapper::getRawDeltaVelocityXFromDebug</ref>(int32_t<sp/>&amp;<sp/>result)</highlight></codeline>
<codeline lineno="842"><highlight class="normal">{</highlight></codeline>
<codeline lineno="843"><highlight class="normal"><sp/><sp/>uint32_t<sp/>reg_low;</highlight></codeline>
<codeline lineno="844"><highlight class="normal"><sp/><sp/>uint32_t<sp/>reg_high;</highlight></codeline>
<codeline lineno="845"><highlight class="normal"></highlight></codeline>
<codeline lineno="846"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="classIIOWrapper_1aa54f78cb0c53f73b6562e303367b20be" kindref="member">m_dev</ref>)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="847"><highlight class="normal"></highlight></codeline>
<codeline lineno="848"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ret<sp/>=<sp/>iio_device_reg_read(<ref refid="classIIOWrapper_1aa54f78cb0c53f73b6562e303367b20be" kindref="member">m_dev</ref>,<sp/>ADIS_DELTVEL_X_LOW_REG,<sp/>&amp;reg_low);</highlight></codeline>
<codeline lineno="849"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ret)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="850"><highlight class="normal"></highlight></codeline>
<codeline lineno="851"><highlight class="normal"><sp/><sp/>ret<sp/>=<sp/>iio_device_reg_read(<ref refid="classIIOWrapper_1aa54f78cb0c53f73b6562e303367b20be" kindref="member">m_dev</ref>,<sp/>ADIS_DELTVEL_X_OUT_REG,<sp/>&amp;reg_high);</highlight></codeline>
<codeline lineno="852"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ret)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="853"><highlight class="normal"></highlight></codeline>
<codeline lineno="854"><highlight class="normal"><sp/><sp/>result<sp/>=<sp/>reg_high<sp/>&lt;&lt;<sp/>16<sp/>|<sp/>reg_low;</highlight></codeline>
<codeline lineno="855"><highlight class="normal"></highlight></codeline>
<codeline lineno="856"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="857"><highlight class="normal">}</highlight></codeline>
<codeline lineno="858"><highlight class="normal"></highlight></codeline>
<codeline lineno="859"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classIIOWrapper_1afae369c43ec0dfdb08f41e173b968f58" kindref="member">IIOWrapper::getConvertedDeltaVelocityXFromDebug</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>&amp;<sp/>result)</highlight></codeline>
<codeline lineno="860"><highlight class="normal">{</highlight></codeline>
<codeline lineno="861"><highlight class="normal"><sp/><sp/>int32_t<sp/>reg_val<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="862"><highlight class="normal"></highlight></codeline>
<codeline lineno="863"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>ret<sp/>=<sp/><ref refid="classIIOWrapper_1a0fe6f4ff144f0c80f1452987e383318a" kindref="member">getRawDeltaVelocityXFromDebug</ref>(reg_val);</highlight></codeline>
<codeline lineno="864"><highlight class="normal"></highlight></codeline>
<codeline lineno="865"><highlight class="normal"><sp/><sp/>result<sp/>=<sp/>reg_val<sp/>*<sp/><ref refid="classIIOWrapper_1a6b769d1cfe0c7e2f09d7af4cdbea5c09" kindref="member">m_scale_deltavelocity_x</ref>;</highlight></codeline>
<codeline lineno="866"><highlight class="normal"></highlight></codeline>
<codeline lineno="867"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ret;</highlight></codeline>
<codeline lineno="868"><highlight class="normal">}</highlight></codeline>
<codeline lineno="869"><highlight class="normal"></highlight></codeline>
<codeline lineno="870"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classIIOWrapper_1a6ef7ac4cd9d2b1b7e0cd9a7a44e6dd35" kindref="member">IIOWrapper::getConvertedDeltaVelocityX</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>&amp;<sp/>result)</highlight></codeline>
<codeline lineno="871"><highlight class="normal">{</highlight></codeline>
<codeline lineno="872"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>valueRaw;</highlight></codeline>
<codeline lineno="873"><highlight class="normal"></highlight></codeline>
<codeline lineno="874"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="classIIOWrapper_1a13c3a4d31efdd2d329b3acc14b697aa4" kindref="member">m_channel_deltavelocity_x</ref>)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classIIOWrapper_1afae369c43ec0dfdb08f41e173b968f58" kindref="member">getConvertedDeltaVelocityXFromDebug</ref>(result);</highlight></codeline>
<codeline lineno="875"><highlight class="normal"></highlight></codeline>
<codeline lineno="876"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ret<sp/>=<sp/>iio_channel_attr_read_longlong(<ref refid="classIIOWrapper_1a13c3a4d31efdd2d329b3acc14b697aa4" kindref="member">m_channel_deltavelocity_x</ref>,<sp/></highlight><highlight class="stringliteral">&quot;raw&quot;</highlight><highlight class="normal">,<sp/>&amp;valueRaw);</highlight></codeline>
<codeline lineno="877"><highlight class="normal"></highlight></codeline>
<codeline lineno="878"><highlight class="normal"><sp/><sp/>result<sp/>=<sp/>valueRaw<sp/>*<sp/><ref refid="classIIOWrapper_1a6b769d1cfe0c7e2f09d7af4cdbea5c09" kindref="member">m_scale_deltavelocity_x</ref>;</highlight></codeline>
<codeline lineno="879"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(ret<sp/>==<sp/>0);</highlight></codeline>
<codeline lineno="880"><highlight class="normal">}</highlight></codeline>
<codeline lineno="881"><highlight class="normal"></highlight></codeline>
<codeline lineno="882"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classIIOWrapper_1ae6a0f742c9dd11684e9a49fb975773e0" kindref="member">IIOWrapper::getRawDeltaVelocityYFromDebug</ref>(int32_t<sp/>&amp;<sp/>result)</highlight></codeline>
<codeline lineno="883"><highlight class="normal">{</highlight></codeline>
<codeline lineno="884"><highlight class="normal"><sp/><sp/>uint32_t<sp/>reg_low;</highlight></codeline>
<codeline lineno="885"><highlight class="normal"><sp/><sp/>uint32_t<sp/>reg_high;</highlight></codeline>
<codeline lineno="886"><highlight class="normal"></highlight></codeline>
<codeline lineno="887"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="classIIOWrapper_1aa54f78cb0c53f73b6562e303367b20be" kindref="member">m_dev</ref>)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="888"><highlight class="normal"></highlight></codeline>
<codeline lineno="889"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ret<sp/>=<sp/>iio_device_reg_read(<ref refid="classIIOWrapper_1aa54f78cb0c53f73b6562e303367b20be" kindref="member">m_dev</ref>,<sp/>ADIS_DELTVEL_Y_LOW_REG,<sp/>&amp;reg_low);</highlight></codeline>
<codeline lineno="890"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ret)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="891"><highlight class="normal"></highlight></codeline>
<codeline lineno="892"><highlight class="normal"><sp/><sp/>ret<sp/>=<sp/>iio_device_reg_read(<ref refid="classIIOWrapper_1aa54f78cb0c53f73b6562e303367b20be" kindref="member">m_dev</ref>,<sp/>ADIS_DELTVEL_Y_OUT_REG,<sp/>&amp;reg_high);</highlight></codeline>
<codeline lineno="893"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ret)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="894"><highlight class="normal"></highlight></codeline>
<codeline lineno="895"><highlight class="normal"><sp/><sp/>result<sp/>=<sp/>reg_high<sp/>&lt;&lt;<sp/>16<sp/>|<sp/>reg_low;</highlight></codeline>
<codeline lineno="896"><highlight class="normal"></highlight></codeline>
<codeline lineno="897"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="898"><highlight class="normal">}</highlight></codeline>
<codeline lineno="899"><highlight class="normal"></highlight></codeline>
<codeline lineno="900"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classIIOWrapper_1a93c0f0e87624cc045bf571ed8d85911b" kindref="member">IIOWrapper::getConvertedDeltaVelocityYFromDebug</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>&amp;<sp/>result)</highlight></codeline>
<codeline lineno="901"><highlight class="normal">{</highlight></codeline>
<codeline lineno="902"><highlight class="normal"><sp/><sp/>int32_t<sp/>reg_val<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="903"><highlight class="normal"></highlight></codeline>
<codeline lineno="904"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>ret<sp/>=<sp/><ref refid="classIIOWrapper_1ae6a0f742c9dd11684e9a49fb975773e0" kindref="member">getRawDeltaVelocityYFromDebug</ref>(reg_val);</highlight></codeline>
<codeline lineno="905"><highlight class="normal"></highlight></codeline>
<codeline lineno="906"><highlight class="normal"><sp/><sp/>result<sp/>=<sp/>reg_val<sp/>*<sp/><ref refid="classIIOWrapper_1a5f29b5ac8ea9c50f38059626899f45ab" kindref="member">m_scale_deltavelocity_y</ref>;</highlight></codeline>
<codeline lineno="907"><highlight class="normal"></highlight></codeline>
<codeline lineno="908"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ret;</highlight></codeline>
<codeline lineno="909"><highlight class="normal">}</highlight></codeline>
<codeline lineno="910"><highlight class="normal"></highlight></codeline>
<codeline lineno="911"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classIIOWrapper_1ad566dd23cded258dea92a16a88946902" kindref="member">IIOWrapper::getConvertedDeltaVelocityY</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>&amp;<sp/>result)</highlight></codeline>
<codeline lineno="912"><highlight class="normal">{</highlight></codeline>
<codeline lineno="913"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>valueRaw;</highlight></codeline>
<codeline lineno="914"><highlight class="normal"></highlight></codeline>
<codeline lineno="915"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="classIIOWrapper_1a7fba21deedbdc14adf0f4a46cb59fdff" kindref="member">m_channel_deltavelocity_y</ref>)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classIIOWrapper_1a93c0f0e87624cc045bf571ed8d85911b" kindref="member">getConvertedDeltaVelocityYFromDebug</ref>(result);</highlight></codeline>
<codeline lineno="916"><highlight class="normal"></highlight></codeline>
<codeline lineno="917"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ret<sp/>=<sp/>iio_channel_attr_read_longlong(<ref refid="classIIOWrapper_1a7fba21deedbdc14adf0f4a46cb59fdff" kindref="member">m_channel_deltavelocity_y</ref>,<sp/></highlight><highlight class="stringliteral">&quot;raw&quot;</highlight><highlight class="normal">,<sp/>&amp;valueRaw);</highlight></codeline>
<codeline lineno="918"><highlight class="normal"></highlight></codeline>
<codeline lineno="919"><highlight class="normal"><sp/><sp/>result<sp/>=<sp/>valueRaw<sp/>*<sp/><ref refid="classIIOWrapper_1a5f29b5ac8ea9c50f38059626899f45ab" kindref="member">m_scale_deltavelocity_y</ref>;</highlight></codeline>
<codeline lineno="920"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(ret<sp/>==<sp/>0);</highlight></codeline>
<codeline lineno="921"><highlight class="normal">}</highlight></codeline>
<codeline lineno="922"><highlight class="normal"></highlight></codeline>
<codeline lineno="923"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classIIOWrapper_1a153ba949b8daa8514864b59538fcb64a" kindref="member">IIOWrapper::getRawDeltaVelocityZFromDebug</ref>(int32_t<sp/>&amp;<sp/>result)</highlight></codeline>
<codeline lineno="924"><highlight class="normal">{</highlight></codeline>
<codeline lineno="925"><highlight class="normal"><sp/><sp/>uint32_t<sp/>reg_low;</highlight></codeline>
<codeline lineno="926"><highlight class="normal"><sp/><sp/>uint32_t<sp/>reg_high;</highlight></codeline>
<codeline lineno="927"><highlight class="normal"></highlight></codeline>
<codeline lineno="928"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="classIIOWrapper_1aa54f78cb0c53f73b6562e303367b20be" kindref="member">m_dev</ref>)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="929"><highlight class="normal"></highlight></codeline>
<codeline lineno="930"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ret<sp/>=<sp/>iio_device_reg_read(<ref refid="classIIOWrapper_1aa54f78cb0c53f73b6562e303367b20be" kindref="member">m_dev</ref>,<sp/>ADIS_DELTVEL_Z_LOW_REG,<sp/>&amp;reg_low);</highlight></codeline>
<codeline lineno="931"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ret)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="932"><highlight class="normal"></highlight></codeline>
<codeline lineno="933"><highlight class="normal"><sp/><sp/>ret<sp/>=<sp/>iio_device_reg_read(<ref refid="classIIOWrapper_1aa54f78cb0c53f73b6562e303367b20be" kindref="member">m_dev</ref>,<sp/>ADIS_DELTVEL_Z_OUT_REG,<sp/>&amp;reg_high);</highlight></codeline>
<codeline lineno="934"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ret)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="935"><highlight class="normal"></highlight></codeline>
<codeline lineno="936"><highlight class="normal"><sp/><sp/>result<sp/>=<sp/>reg_high<sp/>&lt;&lt;<sp/>16<sp/>|<sp/>reg_low;</highlight></codeline>
<codeline lineno="937"><highlight class="normal"></highlight></codeline>
<codeline lineno="938"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="939"><highlight class="normal">}</highlight></codeline>
<codeline lineno="940"><highlight class="normal"></highlight></codeline>
<codeline lineno="941"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classIIOWrapper_1a9adcb8752a2895affbab03ea3d1e2ef0" kindref="member">IIOWrapper::getConvertedDeltaVelocityZFromDebug</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>&amp;<sp/>result)</highlight></codeline>
<codeline lineno="942"><highlight class="normal">{</highlight></codeline>
<codeline lineno="943"><highlight class="normal"><sp/><sp/>int32_t<sp/>reg_val<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="944"><highlight class="normal"></highlight></codeline>
<codeline lineno="945"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>ret<sp/>=<sp/><ref refid="classIIOWrapper_1a153ba949b8daa8514864b59538fcb64a" kindref="member">getRawDeltaVelocityZFromDebug</ref>(reg_val);</highlight></codeline>
<codeline lineno="946"><highlight class="normal"></highlight></codeline>
<codeline lineno="947"><highlight class="normal"><sp/><sp/>result<sp/>=<sp/>reg_val<sp/>*<sp/><ref refid="classIIOWrapper_1a822cfeb7635264d647df73dabd2ec4d6" kindref="member">m_scale_deltavelocity_z</ref>;</highlight></codeline>
<codeline lineno="948"><highlight class="normal"></highlight></codeline>
<codeline lineno="949"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ret;</highlight></codeline>
<codeline lineno="950"><highlight class="normal">}</highlight></codeline>
<codeline lineno="951"><highlight class="normal"></highlight></codeline>
<codeline lineno="952"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classIIOWrapper_1a31a1dc7c03fc782b2eff9ae0f925e789" kindref="member">IIOWrapper::getConvertedDeltaVelocityZ</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>&amp;<sp/>result)</highlight></codeline>
<codeline lineno="953"><highlight class="normal">{</highlight></codeline>
<codeline lineno="954"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>valueRaw;</highlight></codeline>
<codeline lineno="955"><highlight class="normal"></highlight></codeline>
<codeline lineno="956"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="classIIOWrapper_1a38e16f0f6f97028d0eee31b7e98d40aa" kindref="member">m_channel_deltavelocity_z</ref>)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classIIOWrapper_1a9adcb8752a2895affbab03ea3d1e2ef0" kindref="member">getConvertedDeltaVelocityZFromDebug</ref>(result);</highlight></codeline>
<codeline lineno="957"><highlight class="normal"></highlight></codeline>
<codeline lineno="958"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ret<sp/>=<sp/>iio_channel_attr_read_longlong(<ref refid="classIIOWrapper_1a38e16f0f6f97028d0eee31b7e98d40aa" kindref="member">m_channel_deltavelocity_z</ref>,<sp/></highlight><highlight class="stringliteral">&quot;raw&quot;</highlight><highlight class="normal">,<sp/>&amp;valueRaw);</highlight></codeline>
<codeline lineno="959"><highlight class="normal"></highlight></codeline>
<codeline lineno="960"><highlight class="normal"><sp/><sp/>result<sp/>=<sp/>valueRaw<sp/>*<sp/><ref refid="classIIOWrapper_1a822cfeb7635264d647df73dabd2ec4d6" kindref="member">m_scale_deltavelocity_z</ref>;</highlight></codeline>
<codeline lineno="961"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(ret<sp/>==<sp/>0);</highlight></codeline>
<codeline lineno="962"><highlight class="normal">}</highlight></codeline>
<codeline lineno="963"><highlight class="normal"></highlight></codeline>
<codeline lineno="964"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classIIOWrapper_1a23f8fbda995629b864dc72bcf3ba0984" kindref="member">IIOWrapper::getConvertedTemperature</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>&amp;<sp/>result)</highlight></codeline>
<codeline lineno="965"><highlight class="normal">{</highlight></codeline>
<codeline lineno="966"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>valueRaw;</highlight></codeline>
<codeline lineno="967"><highlight class="normal"></highlight></codeline>
<codeline lineno="968"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="classIIOWrapper_1a49a1068fef0e2c1c48096f6b88d103b7" kindref="member">m_channel_temp</ref>)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="969"><highlight class="normal"></highlight></codeline>
<codeline lineno="970"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ret<sp/>=<sp/>iio_channel_attr_read_longlong(<ref refid="classIIOWrapper_1a49a1068fef0e2c1c48096f6b88d103b7" kindref="member">m_channel_temp</ref>,<sp/></highlight><highlight class="stringliteral">&quot;raw&quot;</highlight><highlight class="normal">,<sp/>&amp;valueRaw);</highlight></codeline>
<codeline lineno="971"><highlight class="normal"></highlight></codeline>
<codeline lineno="972"><highlight class="normal"><sp/><sp/>result<sp/>=<sp/>valueRaw<sp/>*<sp/><ref refid="classIIOWrapper_1ac33c30566920a17f9f0b20321c7bb4ae" kindref="member">m_scale_temp</ref><sp/>/<sp/>1000.0;</highlight></codeline>
<codeline lineno="973"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(ret<sp/>==<sp/>0);</highlight></codeline>
<codeline lineno="974"><highlight class="normal">}</highlight></codeline>
<codeline lineno="975"><highlight class="normal"></highlight></codeline>
<codeline lineno="976"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classIIOWrapper_1a2cc98e4d4a651e82c7d5766f824acebd" kindref="member">IIOWrapper::anglvel_x_calibbias</ref>(int32_t<sp/>&amp;<sp/>result)</highlight></codeline>
<codeline lineno="977"><highlight class="normal">{</highlight></codeline>
<codeline lineno="978"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>valuel;</highlight></codeline>
<codeline lineno="979"><highlight class="normal"></highlight></codeline>
<codeline lineno="980"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="classIIOWrapper_1a9b7c68d2cd7161e853b261c3e1363ef3" kindref="member">m_channel_anglvel_x</ref>)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="981"><highlight class="normal"></highlight></codeline>
<codeline lineno="982"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ret<sp/>=<sp/>iio_channel_attr_read_longlong(<ref refid="classIIOWrapper_1a9b7c68d2cd7161e853b261c3e1363ef3" kindref="member">m_channel_anglvel_x</ref>,<sp/></highlight><highlight class="stringliteral">&quot;calibbias&quot;</highlight><highlight class="normal">,<sp/>&amp;valuel);</highlight></codeline>
<codeline lineno="983"><highlight class="normal"></highlight></codeline>
<codeline lineno="984"><highlight class="normal"><sp/><sp/>result<sp/>=<sp/>valuel;</highlight></codeline>
<codeline lineno="985"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(ret<sp/>==<sp/>0);</highlight></codeline>
<codeline lineno="986"><highlight class="normal">}</highlight></codeline>
<codeline lineno="987"><highlight class="normal"></highlight></codeline>
<codeline lineno="988"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classIIOWrapper_1a09fa5c163037f078a83e813ef13f73e9" kindref="member">IIOWrapper::update_anglvel_calibbias_x</ref>(int32_t<sp/>val)</highlight></codeline>
<codeline lineno="989"><highlight class="normal">{</highlight></codeline>
<codeline lineno="990"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="classIIOWrapper_1a9b7c68d2cd7161e853b261c3e1363ef3" kindref="member">m_channel_anglvel_x</ref>)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="991"><highlight class="normal"></highlight></codeline>
<codeline lineno="992"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(iio_channel_attr_write_longlong(<ref refid="classIIOWrapper_1a9b7c68d2cd7161e853b261c3e1363ef3" kindref="member">m_channel_anglvel_x</ref>,<sp/></highlight><highlight class="stringliteral">&quot;calibbias&quot;</highlight><highlight class="normal">,<sp/>val)<sp/>==<sp/>0);</highlight></codeline>
<codeline lineno="993"><highlight class="normal">}</highlight></codeline>
<codeline lineno="994"><highlight class="normal"></highlight></codeline>
<codeline lineno="995"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classIIOWrapper_1aafec41ed9294cf0ef6ac0afaf350188e" kindref="member">IIOWrapper::anglvel_y_calibbias</ref>(int32_t<sp/>&amp;<sp/>result)</highlight></codeline>
<codeline lineno="996"><highlight class="normal">{</highlight></codeline>
<codeline lineno="997"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>valuel;</highlight></codeline>
<codeline lineno="998"><highlight class="normal"></highlight></codeline>
<codeline lineno="999"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="classIIOWrapper_1a1b138c4cc8238e52a68f830363a04b8d" kindref="member">m_channel_anglvel_y</ref>)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1000"><highlight class="normal"></highlight></codeline>
<codeline lineno="1001"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ret<sp/>=<sp/>iio_channel_attr_read_longlong(<ref refid="classIIOWrapper_1a1b138c4cc8238e52a68f830363a04b8d" kindref="member">m_channel_anglvel_y</ref>,<sp/></highlight><highlight class="stringliteral">&quot;calibbias&quot;</highlight><highlight class="normal">,<sp/>&amp;valuel);</highlight></codeline>
<codeline lineno="1002"><highlight class="normal"></highlight></codeline>
<codeline lineno="1003"><highlight class="normal"><sp/><sp/>result<sp/>=<sp/>valuel;</highlight></codeline>
<codeline lineno="1004"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(ret<sp/>==<sp/>0);</highlight></codeline>
<codeline lineno="1005"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1006"><highlight class="normal"></highlight></codeline>
<codeline lineno="1007"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classIIOWrapper_1a3730f3c7dcea63f4e2104a02c1e695ae" kindref="member">IIOWrapper::update_anglvel_calibbias_y</ref>(int32_t<sp/>val)</highlight></codeline>
<codeline lineno="1008"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1009"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="classIIOWrapper_1a1b138c4cc8238e52a68f830363a04b8d" kindref="member">m_channel_anglvel_y</ref>)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1010"><highlight class="normal"></highlight></codeline>
<codeline lineno="1011"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(iio_channel_attr_write_longlong(<ref refid="classIIOWrapper_1a1b138c4cc8238e52a68f830363a04b8d" kindref="member">m_channel_anglvel_y</ref>,<sp/></highlight><highlight class="stringliteral">&quot;calibbias&quot;</highlight><highlight class="normal">,<sp/>val)<sp/>==<sp/>0);</highlight></codeline>
<codeline lineno="1012"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1013"><highlight class="normal"></highlight></codeline>
<codeline lineno="1014"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classIIOWrapper_1a84a5ecfbf0942fa175703f1a0aee8bcd" kindref="member">IIOWrapper::anglvel_z_calibbias</ref>(int32_t<sp/>&amp;<sp/>result)</highlight></codeline>
<codeline lineno="1015"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1016"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>valuel;</highlight></codeline>
<codeline lineno="1017"><highlight class="normal"></highlight></codeline>
<codeline lineno="1018"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="classIIOWrapper_1a1b2384d209272000f673f25e7134d06d" kindref="member">m_channel_anglvel_z</ref>)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1019"><highlight class="normal"></highlight></codeline>
<codeline lineno="1020"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ret<sp/>=<sp/>iio_channel_attr_read_longlong(<ref refid="classIIOWrapper_1a1b2384d209272000f673f25e7134d06d" kindref="member">m_channel_anglvel_z</ref>,<sp/></highlight><highlight class="stringliteral">&quot;calibbias&quot;</highlight><highlight class="normal">,<sp/>&amp;valuel);</highlight></codeline>
<codeline lineno="1021"><highlight class="normal"></highlight></codeline>
<codeline lineno="1022"><highlight class="normal"><sp/><sp/>result<sp/>=<sp/>valuel;</highlight></codeline>
<codeline lineno="1023"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(ret<sp/>==<sp/>0);</highlight></codeline>
<codeline lineno="1024"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1025"><highlight class="normal"></highlight></codeline>
<codeline lineno="1026"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classIIOWrapper_1a640785a86e54405eecad55a93321bc26" kindref="member">IIOWrapper::update_anglvel_calibbias_z</ref>(int32_t<sp/>val)</highlight></codeline>
<codeline lineno="1027"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1028"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="classIIOWrapper_1a1b2384d209272000f673f25e7134d06d" kindref="member">m_channel_anglvel_z</ref>)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1029"><highlight class="normal"></highlight></codeline>
<codeline lineno="1030"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(iio_channel_attr_write_longlong(<ref refid="classIIOWrapper_1a1b2384d209272000f673f25e7134d06d" kindref="member">m_channel_anglvel_z</ref>,<sp/></highlight><highlight class="stringliteral">&quot;calibbias&quot;</highlight><highlight class="normal">,<sp/>val)<sp/>==<sp/>0);</highlight></codeline>
<codeline lineno="1031"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1032"><highlight class="normal"></highlight></codeline>
<codeline lineno="1033"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classIIOWrapper_1a45cbee4a2eaf700b7396a4df956ed7e8" kindref="member">IIOWrapper::accel_x_calibbias</ref>(int32_t<sp/>&amp;<sp/>result)</highlight></codeline>
<codeline lineno="1034"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1035"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>valuel;</highlight></codeline>
<codeline lineno="1036"><highlight class="normal"></highlight></codeline>
<codeline lineno="1037"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="classIIOWrapper_1ac1fb844f82d64a1b6e2e6cc6c089bd71" kindref="member">m_channel_accel_x</ref>)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1038"><highlight class="normal"></highlight></codeline>
<codeline lineno="1039"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ret<sp/>=<sp/>iio_channel_attr_read_longlong(<ref refid="classIIOWrapper_1ac1fb844f82d64a1b6e2e6cc6c089bd71" kindref="member">m_channel_accel_x</ref>,<sp/></highlight><highlight class="stringliteral">&quot;calibbias&quot;</highlight><highlight class="normal">,<sp/>&amp;valuel);</highlight></codeline>
<codeline lineno="1040"><highlight class="normal"></highlight></codeline>
<codeline lineno="1041"><highlight class="normal"><sp/><sp/>result<sp/>=<sp/>valuel;</highlight></codeline>
<codeline lineno="1042"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(ret<sp/>==<sp/>0);</highlight></codeline>
<codeline lineno="1043"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1044"><highlight class="normal"></highlight></codeline>
<codeline lineno="1045"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classIIOWrapper_1a371075c2f73786fc409dbfe11bb9b68f" kindref="member">IIOWrapper::update_accel_calibbias_x</ref>(int32_t<sp/>val)</highlight></codeline>
<codeline lineno="1046"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1047"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="classIIOWrapper_1ac1fb844f82d64a1b6e2e6cc6c089bd71" kindref="member">m_channel_accel_x</ref>)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1048"><highlight class="normal"></highlight></codeline>
<codeline lineno="1049"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(iio_channel_attr_write_longlong(<ref refid="classIIOWrapper_1ac1fb844f82d64a1b6e2e6cc6c089bd71" kindref="member">m_channel_accel_x</ref>,<sp/></highlight><highlight class="stringliteral">&quot;calibbias&quot;</highlight><highlight class="normal">,<sp/>val)<sp/>==<sp/>0);</highlight></codeline>
<codeline lineno="1050"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1051"><highlight class="normal"></highlight></codeline>
<codeline lineno="1052"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classIIOWrapper_1ab069f082479643718588962ed76e48e9" kindref="member">IIOWrapper::accel_y_calibbias</ref>(int32_t<sp/>&amp;<sp/>result)</highlight></codeline>
<codeline lineno="1053"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1054"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>valuel;</highlight></codeline>
<codeline lineno="1055"><highlight class="normal"></highlight></codeline>
<codeline lineno="1056"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="classIIOWrapper_1ad1e0779435221c690f93d6d05a76f176" kindref="member">m_channel_accel_y</ref>)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1057"><highlight class="normal"></highlight></codeline>
<codeline lineno="1058"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ret<sp/>=<sp/>iio_channel_attr_read_longlong(<ref refid="classIIOWrapper_1ad1e0779435221c690f93d6d05a76f176" kindref="member">m_channel_accel_y</ref>,<sp/></highlight><highlight class="stringliteral">&quot;calibbias&quot;</highlight><highlight class="normal">,<sp/>&amp;valuel);</highlight></codeline>
<codeline lineno="1059"><highlight class="normal"></highlight></codeline>
<codeline lineno="1060"><highlight class="normal"><sp/><sp/>result<sp/>=<sp/>valuel;</highlight></codeline>
<codeline lineno="1061"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(ret<sp/>==<sp/>0);</highlight></codeline>
<codeline lineno="1062"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1063"><highlight class="normal"></highlight></codeline>
<codeline lineno="1064"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classIIOWrapper_1a6b81ddc7f9f7c67b15e4f8be594c0926" kindref="member">IIOWrapper::update_accel_calibbias_y</ref>(int32_t<sp/>val)</highlight></codeline>
<codeline lineno="1065"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1066"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="classIIOWrapper_1ad1e0779435221c690f93d6d05a76f176" kindref="member">m_channel_accel_y</ref>)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1067"><highlight class="normal"></highlight></codeline>
<codeline lineno="1068"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(iio_channel_attr_write_longlong(<ref refid="classIIOWrapper_1ad1e0779435221c690f93d6d05a76f176" kindref="member">m_channel_accel_y</ref>,<sp/></highlight><highlight class="stringliteral">&quot;calibbias&quot;</highlight><highlight class="normal">,<sp/>val)<sp/>==<sp/>0);</highlight></codeline>
<codeline lineno="1069"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1070"><highlight class="normal"></highlight></codeline>
<codeline lineno="1071"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classIIOWrapper_1a777c78d431b5fc16088018b52ffa8d3a" kindref="member">IIOWrapper::accel_z_calibbias</ref>(int32_t<sp/>&amp;<sp/>result)</highlight></codeline>
<codeline lineno="1072"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1073"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>valuel;</highlight></codeline>
<codeline lineno="1074"><highlight class="normal"></highlight></codeline>
<codeline lineno="1075"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="classIIOWrapper_1aa5f24dc01a83090154c57359a4668cd9" kindref="member">m_channel_accel_z</ref>)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1076"><highlight class="normal"></highlight></codeline>
<codeline lineno="1077"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ret<sp/>=<sp/>iio_channel_attr_read_longlong(<ref refid="classIIOWrapper_1aa5f24dc01a83090154c57359a4668cd9" kindref="member">m_channel_accel_z</ref>,<sp/></highlight><highlight class="stringliteral">&quot;calibbias&quot;</highlight><highlight class="normal">,<sp/>&amp;valuel);</highlight></codeline>
<codeline lineno="1078"><highlight class="normal"></highlight></codeline>
<codeline lineno="1079"><highlight class="normal"><sp/><sp/>result<sp/>=<sp/>valuel;</highlight></codeline>
<codeline lineno="1080"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(ret<sp/>==<sp/>0);</highlight></codeline>
<codeline lineno="1081"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1082"><highlight class="normal"></highlight></codeline>
<codeline lineno="1083"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classIIOWrapper_1a4265bcbf41f4c0582e08f30f5ab63eca" kindref="member">IIOWrapper::update_accel_calibbias_z</ref>(int32_t<sp/>val)</highlight></codeline>
<codeline lineno="1084"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1085"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="classIIOWrapper_1aa5f24dc01a83090154c57359a4668cd9" kindref="member">m_channel_accel_z</ref>)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1086"><highlight class="normal"></highlight></codeline>
<codeline lineno="1087"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(iio_channel_attr_write_longlong(<ref refid="classIIOWrapper_1aa5f24dc01a83090154c57359a4668cd9" kindref="member">m_channel_accel_z</ref>,<sp/></highlight><highlight class="stringliteral">&quot;calibbias&quot;</highlight><highlight class="normal">,<sp/>val)<sp/>==<sp/>0);</highlight></codeline>
<codeline lineno="1088"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1089"><highlight class="normal"></highlight></codeline>
<codeline lineno="1090"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classIIOWrapper_1ac8584252d4635e9a3c00f464cc176b17" kindref="member">IIOWrapper::sampling_frequency</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*<sp/>result)</highlight></codeline>
<codeline lineno="1091"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1092"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ret;</highlight></codeline>
<codeline lineno="1093"><highlight class="normal"></highlight></codeline>
<codeline lineno="1094"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="classIIOWrapper_1aa54f78cb0c53f73b6562e303367b20be" kindref="member">m_dev</ref>)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1095"><highlight class="normal"></highlight></codeline>
<codeline lineno="1096"><highlight class="normal"><sp/><sp/>ret<sp/>=<sp/>iio_device_attr_read_double(<ref refid="classIIOWrapper_1aa54f78cb0c53f73b6562e303367b20be" kindref="member">m_dev</ref>,<sp/></highlight><highlight class="stringliteral">&quot;sampling_frequency&quot;</highlight><highlight class="normal">,<sp/>result);</highlight></codeline>
<codeline lineno="1097"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ret)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1098"><highlight class="normal"></highlight></codeline>
<codeline lineno="1099"><highlight class="normal"><sp/><sp/><ref refid="iio__wrapper_8cpp_1a4ce011ebc45fa44e68df76ab78144541" kindref="member">samp_freq</ref><sp/>=<sp/>*result;</highlight></codeline>
<codeline lineno="1100"><highlight class="normal"></highlight></codeline>
<codeline lineno="1101"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1102"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1103"><highlight class="normal"></highlight></codeline>
<codeline lineno="1104"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classIIOWrapper_1a5cf1f0bfc5f5f0cf43c9707f399c2001" kindref="member">IIOWrapper::update_sampling_frequency</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>val)</highlight></codeline>
<codeline lineno="1105"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1106"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ret;</highlight></codeline>
<codeline lineno="1107"><highlight class="normal"></highlight></codeline>
<codeline lineno="1108"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="classIIOWrapper_1aa54f78cb0c53f73b6562e303367b20be" kindref="member">m_dev</ref>)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1109"><highlight class="normal"></highlight></codeline>
<codeline lineno="1110"><highlight class="normal"><sp/><sp/>ret<sp/>=<sp/>iio_device_attr_write_double(<ref refid="classIIOWrapper_1aa54f78cb0c53f73b6562e303367b20be" kindref="member">m_dev</ref>,<sp/></highlight><highlight class="stringliteral">&quot;sampling_frequency&quot;</highlight><highlight class="normal">,<sp/>val);</highlight></codeline>
<codeline lineno="1111"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ret)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1112"><highlight class="normal"></highlight></codeline>
<codeline lineno="1113"><highlight class="normal"><sp/><sp/><ref refid="iio__wrapper_8cpp_1a4ce011ebc45fa44e68df76ab78144541" kindref="member">samp_freq</ref><sp/>=<sp/>val;</highlight></codeline>
<codeline lineno="1114"><highlight class="normal"></highlight></codeline>
<codeline lineno="1115"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1116"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1117"><highlight class="normal"></highlight></codeline>
<codeline lineno="1118"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(ADIS1654X)<sp/>||<sp/>defined(ADIS1655X)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1119"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>IIOWrapper::angvel_x_filter_low_pass_3db(uint32_t<sp/>&amp;<sp/>result)</highlight></codeline>
<codeline lineno="1120"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1121"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>valuel;</highlight></codeline>
<codeline lineno="1122"><highlight class="normal"></highlight></codeline>
<codeline lineno="1123"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="classIIOWrapper_1a9b7c68d2cd7161e853b261c3e1363ef3" kindref="member">m_channel_anglvel_x</ref>)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1124"><highlight class="normal"></highlight></codeline>
<codeline lineno="1125"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ret<sp/>=</highlight></codeline>
<codeline lineno="1126"><highlight class="normal"><sp/><sp/><sp/><sp/>iio_channel_attr_read_longlong(<ref refid="classIIOWrapper_1a9b7c68d2cd7161e853b261c3e1363ef3" kindref="member">m_channel_anglvel_x</ref>,<sp/></highlight><highlight class="stringliteral">&quot;filter_low_pass_3db_frequency&quot;</highlight><highlight class="normal">,<sp/>&amp;valuel);</highlight></codeline>
<codeline lineno="1127"><highlight class="normal"></highlight></codeline>
<codeline lineno="1128"><highlight class="normal"><sp/><sp/>result<sp/>=<sp/>valuel;</highlight></codeline>
<codeline lineno="1129"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(ret<sp/>==<sp/>0);</highlight></codeline>
<codeline lineno="1130"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1131"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>IIOWrapper::update_angvel_x_filter_low_pass_3db(uint32_t<sp/>val)</highlight></codeline>
<codeline lineno="1132"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1133"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="classIIOWrapper_1a9b7c68d2cd7161e853b261c3e1363ef3" kindref="member">m_channel_anglvel_x</ref>)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1134"><highlight class="normal"></highlight></codeline>
<codeline lineno="1135"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(</highlight></codeline>
<codeline lineno="1136"><highlight class="normal"><sp/><sp/><sp/><sp/>iio_channel_attr_write_longlong(<ref refid="classIIOWrapper_1a9b7c68d2cd7161e853b261c3e1363ef3" kindref="member">m_channel_anglvel_x</ref>,<sp/></highlight><highlight class="stringliteral">&quot;filter_low_pass_3db_frequency&quot;</highlight><highlight class="normal">,<sp/>val)<sp/>==</highlight></codeline>
<codeline lineno="1137"><highlight class="normal"><sp/><sp/><sp/><sp/>0);</highlight></codeline>
<codeline lineno="1138"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1139"><highlight class="normal"></highlight></codeline>
<codeline lineno="1140"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>IIOWrapper::angvel_y_filter_low_pass_3db(uint32_t<sp/>&amp;<sp/>result)</highlight></codeline>
<codeline lineno="1141"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1142"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>valuel;</highlight></codeline>
<codeline lineno="1143"><highlight class="normal"></highlight></codeline>
<codeline lineno="1144"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="classIIOWrapper_1a1b138c4cc8238e52a68f830363a04b8d" kindref="member">m_channel_anglvel_y</ref>)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1145"><highlight class="normal"></highlight></codeline>
<codeline lineno="1146"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ret<sp/>=</highlight></codeline>
<codeline lineno="1147"><highlight class="normal"><sp/><sp/><sp/><sp/>iio_channel_attr_read_longlong(<ref refid="classIIOWrapper_1a1b138c4cc8238e52a68f830363a04b8d" kindref="member">m_channel_anglvel_y</ref>,<sp/></highlight><highlight class="stringliteral">&quot;filter_low_pass_3db_frequency&quot;</highlight><highlight class="normal">,<sp/>&amp;valuel);</highlight></codeline>
<codeline lineno="1148"><highlight class="normal"></highlight></codeline>
<codeline lineno="1149"><highlight class="normal"><sp/><sp/>result<sp/>=<sp/>valuel;</highlight></codeline>
<codeline lineno="1150"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(ret<sp/>==<sp/>0);</highlight></codeline>
<codeline lineno="1151"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1152"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>IIOWrapper::update_angvel_y_filter_low_pass_3db(uint32_t<sp/>val)</highlight></codeline>
<codeline lineno="1153"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1154"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="classIIOWrapper_1a1b138c4cc8238e52a68f830363a04b8d" kindref="member">m_channel_anglvel_y</ref>)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1155"><highlight class="normal"></highlight></codeline>
<codeline lineno="1156"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(</highlight></codeline>
<codeline lineno="1157"><highlight class="normal"><sp/><sp/><sp/><sp/>iio_channel_attr_write_longlong(<ref refid="classIIOWrapper_1a1b138c4cc8238e52a68f830363a04b8d" kindref="member">m_channel_anglvel_y</ref>,<sp/></highlight><highlight class="stringliteral">&quot;filter_low_pass_3db_frequency&quot;</highlight><highlight class="normal">,<sp/>val)<sp/>==</highlight></codeline>
<codeline lineno="1158"><highlight class="normal"><sp/><sp/><sp/><sp/>0);</highlight></codeline>
<codeline lineno="1159"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1160"><highlight class="normal"></highlight></codeline>
<codeline lineno="1161"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>IIOWrapper::angvel_z_filter_low_pass_3db(uint32_t<sp/>&amp;<sp/>result)</highlight></codeline>
<codeline lineno="1162"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1163"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>valuel;</highlight></codeline>
<codeline lineno="1164"><highlight class="normal"></highlight></codeline>
<codeline lineno="1165"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="classIIOWrapper_1a1b2384d209272000f673f25e7134d06d" kindref="member">m_channel_anglvel_z</ref>)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1166"><highlight class="normal"></highlight></codeline>
<codeline lineno="1167"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ret<sp/>=</highlight></codeline>
<codeline lineno="1168"><highlight class="normal"><sp/><sp/><sp/><sp/>iio_channel_attr_read_longlong(<ref refid="classIIOWrapper_1a1b2384d209272000f673f25e7134d06d" kindref="member">m_channel_anglvel_z</ref>,<sp/></highlight><highlight class="stringliteral">&quot;filter_low_pass_3db_frequency&quot;</highlight><highlight class="normal">,<sp/>&amp;valuel);</highlight></codeline>
<codeline lineno="1169"><highlight class="normal"></highlight></codeline>
<codeline lineno="1170"><highlight class="normal"><sp/><sp/>result<sp/>=<sp/>valuel;</highlight></codeline>
<codeline lineno="1171"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(ret<sp/>==<sp/>0);</highlight></codeline>
<codeline lineno="1172"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1173"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>IIOWrapper::update_angvel_z_filter_low_pass_3db(uint32_t<sp/>val)</highlight></codeline>
<codeline lineno="1174"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1175"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="classIIOWrapper_1a1b2384d209272000f673f25e7134d06d" kindref="member">m_channel_anglvel_z</ref>)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1176"><highlight class="normal"></highlight></codeline>
<codeline lineno="1177"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(</highlight></codeline>
<codeline lineno="1178"><highlight class="normal"><sp/><sp/><sp/><sp/>iio_channel_attr_write_longlong(<ref refid="classIIOWrapper_1a1b2384d209272000f673f25e7134d06d" kindref="member">m_channel_anglvel_z</ref>,<sp/></highlight><highlight class="stringliteral">&quot;filter_low_pass_3db_frequency&quot;</highlight><highlight class="normal">,<sp/>val)<sp/>==</highlight></codeline>
<codeline lineno="1179"><highlight class="normal"><sp/><sp/><sp/><sp/>0);</highlight></codeline>
<codeline lineno="1180"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1181"><highlight class="normal"></highlight></codeline>
<codeline lineno="1182"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>IIOWrapper::accel_x_filter_low_pass_3db(uint32_t<sp/>&amp;<sp/>result)</highlight></codeline>
<codeline lineno="1183"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1184"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>valuel;</highlight></codeline>
<codeline lineno="1185"><highlight class="normal"></highlight></codeline>
<codeline lineno="1186"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="classIIOWrapper_1ac1fb844f82d64a1b6e2e6cc6c089bd71" kindref="member">m_channel_accel_x</ref>)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1187"><highlight class="normal"></highlight></codeline>
<codeline lineno="1188"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ret<sp/>=</highlight></codeline>
<codeline lineno="1189"><highlight class="normal"><sp/><sp/><sp/><sp/>iio_channel_attr_read_longlong(<ref refid="classIIOWrapper_1ac1fb844f82d64a1b6e2e6cc6c089bd71" kindref="member">m_channel_accel_x</ref>,<sp/></highlight><highlight class="stringliteral">&quot;filter_low_pass_3db_frequency&quot;</highlight><highlight class="normal">,<sp/>&amp;valuel);</highlight></codeline>
<codeline lineno="1190"><highlight class="normal"></highlight></codeline>
<codeline lineno="1191"><highlight class="normal"><sp/><sp/>result<sp/>=<sp/>valuel;</highlight></codeline>
<codeline lineno="1192"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(ret<sp/>==<sp/>0);</highlight></codeline>
<codeline lineno="1193"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1194"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>IIOWrapper::update_accel_x_filter_low_pass_3db(uint32_t<sp/>val)</highlight></codeline>
<codeline lineno="1195"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1196"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="classIIOWrapper_1ac1fb844f82d64a1b6e2e6cc6c089bd71" kindref="member">m_channel_accel_x</ref>)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1197"><highlight class="normal"></highlight></codeline>
<codeline lineno="1198"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(</highlight></codeline>
<codeline lineno="1199"><highlight class="normal"><sp/><sp/><sp/><sp/>iio_channel_attr_write_longlong(<ref refid="classIIOWrapper_1ac1fb844f82d64a1b6e2e6cc6c089bd71" kindref="member">m_channel_accel_x</ref>,<sp/></highlight><highlight class="stringliteral">&quot;filter_low_pass_3db_frequency&quot;</highlight><highlight class="normal">,<sp/>val)<sp/>==<sp/>0);</highlight></codeline>
<codeline lineno="1200"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1201"><highlight class="normal"></highlight></codeline>
<codeline lineno="1202"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>IIOWrapper::accel_y_filter_low_pass_3db(uint32_t<sp/>&amp;<sp/>result)</highlight></codeline>
<codeline lineno="1203"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1204"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>valuel;</highlight></codeline>
<codeline lineno="1205"><highlight class="normal"></highlight></codeline>
<codeline lineno="1206"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="classIIOWrapper_1ad1e0779435221c690f93d6d05a76f176" kindref="member">m_channel_accel_y</ref>)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1207"><highlight class="normal"></highlight></codeline>
<codeline lineno="1208"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ret<sp/>=</highlight></codeline>
<codeline lineno="1209"><highlight class="normal"><sp/><sp/><sp/><sp/>iio_channel_attr_read_longlong(<ref refid="classIIOWrapper_1ad1e0779435221c690f93d6d05a76f176" kindref="member">m_channel_accel_y</ref>,<sp/></highlight><highlight class="stringliteral">&quot;filter_low_pass_3db_frequency&quot;</highlight><highlight class="normal">,<sp/>&amp;valuel);</highlight></codeline>
<codeline lineno="1210"><highlight class="normal"></highlight></codeline>
<codeline lineno="1211"><highlight class="normal"><sp/><sp/>result<sp/>=<sp/>valuel;</highlight></codeline>
<codeline lineno="1212"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(ret<sp/>==<sp/>0);</highlight></codeline>
<codeline lineno="1213"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1214"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>IIOWrapper::update_accel_y_filter_low_pass_3db(uint32_t<sp/>val)</highlight></codeline>
<codeline lineno="1215"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1216"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="classIIOWrapper_1ad1e0779435221c690f93d6d05a76f176" kindref="member">m_channel_accel_y</ref>)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1217"><highlight class="normal"></highlight></codeline>
<codeline lineno="1218"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(</highlight></codeline>
<codeline lineno="1219"><highlight class="normal"><sp/><sp/><sp/><sp/>iio_channel_attr_write_longlong(<ref refid="classIIOWrapper_1ad1e0779435221c690f93d6d05a76f176" kindref="member">m_channel_accel_y</ref>,<sp/></highlight><highlight class="stringliteral">&quot;filter_low_pass_3db_frequency&quot;</highlight><highlight class="normal">,<sp/>val)<sp/>==<sp/>0);</highlight></codeline>
<codeline lineno="1220"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1221"><highlight class="normal"></highlight></codeline>
<codeline lineno="1222"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>IIOWrapper::accel_z_filter_low_pass_3db(uint32_t<sp/>&amp;<sp/>result)</highlight></codeline>
<codeline lineno="1223"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1224"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>valuel;</highlight></codeline>
<codeline lineno="1225"><highlight class="normal"></highlight></codeline>
<codeline lineno="1226"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="classIIOWrapper_1aa5f24dc01a83090154c57359a4668cd9" kindref="member">m_channel_accel_z</ref>)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1227"><highlight class="normal"></highlight></codeline>
<codeline lineno="1228"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ret<sp/>=</highlight></codeline>
<codeline lineno="1229"><highlight class="normal"><sp/><sp/><sp/><sp/>iio_channel_attr_read_longlong(<ref refid="classIIOWrapper_1aa5f24dc01a83090154c57359a4668cd9" kindref="member">m_channel_accel_z</ref>,<sp/></highlight><highlight class="stringliteral">&quot;filter_low_pass_3db_frequency&quot;</highlight><highlight class="normal">,<sp/>&amp;valuel);</highlight></codeline>
<codeline lineno="1230"><highlight class="normal"></highlight></codeline>
<codeline lineno="1231"><highlight class="normal"><sp/><sp/>result<sp/>=<sp/>valuel;</highlight></codeline>
<codeline lineno="1232"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(ret<sp/>==<sp/>0);</highlight></codeline>
<codeline lineno="1233"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1234"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>IIOWrapper::update_accel_z_filter_low_pass_3db(uint32_t<sp/>val)</highlight></codeline>
<codeline lineno="1235"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1236"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="classIIOWrapper_1aa5f24dc01a83090154c57359a4668cd9" kindref="member">m_channel_accel_z</ref>)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1237"><highlight class="normal"></highlight></codeline>
<codeline lineno="1238"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(</highlight></codeline>
<codeline lineno="1239"><highlight class="normal"><sp/><sp/><sp/><sp/>iio_channel_attr_write_longlong(<ref refid="classIIOWrapper_1aa5f24dc01a83090154c57359a4668cd9" kindref="member">m_channel_accel_z</ref>,<sp/></highlight><highlight class="stringliteral">&quot;filter_low_pass_3db_frequency&quot;</highlight><highlight class="normal">,<sp/>val)<sp/>==<sp/>0);</highlight></codeline>
<codeline lineno="1240"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1241"><highlight class="normal"></highlight></codeline>
<codeline lineno="1242"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1243"><highlight class="normal"></highlight></codeline>
<codeline lineno="1244"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classIIOWrapper_1aee4ed59f8c41d2c1e1ad95d5179e0e61" kindref="member">IIOWrapper::filter_low_pass_3db_frequency</ref>(uint32_t<sp/>&amp;<sp/>result)</highlight></codeline>
<codeline lineno="1245"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1246"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>valuel;</highlight></codeline>
<codeline lineno="1247"><highlight class="normal"></highlight></codeline>
<codeline lineno="1248"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="classIIOWrapper_1aa54f78cb0c53f73b6562e303367b20be" kindref="member">m_dev</ref>)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1249"><highlight class="normal"></highlight></codeline>
<codeline lineno="1250"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ret<sp/>=<sp/>iio_device_attr_read_longlong(<ref refid="classIIOWrapper_1aa54f78cb0c53f73b6562e303367b20be" kindref="member">m_dev</ref>,<sp/></highlight><highlight class="stringliteral">&quot;filter_low_pass_3db_frequency&quot;</highlight><highlight class="normal">,<sp/>&amp;valuel);</highlight></codeline>
<codeline lineno="1251"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ret)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1252"><highlight class="normal"></highlight></codeline>
<codeline lineno="1253"><highlight class="normal"><sp/><sp/>result<sp/>=<sp/>valuel;</highlight></codeline>
<codeline lineno="1254"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1255"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1256"><highlight class="normal"></highlight></codeline>
<codeline lineno="1257"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classIIOWrapper_1ab960b56f3b8fb3bab2f4d3e492616bca" kindref="member">IIOWrapper::update_filter_low_pass_3db_frequency</ref>(uint32_t<sp/>val)</highlight></codeline>
<codeline lineno="1258"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1259"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="classIIOWrapper_1aa54f78cb0c53f73b6562e303367b20be" kindref="member">m_dev</ref>)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1260"><highlight class="normal"></highlight></codeline>
<codeline lineno="1261"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(iio_device_attr_write_longlong(<ref refid="classIIOWrapper_1aa54f78cb0c53f73b6562e303367b20be" kindref="member">m_dev</ref>,<sp/></highlight><highlight class="stringliteral">&quot;filter_low_pass_3db_frequency&quot;</highlight><highlight class="normal">,<sp/>val)<sp/>==<sp/>0);</highlight></codeline>
<codeline lineno="1262"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1263"><highlight class="normal"></highlight></codeline>
<codeline lineno="1264"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1265"><highlight class="normal"></highlight></codeline>
<codeline lineno="1266"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>ADIS_HAS_CALIB_SCALE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1267"><highlight class="normal"></highlight></codeline>
<codeline lineno="1268"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>IIOWrapper::accel_x_calibscale(int32_t<sp/>&amp;<sp/>result)</highlight></codeline>
<codeline lineno="1269"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1270"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>valuel;</highlight></codeline>
<codeline lineno="1271"><highlight class="normal"></highlight></codeline>
<codeline lineno="1272"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="classIIOWrapper_1ac1fb844f82d64a1b6e2e6cc6c089bd71" kindref="member">m_channel_accel_x</ref>)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1273"><highlight class="normal"></highlight></codeline>
<codeline lineno="1274"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ret<sp/>=<sp/>iio_channel_attr_read_longlong(<ref refid="classIIOWrapper_1ac1fb844f82d64a1b6e2e6cc6c089bd71" kindref="member">m_channel_accel_x</ref>,<sp/></highlight><highlight class="stringliteral">&quot;calibscale&quot;</highlight><highlight class="normal">,<sp/>&amp;valuel);</highlight></codeline>
<codeline lineno="1275"><highlight class="normal"></highlight></codeline>
<codeline lineno="1276"><highlight class="normal"><sp/><sp/>result<sp/>=<sp/>valuel;</highlight></codeline>
<codeline lineno="1277"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(ret<sp/>==<sp/>0);</highlight></codeline>
<codeline lineno="1278"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1279"><highlight class="normal"></highlight></codeline>
<codeline lineno="1280"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>IIOWrapper::accel_y_calibscale(int32_t<sp/>&amp;<sp/>result)</highlight></codeline>
<codeline lineno="1281"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1282"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>valuel;</highlight></codeline>
<codeline lineno="1283"><highlight class="normal"></highlight></codeline>
<codeline lineno="1284"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="classIIOWrapper_1ad1e0779435221c690f93d6d05a76f176" kindref="member">m_channel_accel_y</ref>)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1285"><highlight class="normal"></highlight></codeline>
<codeline lineno="1286"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ret<sp/>=<sp/>iio_channel_attr_read_longlong(<ref refid="classIIOWrapper_1ad1e0779435221c690f93d6d05a76f176" kindref="member">m_channel_accel_y</ref>,<sp/></highlight><highlight class="stringliteral">&quot;calibscale&quot;</highlight><highlight class="normal">,<sp/>&amp;valuel);</highlight></codeline>
<codeline lineno="1287"><highlight class="normal"></highlight></codeline>
<codeline lineno="1288"><highlight class="normal"><sp/><sp/>result<sp/>=<sp/>valuel;</highlight></codeline>
<codeline lineno="1289"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(ret<sp/>==<sp/>0);</highlight></codeline>
<codeline lineno="1290"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1291"><highlight class="normal"></highlight></codeline>
<codeline lineno="1292"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>IIOWrapper::accel_z_calibscale(int32_t<sp/>&amp;<sp/>result)</highlight></codeline>
<codeline lineno="1293"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1294"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>valuel;</highlight></codeline>
<codeline lineno="1295"><highlight class="normal"></highlight></codeline>
<codeline lineno="1296"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="classIIOWrapper_1aa5f24dc01a83090154c57359a4668cd9" kindref="member">m_channel_accel_z</ref>)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1297"><highlight class="normal"></highlight></codeline>
<codeline lineno="1298"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ret<sp/>=<sp/>iio_channel_attr_read_longlong(<ref refid="classIIOWrapper_1aa5f24dc01a83090154c57359a4668cd9" kindref="member">m_channel_accel_z</ref>,<sp/></highlight><highlight class="stringliteral">&quot;calibscale&quot;</highlight><highlight class="normal">,<sp/>&amp;valuel);</highlight></codeline>
<codeline lineno="1299"><highlight class="normal"></highlight></codeline>
<codeline lineno="1300"><highlight class="normal"><sp/><sp/>result<sp/>=<sp/>valuel;</highlight></codeline>
<codeline lineno="1301"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(ret<sp/>==<sp/>0);</highlight></codeline>
<codeline lineno="1302"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1303"><highlight class="normal"></highlight></codeline>
<codeline lineno="1304"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>IIOWrapper::anglvel_x_calibscale(int32_t<sp/>&amp;<sp/>result)</highlight></codeline>
<codeline lineno="1305"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1306"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>valuel;</highlight></codeline>
<codeline lineno="1307"><highlight class="normal"></highlight></codeline>
<codeline lineno="1308"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="classIIOWrapper_1a9b7c68d2cd7161e853b261c3e1363ef3" kindref="member">m_channel_anglvel_x</ref>)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1309"><highlight class="normal"></highlight></codeline>
<codeline lineno="1310"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ret<sp/>=<sp/>iio_channel_attr_read_longlong(<ref refid="classIIOWrapper_1a9b7c68d2cd7161e853b261c3e1363ef3" kindref="member">m_channel_anglvel_x</ref>,<sp/></highlight><highlight class="stringliteral">&quot;calibscale&quot;</highlight><highlight class="normal">,<sp/>&amp;valuel);</highlight></codeline>
<codeline lineno="1311"><highlight class="normal"></highlight></codeline>
<codeline lineno="1312"><highlight class="normal"><sp/><sp/>result<sp/>=<sp/>valuel;</highlight></codeline>
<codeline lineno="1313"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(ret<sp/>==<sp/>0);</highlight></codeline>
<codeline lineno="1314"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1315"><highlight class="normal"></highlight></codeline>
<codeline lineno="1316"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>IIOWrapper::anglvel_y_calibscale(int32_t<sp/>&amp;<sp/>result)</highlight></codeline>
<codeline lineno="1317"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1318"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>valuel;</highlight></codeline>
<codeline lineno="1319"><highlight class="normal"></highlight></codeline>
<codeline lineno="1320"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="classIIOWrapper_1a1b138c4cc8238e52a68f830363a04b8d" kindref="member">m_channel_anglvel_y</ref>)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1321"><highlight class="normal"></highlight></codeline>
<codeline lineno="1322"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ret<sp/>=<sp/>iio_channel_attr_read_longlong(<ref refid="classIIOWrapper_1a1b138c4cc8238e52a68f830363a04b8d" kindref="member">m_channel_anglvel_y</ref>,<sp/></highlight><highlight class="stringliteral">&quot;calibscale&quot;</highlight><highlight class="normal">,<sp/>&amp;valuel);</highlight></codeline>
<codeline lineno="1323"><highlight class="normal"></highlight></codeline>
<codeline lineno="1324"><highlight class="normal"><sp/><sp/>result<sp/>=<sp/>valuel;</highlight></codeline>
<codeline lineno="1325"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(ret<sp/>==<sp/>0);</highlight></codeline>
<codeline lineno="1326"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1327"><highlight class="normal"></highlight></codeline>
<codeline lineno="1328"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>IIOWrapper::anglvel_z_calibscale(int32_t<sp/>&amp;<sp/>result)</highlight></codeline>
<codeline lineno="1329"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1330"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>valuel;</highlight></codeline>
<codeline lineno="1331"><highlight class="normal"></highlight></codeline>
<codeline lineno="1332"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="classIIOWrapper_1a1b2384d209272000f673f25e7134d06d" kindref="member">m_channel_anglvel_z</ref>)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1333"><highlight class="normal"></highlight></codeline>
<codeline lineno="1334"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ret<sp/>=<sp/>iio_channel_attr_read_longlong(<ref refid="classIIOWrapper_1a1b2384d209272000f673f25e7134d06d" kindref="member">m_channel_anglvel_z</ref>,<sp/></highlight><highlight class="stringliteral">&quot;calibscale&quot;</highlight><highlight class="normal">,<sp/>&amp;valuel);</highlight></codeline>
<codeline lineno="1335"><highlight class="normal"></highlight></codeline>
<codeline lineno="1336"><highlight class="normal"><sp/><sp/>result<sp/>=<sp/>valuel;</highlight></codeline>
<codeline lineno="1337"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(ret<sp/>==<sp/>0);</highlight></codeline>
<codeline lineno="1338"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1339"><highlight class="normal"></highlight></codeline>
<codeline lineno="1340"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>IIOWrapper::update_accel_calibscale_x(int32_t<sp/>val)</highlight></codeline>
<codeline lineno="1341"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1342"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="classIIOWrapper_1ac1fb844f82d64a1b6e2e6cc6c089bd71" kindref="member">m_channel_accel_x</ref>)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1343"><highlight class="normal"></highlight></codeline>
<codeline lineno="1344"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(iio_channel_attr_write_longlong(<ref refid="classIIOWrapper_1ac1fb844f82d64a1b6e2e6cc6c089bd71" kindref="member">m_channel_accel_x</ref>,<sp/></highlight><highlight class="stringliteral">&quot;calibscale&quot;</highlight><highlight class="normal">,<sp/>val)<sp/>==<sp/>0);</highlight></codeline>
<codeline lineno="1345"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1346"><highlight class="normal"></highlight></codeline>
<codeline lineno="1347"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>IIOWrapper::update_accel_calibscale_y(int32_t<sp/>val)</highlight></codeline>
<codeline lineno="1348"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1349"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="classIIOWrapper_1ad1e0779435221c690f93d6d05a76f176" kindref="member">m_channel_accel_y</ref>)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1350"><highlight class="normal"></highlight></codeline>
<codeline lineno="1351"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(iio_channel_attr_write_longlong(<ref refid="classIIOWrapper_1ad1e0779435221c690f93d6d05a76f176" kindref="member">m_channel_accel_y</ref>,<sp/></highlight><highlight class="stringliteral">&quot;calibscale&quot;</highlight><highlight class="normal">,<sp/>val)<sp/>==<sp/>0);</highlight></codeline>
<codeline lineno="1352"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1353"><highlight class="normal"></highlight></codeline>
<codeline lineno="1354"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>IIOWrapper::update_accel_calibscale_z(int32_t<sp/>val)</highlight></codeline>
<codeline lineno="1355"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1356"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="classIIOWrapper_1aa5f24dc01a83090154c57359a4668cd9" kindref="member">m_channel_accel_z</ref>)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1357"><highlight class="normal"></highlight></codeline>
<codeline lineno="1358"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(iio_channel_attr_write_longlong(<ref refid="classIIOWrapper_1aa5f24dc01a83090154c57359a4668cd9" kindref="member">m_channel_accel_z</ref>,<sp/></highlight><highlight class="stringliteral">&quot;calibscale&quot;</highlight><highlight class="normal">,<sp/>val)<sp/>==<sp/>0);</highlight></codeline>
<codeline lineno="1359"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1360"><highlight class="normal"></highlight></codeline>
<codeline lineno="1361"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>IIOWrapper::update_anglvel_calibscale_x(int32_t<sp/>val)</highlight></codeline>
<codeline lineno="1362"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1363"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="classIIOWrapper_1a9b7c68d2cd7161e853b261c3e1363ef3" kindref="member">m_channel_anglvel_x</ref>)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1364"><highlight class="normal"></highlight></codeline>
<codeline lineno="1365"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(iio_channel_attr_write_longlong(<ref refid="classIIOWrapper_1a9b7c68d2cd7161e853b261c3e1363ef3" kindref="member">m_channel_anglvel_x</ref>,<sp/></highlight><highlight class="stringliteral">&quot;calibscale&quot;</highlight><highlight class="normal">,<sp/>val)<sp/>==<sp/>0);</highlight></codeline>
<codeline lineno="1366"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1367"><highlight class="normal"></highlight></codeline>
<codeline lineno="1368"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>IIOWrapper::update_anglvel_calibscale_y(int32_t<sp/>val)</highlight></codeline>
<codeline lineno="1369"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1370"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="classIIOWrapper_1a1b138c4cc8238e52a68f830363a04b8d" kindref="member">m_channel_anglvel_y</ref>)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1371"><highlight class="normal"></highlight></codeline>
<codeline lineno="1372"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(iio_channel_attr_write_longlong(<ref refid="classIIOWrapper_1a1b138c4cc8238e52a68f830363a04b8d" kindref="member">m_channel_anglvel_y</ref>,<sp/></highlight><highlight class="stringliteral">&quot;calibscale&quot;</highlight><highlight class="normal">,<sp/>val)<sp/>==<sp/>0);</highlight></codeline>
<codeline lineno="1373"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1374"><highlight class="normal"></highlight></codeline>
<codeline lineno="1375"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>IIOWrapper::update_anglvel_calibscale_z(int32_t<sp/>val)</highlight></codeline>
<codeline lineno="1376"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1377"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="classIIOWrapper_1a1b2384d209272000f673f25e7134d06d" kindref="member">m_channel_anglvel_z</ref>)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1378"><highlight class="normal"></highlight></codeline>
<codeline lineno="1379"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(iio_channel_attr_write_longlong(<ref refid="classIIOWrapper_1a1b2384d209272000f673f25e7134d06d" kindref="member">m_channel_anglvel_z</ref>,<sp/></highlight><highlight class="stringliteral">&quot;calibscale&quot;</highlight><highlight class="normal">,<sp/>val)<sp/>==<sp/>0);</highlight></codeline>
<codeline lineno="1380"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1381"><highlight class="normal"></highlight></codeline>
<codeline lineno="1382"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1383"><highlight class="normal"></highlight></codeline>
<codeline lineno="1384"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>ADIS_SNSR_INIT_FAIL</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1385"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classIIOWrapper_1ac818ead3ccd5f2a7c8ab59f5464cff9a" kindref="member">IIOWrapper::diag_sensor_initialization_failure</ref>(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>&amp;<sp/>result)</highlight></codeline>
<codeline lineno="1386"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1387"><highlight class="normal"><sp/><sp/>uint32_t<sp/>reg_val;</highlight></codeline>
<codeline lineno="1388"><highlight class="normal"></highlight></codeline>
<codeline lineno="1389"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="classIIOWrapper_1aa54f78cb0c53f73b6562e303367b20be" kindref="member">m_dev</ref>)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1390"><highlight class="normal"></highlight></codeline>
<codeline lineno="1391"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ret<sp/>=<sp/>iio_device_reg_read(<ref refid="classIIOWrapper_1aa54f78cb0c53f73b6562e303367b20be" kindref="member">m_dev</ref>,<sp/>ADIS_DIAG_STAT_ADDR,<sp/>&amp;reg_val);</highlight></codeline>
<codeline lineno="1392"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ret)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1393"><highlight class="normal"></highlight></codeline>
<codeline lineno="1394"><highlight class="normal"><sp/><sp/>reg_val<sp/>=<sp/>(reg_val<sp/>&amp;<sp/>ADIS_SNSR_INIT_FAIL)<sp/>&gt;&gt;<sp/>ADIS_SNSR_INIT_FAIL_POS;</highlight></codeline>
<codeline lineno="1395"><highlight class="normal"></highlight></codeline>
<codeline lineno="1396"><highlight class="normal"><sp/><sp/>result<sp/>=<sp/>reg_val;</highlight></codeline>
<codeline lineno="1397"><highlight class="normal"></highlight></codeline>
<codeline lineno="1398"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1399"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1400"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1401"><highlight class="normal"></highlight></codeline>
<codeline lineno="1402"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>ADIS_DATA_PATH_OVERRUN</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1403"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classIIOWrapper_1aacdab905284a0a6ecabb1b9bcad81be9" kindref="member">IIOWrapper::diag_data_path_overrun</ref>(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>&amp;<sp/>result)</highlight></codeline>
<codeline lineno="1404"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1405"><highlight class="normal"><sp/><sp/>uint32_t<sp/>reg_val;</highlight></codeline>
<codeline lineno="1406"><highlight class="normal"></highlight></codeline>
<codeline lineno="1407"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="classIIOWrapper_1aa54f78cb0c53f73b6562e303367b20be" kindref="member">m_dev</ref>)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1408"><highlight class="normal"></highlight></codeline>
<codeline lineno="1409"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ret<sp/>=<sp/>iio_device_reg_read(<ref refid="classIIOWrapper_1aa54f78cb0c53f73b6562e303367b20be" kindref="member">m_dev</ref>,<sp/>ADIS_DIAG_STAT_ADDR,<sp/>&amp;reg_val);</highlight></codeline>
<codeline lineno="1410"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ret)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1411"><highlight class="normal"></highlight></codeline>
<codeline lineno="1412"><highlight class="normal"><sp/><sp/>reg_val<sp/>=<sp/>(reg_val<sp/>&amp;<sp/>ADIS_DATA_PATH_OVERRUN)<sp/>&gt;&gt;<sp/>ADIS_DATA_PATH_OVERRUN_POS;</highlight></codeline>
<codeline lineno="1413"><highlight class="normal"><sp/><sp/>result<sp/>=<sp/>reg_val;</highlight></codeline>
<codeline lineno="1414"><highlight class="normal"></highlight></codeline>
<codeline lineno="1415"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1416"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1417"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1418"><highlight class="normal"></highlight></codeline>
<codeline lineno="1419"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>ADIS_WDG_TIMER_FLAG</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1420"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classIIOWrapper_1aa81282a7f07974ef69c65711200f5d7a" kindref="member">IIOWrapper::diag_automatic_reset</ref>(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>&amp;<sp/>result)</highlight></codeline>
<codeline lineno="1421"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1422"><highlight class="normal"><sp/><sp/>uint32_t<sp/>reg_val;</highlight></codeline>
<codeline lineno="1423"><highlight class="normal"></highlight></codeline>
<codeline lineno="1424"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="classIIOWrapper_1aa54f78cb0c53f73b6562e303367b20be" kindref="member">m_dev</ref>)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1425"><highlight class="normal"></highlight></codeline>
<codeline lineno="1426"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ret<sp/>=<sp/>iio_device_reg_read(<ref refid="classIIOWrapper_1aa54f78cb0c53f73b6562e303367b20be" kindref="member">m_dev</ref>,<sp/>ADIS_DIAG_STAT_ADDR,<sp/>&amp;reg_val);</highlight></codeline>
<codeline lineno="1427"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ret)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1428"><highlight class="normal"></highlight></codeline>
<codeline lineno="1429"><highlight class="normal"><sp/><sp/>reg_val<sp/>=<sp/>(reg_val<sp/>&amp;<sp/>ADIS_WDG_TIMER_FLAG)<sp/>&gt;&gt;<sp/>ADIS_WDG_TIMER_FLAG_POS;</highlight></codeline>
<codeline lineno="1430"><highlight class="normal"><sp/><sp/>result<sp/>=<sp/>reg_val;</highlight></codeline>
<codeline lineno="1431"><highlight class="normal"></highlight></codeline>
<codeline lineno="1432"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1433"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1434"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1435"><highlight class="normal"></highlight></codeline>
<codeline lineno="1436"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>ADIS_FLS_MEM_UPDATE_FAIL</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1437"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classIIOWrapper_1a9950dc38bc1e56a7fc42d36b50a3e718" kindref="member">IIOWrapper::diag_flash_memory_update_error</ref>(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>&amp;<sp/>result)</highlight></codeline>
<codeline lineno="1438"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1439"><highlight class="normal"><sp/><sp/>uint32_t<sp/>reg_val;</highlight></codeline>
<codeline lineno="1440"><highlight class="normal"></highlight></codeline>
<codeline lineno="1441"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="classIIOWrapper_1aa54f78cb0c53f73b6562e303367b20be" kindref="member">m_dev</ref>)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1442"><highlight class="normal"></highlight></codeline>
<codeline lineno="1443"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ret<sp/>=<sp/>iio_device_reg_read(<ref refid="classIIOWrapper_1aa54f78cb0c53f73b6562e303367b20be" kindref="member">m_dev</ref>,<sp/>ADIS_DIAG_STAT_ADDR,<sp/>&amp;reg_val);</highlight></codeline>
<codeline lineno="1444"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ret)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1445"><highlight class="normal"></highlight></codeline>
<codeline lineno="1446"><highlight class="normal"><sp/><sp/>reg_val<sp/>=<sp/>(reg_val<sp/>&amp;<sp/>ADIS_FLS_MEM_UPDATE_FAIL)<sp/>&gt;&gt;<sp/>ADIS_FLS_MEM_UPDATE_FAIL_POS;</highlight></codeline>
<codeline lineno="1447"><highlight class="normal"><sp/><sp/>result<sp/>=<sp/>reg_val;</highlight></codeline>
<codeline lineno="1448"><highlight class="normal"></highlight></codeline>
<codeline lineno="1449"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1450"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1451"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1452"><highlight class="normal"></highlight></codeline>
<codeline lineno="1453"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>ADIS_SPI_COMM_ERR</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1454"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classIIOWrapper_1a1d23815c0de4a1ad4366602a4f4bdd96" kindref="member">IIOWrapper::diag_spi_communication_error</ref>(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>&amp;<sp/>result)</highlight></codeline>
<codeline lineno="1455"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1456"><highlight class="normal"><sp/><sp/>uint32_t<sp/>reg_val;</highlight></codeline>
<codeline lineno="1457"><highlight class="normal"></highlight></codeline>
<codeline lineno="1458"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="classIIOWrapper_1aa54f78cb0c53f73b6562e303367b20be" kindref="member">m_dev</ref>)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1459"><highlight class="normal"></highlight></codeline>
<codeline lineno="1460"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ret<sp/>=<sp/>iio_device_reg_read(<ref refid="classIIOWrapper_1aa54f78cb0c53f73b6562e303367b20be" kindref="member">m_dev</ref>,<sp/>ADIS_DIAG_STAT_ADDR,<sp/>&amp;reg_val);</highlight></codeline>
<codeline lineno="1461"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ret)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1462"><highlight class="normal"></highlight></codeline>
<codeline lineno="1463"><highlight class="normal"><sp/><sp/>reg_val<sp/>=<sp/>(reg_val<sp/>&amp;<sp/>ADIS_SPI_COMM_ERR)<sp/>&gt;&gt;<sp/>ADIS_SPI_COMM_ERR_POS;</highlight></codeline>
<codeline lineno="1464"><highlight class="normal"><sp/><sp/>result<sp/>=<sp/>reg_val;</highlight></codeline>
<codeline lineno="1465"><highlight class="normal"></highlight></codeline>
<codeline lineno="1466"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1467"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1468"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1469"><highlight class="normal"></highlight></codeline>
<codeline lineno="1470"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>ADIS_CRC_ERROR_POS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1471"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classIIOWrapper_1a11b581d355f708591f0e425507d93164" kindref="member">IIOWrapper::diag_crc_error</ref>(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>&amp;<sp/>result)</highlight></codeline>
<codeline lineno="1472"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1473"><highlight class="normal"><sp/><sp/>uint32_t<sp/>reg_val;</highlight></codeline>
<codeline lineno="1474"><highlight class="normal"></highlight></codeline>
<codeline lineno="1475"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="classIIOWrapper_1aa54f78cb0c53f73b6562e303367b20be" kindref="member">m_dev</ref>)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1476"><highlight class="normal"></highlight></codeline>
<codeline lineno="1477"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ret<sp/>=<sp/>iio_device_reg_read(<ref refid="classIIOWrapper_1aa54f78cb0c53f73b6562e303367b20be" kindref="member">m_dev</ref>,<sp/>ADIS_DIAG_STAT_ADDR,<sp/>&amp;reg_val);</highlight></codeline>
<codeline lineno="1478"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ret)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1479"><highlight class="normal"></highlight></codeline>
<codeline lineno="1480"><highlight class="normal"><sp/><sp/>reg_val<sp/>=<sp/>(reg_val<sp/>&amp;<sp/>ADIS_CRC_ERROR)<sp/>&gt;&gt;<sp/>ADIS_CRC_ERROR_POS;</highlight></codeline>
<codeline lineno="1481"><highlight class="normal"><sp/><sp/>result<sp/>=<sp/>reg_val;</highlight></codeline>
<codeline lineno="1482"><highlight class="normal"></highlight></codeline>
<codeline lineno="1483"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1484"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1485"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1486"><highlight class="normal"></highlight></codeline>
<codeline lineno="1487"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>ADIS_STDBY_MODE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1488"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classIIOWrapper_1a88df8843b74de7c177dada4d61708fc4" kindref="member">IIOWrapper::diag_standby_mode</ref>(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>&amp;<sp/>result)</highlight></codeline>
<codeline lineno="1489"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1490"><highlight class="normal"><sp/><sp/>uint32_t<sp/>reg_val;</highlight></codeline>
<codeline lineno="1491"><highlight class="normal"></highlight></codeline>
<codeline lineno="1492"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="classIIOWrapper_1aa54f78cb0c53f73b6562e303367b20be" kindref="member">m_dev</ref>)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1493"><highlight class="normal"></highlight></codeline>
<codeline lineno="1494"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ret<sp/>=<sp/>iio_device_reg_read(<ref refid="classIIOWrapper_1aa54f78cb0c53f73b6562e303367b20be" kindref="member">m_dev</ref>,<sp/>ADIS_DIAG_STAT_ADDR,<sp/>&amp;reg_val);</highlight></codeline>
<codeline lineno="1495"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ret)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1496"><highlight class="normal"></highlight></codeline>
<codeline lineno="1497"><highlight class="normal"><sp/><sp/>reg_val<sp/>=<sp/>(reg_val<sp/>&amp;<sp/>ADIS_STDBY_MODE)<sp/>&gt;&gt;<sp/>ADIS_STDBY_MODE_POS;</highlight></codeline>
<codeline lineno="1498"><highlight class="normal"><sp/><sp/>result<sp/>=<sp/>reg_val;</highlight></codeline>
<codeline lineno="1499"><highlight class="normal"></highlight></codeline>
<codeline lineno="1500"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1501"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1502"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1503"><highlight class="normal"></highlight></codeline>
<codeline lineno="1504"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>ADIS_SNSR_FAIL</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1505"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classIIOWrapper_1a6c7b7b8d0039a24ed6be2ce7b15fc814" kindref="member">IIOWrapper::diag_sensor_self_test_error</ref>(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>&amp;<sp/>result)</highlight></codeline>
<codeline lineno="1506"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1507"><highlight class="normal"><sp/><sp/>uint32_t<sp/>reg_val;</highlight></codeline>
<codeline lineno="1508"><highlight class="normal"></highlight></codeline>
<codeline lineno="1509"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="classIIOWrapper_1aa54f78cb0c53f73b6562e303367b20be" kindref="member">m_dev</ref>)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1510"><highlight class="normal"></highlight></codeline>
<codeline lineno="1511"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ret<sp/>=<sp/>iio_device_reg_read(<ref refid="classIIOWrapper_1aa54f78cb0c53f73b6562e303367b20be" kindref="member">m_dev</ref>,<sp/>ADIS_DIAG_STAT_ADDR,<sp/>&amp;reg_val);</highlight></codeline>
<codeline lineno="1512"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ret)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1513"><highlight class="normal"></highlight></codeline>
<codeline lineno="1514"><highlight class="normal"><sp/><sp/>reg_val<sp/>=<sp/>(reg_val<sp/>&amp;<sp/>ADIS_SNSR_FAIL)<sp/>&gt;&gt;<sp/>ADIS_SNSR_FAIL_POS;</highlight></codeline>
<codeline lineno="1515"><highlight class="normal"><sp/><sp/>result<sp/>=<sp/>reg_val;</highlight></codeline>
<codeline lineno="1516"><highlight class="normal"></highlight></codeline>
<codeline lineno="1517"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1518"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1519"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1520"><highlight class="normal"></highlight></codeline>
<codeline lineno="1521"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>ADIS_MEM_FAIL</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1522"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classIIOWrapper_1a39396f6d69a04202f9e859922f95fc34" kindref="member">IIOWrapper::diag_flash_memory_test_error</ref>(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>&amp;<sp/>result)</highlight></codeline>
<codeline lineno="1523"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1524"><highlight class="normal"><sp/><sp/>uint32_t<sp/>reg_val;</highlight></codeline>
<codeline lineno="1525"><highlight class="normal"></highlight></codeline>
<codeline lineno="1526"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="classIIOWrapper_1aa54f78cb0c53f73b6562e303367b20be" kindref="member">m_dev</ref>)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1527"><highlight class="normal"></highlight></codeline>
<codeline lineno="1528"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ret<sp/>=<sp/>iio_device_reg_read(<ref refid="classIIOWrapper_1aa54f78cb0c53f73b6562e303367b20be" kindref="member">m_dev</ref>,<sp/>ADIS_DIAG_STAT_ADDR,<sp/>&amp;reg_val);</highlight></codeline>
<codeline lineno="1529"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ret)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1530"><highlight class="normal"></highlight></codeline>
<codeline lineno="1531"><highlight class="normal"><sp/><sp/>reg_val<sp/>=<sp/>(reg_val<sp/>&amp;<sp/>ADIS_MEM_FAIL)<sp/>&gt;&gt;<sp/>ADIS_MEM_FAIL_POS;</highlight></codeline>
<codeline lineno="1532"><highlight class="normal"><sp/><sp/>result<sp/>=<sp/>reg_val;</highlight></codeline>
<codeline lineno="1533"><highlight class="normal"></highlight></codeline>
<codeline lineno="1534"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1535"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1536"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1537"><highlight class="normal"></highlight></codeline>
<codeline lineno="1538"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>ADIS_CLK_ERR</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1539"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classIIOWrapper_1a09e0a223d200b7d2ed1731f06635b370" kindref="member">IIOWrapper::diag_clock_error</ref>(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>&amp;<sp/>result)</highlight></codeline>
<codeline lineno="1540"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1541"><highlight class="normal"><sp/><sp/>uint32_t<sp/>reg_val;</highlight></codeline>
<codeline lineno="1542"><highlight class="normal"></highlight></codeline>
<codeline lineno="1543"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="classIIOWrapper_1aa54f78cb0c53f73b6562e303367b20be" kindref="member">m_dev</ref>)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1544"><highlight class="normal"></highlight></codeline>
<codeline lineno="1545"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ret<sp/>=<sp/>iio_device_reg_read(<ref refid="classIIOWrapper_1aa54f78cb0c53f73b6562e303367b20be" kindref="member">m_dev</ref>,<sp/>ADIS_DIAG_STAT_ADDR,<sp/>&amp;reg_val);</highlight></codeline>
<codeline lineno="1546"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ret)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1547"><highlight class="normal"></highlight></codeline>
<codeline lineno="1548"><highlight class="normal"><sp/><sp/>reg_val<sp/>=<sp/>(reg_val<sp/>&amp;<sp/>ADIS_CLK_ERR)<sp/>&gt;&gt;<sp/>ADIS_CLK_ERR_POS;</highlight></codeline>
<codeline lineno="1549"><highlight class="normal"><sp/><sp/>result<sp/>=<sp/>reg_val;</highlight></codeline>
<codeline lineno="1550"><highlight class="normal"></highlight></codeline>
<codeline lineno="1551"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1552"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1553"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1554"><highlight class="normal"></highlight></codeline>
<codeline lineno="1555"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>ADIS_GYRO1_FAIL</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1556"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classIIOWrapper_1aea94b1e579314660c7dd03d82ee4c29f" kindref="member">IIOWrapper::diag_gyroscope1_self_test_error</ref>(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>&amp;<sp/>result)</highlight></codeline>
<codeline lineno="1557"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1558"><highlight class="normal"><sp/><sp/>uint32_t<sp/>reg_val;</highlight></codeline>
<codeline lineno="1559"><highlight class="normal"></highlight></codeline>
<codeline lineno="1560"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="classIIOWrapper_1aa54f78cb0c53f73b6562e303367b20be" kindref="member">m_dev</ref>)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1561"><highlight class="normal"></highlight></codeline>
<codeline lineno="1562"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ret<sp/>=<sp/>iio_device_reg_read(<ref refid="classIIOWrapper_1aa54f78cb0c53f73b6562e303367b20be" kindref="member">m_dev</ref>,<sp/>ADIS_DIAG_STAT_ADDR,<sp/>&amp;reg_val);</highlight></codeline>
<codeline lineno="1563"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ret)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1564"><highlight class="normal"></highlight></codeline>
<codeline lineno="1565"><highlight class="normal"><sp/><sp/>reg_val<sp/>=<sp/>(reg_val<sp/>&amp;<sp/>ADIS_GYRO1_FAIL)<sp/>&gt;&gt;<sp/>ADIS_GYRO1_FAIL_POS;</highlight></codeline>
<codeline lineno="1566"><highlight class="normal"><sp/><sp/>result<sp/>=<sp/>reg_val;</highlight></codeline>
<codeline lineno="1567"><highlight class="normal"></highlight></codeline>
<codeline lineno="1568"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1569"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1570"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1571"><highlight class="normal"></highlight></codeline>
<codeline lineno="1572"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>ADIS_GYRO2_FAIL</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1573"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classIIOWrapper_1aa85c0d7dbb01ff4201678d687b8adf93" kindref="member">IIOWrapper::diag_gyroscope2_self_test_error</ref>(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>&amp;<sp/>result)</highlight></codeline>
<codeline lineno="1574"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1575"><highlight class="normal"><sp/><sp/>uint32_t<sp/>reg_val;</highlight></codeline>
<codeline lineno="1576"><highlight class="normal"></highlight></codeline>
<codeline lineno="1577"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="classIIOWrapper_1aa54f78cb0c53f73b6562e303367b20be" kindref="member">m_dev</ref>)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1578"><highlight class="normal"></highlight></codeline>
<codeline lineno="1579"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ret<sp/>=<sp/>iio_device_reg_read(<ref refid="classIIOWrapper_1aa54f78cb0c53f73b6562e303367b20be" kindref="member">m_dev</ref>,<sp/>ADIS_DIAG_STAT_ADDR,<sp/>&amp;reg_val);</highlight></codeline>
<codeline lineno="1580"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ret)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1581"><highlight class="normal"></highlight></codeline>
<codeline lineno="1582"><highlight class="normal"><sp/><sp/>reg_val<sp/>=<sp/>(reg_val<sp/>&amp;<sp/>ADIS_GYRO2_FAIL)<sp/>&gt;&gt;<sp/>ADIS_GYRO2_FAIL_POS;</highlight></codeline>
<codeline lineno="1583"><highlight class="normal"><sp/><sp/>result<sp/>=<sp/>reg_val;</highlight></codeline>
<codeline lineno="1584"><highlight class="normal"></highlight></codeline>
<codeline lineno="1585"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1586"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1587"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1588"><highlight class="normal"></highlight></codeline>
<codeline lineno="1589"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>ADIS_ACCEL_FAIL</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1590"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classIIOWrapper_1a6f0b68bf91bb6bd000a570b349a4e9f4" kindref="member">IIOWrapper::diag_acceleration_self_test_error</ref>(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>&amp;<sp/>result)</highlight></codeline>
<codeline lineno="1591"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1592"><highlight class="normal"><sp/><sp/>uint32_t<sp/>reg_val;</highlight></codeline>
<codeline lineno="1593"><highlight class="normal"></highlight></codeline>
<codeline lineno="1594"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="classIIOWrapper_1aa54f78cb0c53f73b6562e303367b20be" kindref="member">m_dev</ref>)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1595"><highlight class="normal"></highlight></codeline>
<codeline lineno="1596"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ret<sp/>=<sp/>iio_device_reg_read(<ref refid="classIIOWrapper_1aa54f78cb0c53f73b6562e303367b20be" kindref="member">m_dev</ref>,<sp/>ADIS_DIAG_STAT_ADDR,<sp/>&amp;reg_val);</highlight></codeline>
<codeline lineno="1597"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ret)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1598"><highlight class="normal"></highlight></codeline>
<codeline lineno="1599"><highlight class="normal"><sp/><sp/>reg_val<sp/>=<sp/>(reg_val<sp/>&amp;<sp/>ADIS_ACCEL_FAIL)<sp/>&gt;&gt;<sp/>ADIS_ACCEL_FAIL_POS;</highlight></codeline>
<codeline lineno="1600"><highlight class="normal"><sp/><sp/>result<sp/>=<sp/>reg_val;</highlight></codeline>
<codeline lineno="1601"><highlight class="normal"></highlight></codeline>
<codeline lineno="1602"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1603"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1604"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1605"><highlight class="normal"></highlight></codeline>
<codeline lineno="1606"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>ADIS_GYRO_X_FAIL</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1607"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classIIOWrapper_1a45143fbc3eba8260f9cda6870c704d19" kindref="member">IIOWrapper::diag_x_axis_gyroscope_failure</ref>(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>&amp;<sp/>result)</highlight></codeline>
<codeline lineno="1608"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1609"><highlight class="normal"><sp/><sp/>uint32_t<sp/>reg_val;</highlight></codeline>
<codeline lineno="1610"><highlight class="normal"></highlight></codeline>
<codeline lineno="1611"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="classIIOWrapper_1aa54f78cb0c53f73b6562e303367b20be" kindref="member">m_dev</ref>)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1612"><highlight class="normal"></highlight></codeline>
<codeline lineno="1613"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ret<sp/>=<sp/>iio_device_reg_read(<ref refid="classIIOWrapper_1aa54f78cb0c53f73b6562e303367b20be" kindref="member">m_dev</ref>,<sp/>ADIS_GYRO_ACCEL_FAIL_REG,<sp/>&amp;reg_val);</highlight></codeline>
<codeline lineno="1614"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ret)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1615"><highlight class="normal"></highlight></codeline>
<codeline lineno="1616"><highlight class="normal"><sp/><sp/>reg_val<sp/>=<sp/>(reg_val<sp/>&amp;<sp/>ADIS_GYRO_X_FAIL)<sp/>&gt;&gt;<sp/>ADIS_GYRO_X_FAIL_POS;</highlight></codeline>
<codeline lineno="1617"><highlight class="normal"><sp/><sp/>result<sp/>=<sp/>reg_val;</highlight></codeline>
<codeline lineno="1618"><highlight class="normal"></highlight></codeline>
<codeline lineno="1619"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1620"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1621"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1622"><highlight class="normal"></highlight></codeline>
<codeline lineno="1623"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>ADIS_GYRO_Y_FAIL</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1624"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classIIOWrapper_1ab027802372011c7f7d9f59061017173c" kindref="member">IIOWrapper::diag_y_axis_gyroscope_failure</ref>(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>&amp;<sp/>result)</highlight></codeline>
<codeline lineno="1625"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1626"><highlight class="normal"><sp/><sp/>uint32_t<sp/>reg_val;</highlight></codeline>
<codeline lineno="1627"><highlight class="normal"></highlight></codeline>
<codeline lineno="1628"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="classIIOWrapper_1aa54f78cb0c53f73b6562e303367b20be" kindref="member">m_dev</ref>)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1629"><highlight class="normal"></highlight></codeline>
<codeline lineno="1630"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ret<sp/>=<sp/>iio_device_reg_read(<ref refid="classIIOWrapper_1aa54f78cb0c53f73b6562e303367b20be" kindref="member">m_dev</ref>,<sp/>ADIS_GYRO_ACCEL_FAIL_REG,<sp/>&amp;reg_val);</highlight></codeline>
<codeline lineno="1631"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ret)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1632"><highlight class="normal"></highlight></codeline>
<codeline lineno="1633"><highlight class="normal"><sp/><sp/>reg_val<sp/>=<sp/>(reg_val<sp/>&amp;<sp/>ADIS_GYRO_Y_FAIL)<sp/>&gt;&gt;<sp/>ADIS_GYRO_Y_FAIL_POS;</highlight></codeline>
<codeline lineno="1634"><highlight class="normal"><sp/><sp/>result<sp/>=<sp/>reg_val;</highlight></codeline>
<codeline lineno="1635"><highlight class="normal"></highlight></codeline>
<codeline lineno="1636"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1637"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1638"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1639"><highlight class="normal"></highlight></codeline>
<codeline lineno="1640"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>ADIS_GYRO_Z_FAIL</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1641"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classIIOWrapper_1adc4a32825bc5982131f53e227805946b" kindref="member">IIOWrapper::diag_z_axis_gyroscope_failure</ref>(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>&amp;<sp/>result)</highlight></codeline>
<codeline lineno="1642"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1643"><highlight class="normal"><sp/><sp/>uint32_t<sp/>reg_val;</highlight></codeline>
<codeline lineno="1644"><highlight class="normal"></highlight></codeline>
<codeline lineno="1645"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="classIIOWrapper_1aa54f78cb0c53f73b6562e303367b20be" kindref="member">m_dev</ref>)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1646"><highlight class="normal"></highlight></codeline>
<codeline lineno="1647"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ret<sp/>=<sp/>iio_device_reg_read(<ref refid="classIIOWrapper_1aa54f78cb0c53f73b6562e303367b20be" kindref="member">m_dev</ref>,<sp/>ADIS_GYRO_ACCEL_FAIL_REG,<sp/>&amp;reg_val);</highlight></codeline>
<codeline lineno="1648"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ret)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1649"><highlight class="normal"></highlight></codeline>
<codeline lineno="1650"><highlight class="normal"><sp/><sp/>reg_val<sp/>=<sp/>(reg_val<sp/>&amp;<sp/>ADIS_GYRO_Z_FAIL)<sp/>&gt;&gt;<sp/>ADIS_GYRO_Z_FAIL_POS;</highlight></codeline>
<codeline lineno="1651"><highlight class="normal"><sp/><sp/>result<sp/>=<sp/>reg_val;</highlight></codeline>
<codeline lineno="1652"><highlight class="normal"></highlight></codeline>
<codeline lineno="1653"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1654"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1655"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1656"><highlight class="normal"></highlight></codeline>
<codeline lineno="1657"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>ADIS_ACCEL_X_FAIL</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1658"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classIIOWrapper_1afd7976cbd87ab425eb6fdf1192e39e1b" kindref="member">IIOWrapper::diag_x_axis_accelerometer_failure</ref>(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>&amp;<sp/>result)</highlight></codeline>
<codeline lineno="1659"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1660"><highlight class="normal"><sp/><sp/>uint32_t<sp/>reg_val;</highlight></codeline>
<codeline lineno="1661"><highlight class="normal"></highlight></codeline>
<codeline lineno="1662"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="classIIOWrapper_1aa54f78cb0c53f73b6562e303367b20be" kindref="member">m_dev</ref>)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1663"><highlight class="normal"></highlight></codeline>
<codeline lineno="1664"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ret<sp/>=<sp/>iio_device_reg_read(<ref refid="classIIOWrapper_1aa54f78cb0c53f73b6562e303367b20be" kindref="member">m_dev</ref>,<sp/>ADIS_GYRO_ACCEL_FAIL_REG,<sp/>&amp;reg_val);</highlight></codeline>
<codeline lineno="1665"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ret)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1666"><highlight class="normal"></highlight></codeline>
<codeline lineno="1667"><highlight class="normal"><sp/><sp/>reg_val<sp/>=<sp/>(reg_val<sp/>&amp;<sp/>ADIS_ACCEL_X_FAIL)<sp/>&gt;&gt;<sp/>ADIS_ACCEL_X_FAIL_POS;</highlight></codeline>
<codeline lineno="1668"><highlight class="normal"><sp/><sp/>result<sp/>=<sp/>reg_val;</highlight></codeline>
<codeline lineno="1669"><highlight class="normal"></highlight></codeline>
<codeline lineno="1670"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1671"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1672"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1673"><highlight class="normal"></highlight></codeline>
<codeline lineno="1674"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>ADIS_ACCEL_Y_FAIL</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1675"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classIIOWrapper_1a5e040011fba86b221a028f96440ac59e" kindref="member">IIOWrapper::diag_y_axis_accelerometer_failure</ref>(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>&amp;<sp/>result)</highlight></codeline>
<codeline lineno="1676"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1677"><highlight class="normal"><sp/><sp/>uint32_t<sp/>reg_val;</highlight></codeline>
<codeline lineno="1678"><highlight class="normal"></highlight></codeline>
<codeline lineno="1679"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="classIIOWrapper_1aa54f78cb0c53f73b6562e303367b20be" kindref="member">m_dev</ref>)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1680"><highlight class="normal"></highlight></codeline>
<codeline lineno="1681"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ret<sp/>=<sp/>iio_device_reg_read(<ref refid="classIIOWrapper_1aa54f78cb0c53f73b6562e303367b20be" kindref="member">m_dev</ref>,<sp/>ADIS_GYRO_ACCEL_FAIL_REG,<sp/>&amp;reg_val);</highlight></codeline>
<codeline lineno="1682"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ret)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1683"><highlight class="normal"></highlight></codeline>
<codeline lineno="1684"><highlight class="normal"><sp/><sp/>reg_val<sp/>=<sp/>(reg_val<sp/>&amp;<sp/>ADIS_ACCEL_Y_FAIL)<sp/>&gt;&gt;<sp/>ADIS_ACCEL_Y_FAIL_POS;</highlight></codeline>
<codeline lineno="1685"><highlight class="normal"><sp/><sp/>result<sp/>=<sp/>reg_val;</highlight></codeline>
<codeline lineno="1686"><highlight class="normal"></highlight></codeline>
<codeline lineno="1687"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1688"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1689"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1690"><highlight class="normal"></highlight></codeline>
<codeline lineno="1691"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>ADIS_ACCEL_Z_FAIL</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1692"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classIIOWrapper_1adf039156a53b8bb0afebe4c48507c097" kindref="member">IIOWrapper::diag_z_axis_accelerometer_failure</ref>(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>&amp;<sp/>result)</highlight></codeline>
<codeline lineno="1693"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1694"><highlight class="normal"><sp/><sp/>uint32_t<sp/>reg_val;</highlight></codeline>
<codeline lineno="1695"><highlight class="normal"></highlight></codeline>
<codeline lineno="1696"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="classIIOWrapper_1aa54f78cb0c53f73b6562e303367b20be" kindref="member">m_dev</ref>)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1697"><highlight class="normal"></highlight></codeline>
<codeline lineno="1698"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ret<sp/>=<sp/>iio_device_reg_read(<ref refid="classIIOWrapper_1aa54f78cb0c53f73b6562e303367b20be" kindref="member">m_dev</ref>,<sp/>ADIS_GYRO_ACCEL_FAIL_REG,<sp/>&amp;reg_val);</highlight></codeline>
<codeline lineno="1699"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ret)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1700"><highlight class="normal"></highlight></codeline>
<codeline lineno="1701"><highlight class="normal"><sp/><sp/>reg_val<sp/>=<sp/>(reg_val<sp/>&amp;<sp/>ADIS_ACCEL_Z_FAIL)<sp/>&gt;&gt;<sp/>ADIS_ACCEL_Z_FAIL_POS;</highlight></codeline>
<codeline lineno="1702"><highlight class="normal"><sp/><sp/>result<sp/>=<sp/>reg_val;</highlight></codeline>
<codeline lineno="1703"><highlight class="normal"></highlight></codeline>
<codeline lineno="1704"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1705"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1706"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1707"><highlight class="normal"></highlight></codeline>
<codeline lineno="1708"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>ADIS_ADUC_MCU_FAULT</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1709"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classIIOWrapper_1aa691849d0baa2fad55deb7975a070734" kindref="member">IIOWrapper::diag_aduc_mcu_fault</ref>(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>&amp;<sp/>result)</highlight></codeline>
<codeline lineno="1710"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1711"><highlight class="normal"><sp/><sp/>uint32_t<sp/>reg_val;</highlight></codeline>
<codeline lineno="1712"><highlight class="normal"></highlight></codeline>
<codeline lineno="1713"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="classIIOWrapper_1aa54f78cb0c53f73b6562e303367b20be" kindref="member">m_dev</ref>)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1714"><highlight class="normal"></highlight></codeline>
<codeline lineno="1715"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ret<sp/>=<sp/>iio_device_reg_read(<ref refid="classIIOWrapper_1aa54f78cb0c53f73b6562e303367b20be" kindref="member">m_dev</ref>,<sp/>ADIS_DIAG_STAT_ADDR,<sp/>&amp;reg_val);</highlight></codeline>
<codeline lineno="1716"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ret)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1717"><highlight class="normal"></highlight></codeline>
<codeline lineno="1718"><highlight class="normal"><sp/><sp/>reg_val<sp/>=<sp/>(reg_val<sp/>&amp;<sp/>ADIS_ADUC_MCU_FAULT)<sp/>&gt;&gt;<sp/>ADIS_ADUC_MCU_FAULT_POS;</highlight></codeline>
<codeline lineno="1719"><highlight class="normal"><sp/><sp/>result<sp/>=<sp/>reg_val;</highlight></codeline>
<codeline lineno="1720"><highlight class="normal"></highlight></codeline>
<codeline lineno="1721"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1722"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1723"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1724"><highlight class="normal"></highlight></codeline>
<codeline lineno="1725"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classIIOWrapper_1ab3a551d7da672e3c5d3cce79aac4a37c" kindref="member">IIOWrapper::diag_flash_memory_write_count_exceeded_error</ref>(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>&amp;<sp/>result)</highlight></codeline>
<codeline lineno="1726"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1727"><highlight class="normal"><sp/><sp/>uint32_t<sp/>reg_val;</highlight></codeline>
<codeline lineno="1728"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>ret<sp/>=<sp/><ref refid="classIIOWrapper_1af2bd81f3dca62979b41cf5018f72a173" kindref="member">flash_counter</ref>(reg_val);</highlight></codeline>
<codeline lineno="1729"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!ret)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1730"><highlight class="normal"></highlight></codeline>
<codeline lineno="1731"><highlight class="normal"><sp/><sp/>result<sp/>=<sp/>reg_val<sp/>&gt;<sp/>ADIS_FLS_MEM_ENDURANCE;</highlight></codeline>
<codeline lineno="1732"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1733"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1734"><highlight class="normal"></highlight></codeline>
<codeline lineno="1735"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classIIOWrapper_1aa3dfbe95f0013016b8b5056b73d1f126" kindref="member">IIOWrapper::gyroscope_measurement_range</ref>(std::string<sp/>&amp;<sp/>result)</highlight></codeline>
<codeline lineno="1736"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1737"><highlight class="normal"><sp/><sp/>uint32_t<sp/>reg_val;</highlight></codeline>
<codeline lineno="1738"><highlight class="normal"></highlight></codeline>
<codeline lineno="1739"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="classIIOWrapper_1aa54f78cb0c53f73b6562e303367b20be" kindref="member">m_dev</ref>)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1740"><highlight class="normal"></highlight></codeline>
<codeline lineno="1741"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ret<sp/>=<sp/>iio_device_reg_read(<ref refid="classIIOWrapper_1aa54f78cb0c53f73b6562e303367b20be" kindref="member">m_dev</ref>,<sp/>ADIS_RANG_MDL_ADDR,<sp/>&amp;reg_val);</highlight></codeline>
<codeline lineno="1742"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ret)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1743"><highlight class="normal"></highlight></codeline>
<codeline lineno="1744"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>ADIS1655X</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1745"><highlight class="normal"><sp/><sp/>result<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;+/-300_degrees_per_sec&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1746"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1747"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1748"><highlight class="normal"><sp/><sp/>reg_val<sp/>=<sp/>(reg_val<sp/>&amp;<sp/>ADIS_GYRO_MEAS_RANG)<sp/>&gt;&gt;<sp/>ADIS_GYRO_MEAS_RANG_POS;</highlight></codeline>
<codeline lineno="1749"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(reg_val)<sp/>{</highlight></codeline>
<codeline lineno="1750"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>0:</highlight></codeline>
<codeline lineno="1751"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>result<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;+/-125_degrees_per_sec&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1752"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1753"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>1:</highlight></codeline>
<codeline lineno="1754"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>ADIS1654X</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1755"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>result<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;+/-450_degrees_per_sec&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1756"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1757"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>result<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;+/-500_degrees_per_sec&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1758"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1759"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1760"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>3:</highlight></codeline>
<codeline lineno="1761"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>result<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;+/-2000_degrees_per_sec&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1762"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1763"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="1764"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1765"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1766"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1767"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1768"><highlight class="normal"></highlight></codeline>
<codeline lineno="1769"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>ADIS_SENS_BW</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1770"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classIIOWrapper_1a25e63a463289dc1c7761e9ef14982cbf" kindref="member">IIOWrapper::internal_sensor_bandwidth</ref>(uint32_t<sp/>&amp;<sp/>result)</highlight></codeline>
<codeline lineno="1771"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1772"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="classIIOWrapper_1aa54f78cb0c53f73b6562e303367b20be" kindref="member">m_dev</ref>)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1773"><highlight class="normal"></highlight></codeline>
<codeline lineno="1774"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ret<sp/>=<sp/>iio_device_reg_read(<ref refid="classIIOWrapper_1aa54f78cb0c53f73b6562e303367b20be" kindref="member">m_dev</ref>,<sp/>ADIS_MSC_CTRL_ADDR,<sp/>&amp;result);</highlight></codeline>
<codeline lineno="1775"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ret)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1776"><highlight class="normal"></highlight></codeline>
<codeline lineno="1777"><highlight class="normal"><sp/><sp/>result<sp/>=<sp/>(result<sp/>&amp;<sp/>ADIS_SENS_BW)<sp/>&gt;&gt;<sp/>ADIS_SENS_BW_POS;</highlight></codeline>
<codeline lineno="1778"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1779"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1780"><highlight class="normal"></highlight></codeline>
<codeline lineno="1781"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classIIOWrapper_1a630b1d5232285b51560a90b805339961" kindref="member">IIOWrapper::update_internal_sensor_bandwidth</ref>(uint32_t<sp/>val)</highlight></codeline>
<codeline lineno="1782"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1783"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classIIOWrapper_1a3b99dc4a11bfc1044779befc29c9385a" kindref="member">updateField</ref>(ADIS_MSC_CTRL_ADDR,<sp/>val<sp/>&lt;&lt;<sp/>ADIS_SENS_BW_POS,<sp/>ADIS_SENS_BW);</highlight></codeline>
<codeline lineno="1784"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1785"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1786"><highlight class="normal"></highlight></codeline>
<codeline lineno="1787"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>ADIS_PT_OF_PERC_REG_ADDR</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1788"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classIIOWrapper_1a67eaded963621b47f1f228a0b250a00e" kindref="member">IIOWrapper::point_of_percussion_alignment</ref>(uint32_t<sp/>&amp;<sp/>result)</highlight></codeline>
<codeline lineno="1789"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1790"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="classIIOWrapper_1aa54f78cb0c53f73b6562e303367b20be" kindref="member">m_dev</ref>)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1791"><highlight class="normal"></highlight></codeline>
<codeline lineno="1792"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ret<sp/>=<sp/>iio_device_reg_read(<ref refid="classIIOWrapper_1aa54f78cb0c53f73b6562e303367b20be" kindref="member">m_dev</ref>,<sp/>ADIS_PT_OF_PERC_REG_ADDR,<sp/>&amp;result);</highlight></codeline>
<codeline lineno="1793"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ret)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1794"><highlight class="normal"></highlight></codeline>
<codeline lineno="1795"><highlight class="normal"><sp/><sp/>result<sp/>=<sp/>(result<sp/>&amp;<sp/>ADIS_PT_OF_PERC_ALGNMNT)<sp/>&gt;&gt;<sp/>ADIS_PT_OF_PERC_ALGNMNT_POS;</highlight></codeline>
<codeline lineno="1796"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1797"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1798"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1799"><highlight class="normal"></highlight></codeline>
<codeline lineno="1800"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>ADIS_PT_OF_PERC_REG_ADDR</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1801"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classIIOWrapper_1a293d23f39cf1a07b3e8056d239728dc3" kindref="member">IIOWrapper::update_point_of_percussion_alignment</ref>(uint32_t<sp/>val)</highlight></codeline>
<codeline lineno="1802"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1803"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classIIOWrapper_1a3b99dc4a11bfc1044779befc29c9385a" kindref="member">updateField</ref>(</highlight></codeline>
<codeline lineno="1804"><highlight class="normal"><sp/><sp/><sp/><sp/>ADIS_PT_OF_PERC_REG_ADDR,<sp/>val<sp/>&lt;&lt;<sp/>ADIS_PT_OF_PERC_ALGNMNT_POS,<sp/>ADIS_PT_OF_PERC_ALGNMNT);</highlight></codeline>
<codeline lineno="1805"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1806"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1807"><highlight class="normal"></highlight></codeline>
<codeline lineno="1808"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>ADIS_MSC_CTRL_ADDR</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1809"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classIIOWrapper_1a2352785dfb0a0324613bd6f99a27831b" kindref="member">IIOWrapper::linear_acceleration_compensation</ref>(uint32_t<sp/>&amp;<sp/>result)</highlight></codeline>
<codeline lineno="1810"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1811"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="classIIOWrapper_1aa54f78cb0c53f73b6562e303367b20be" kindref="member">m_dev</ref>)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1812"><highlight class="normal"></highlight></codeline>
<codeline lineno="1813"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ret<sp/>=<sp/>iio_device_reg_read(<ref refid="classIIOWrapper_1aa54f78cb0c53f73b6562e303367b20be" kindref="member">m_dev</ref>,<sp/>ADIS_MSC_CTRL_ADDR,<sp/>&amp;result);</highlight></codeline>
<codeline lineno="1814"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ret)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1815"><highlight class="normal"></highlight></codeline>
<codeline lineno="1816"><highlight class="normal"><sp/><sp/>result<sp/>=<sp/>(result<sp/>&amp;<sp/>ADIS_LN_ACCL_COMP)<sp/>&gt;&gt;<sp/>ADIS_LN_ACCL_COMP_POS;</highlight></codeline>
<codeline lineno="1817"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1818"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1819"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1820"><highlight class="normal"></highlight></codeline>
<codeline lineno="1821"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>ADIS_MSC_CTRL_ADDR</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1822"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classIIOWrapper_1a09fe16394d6d8b7a7ab7dbefa64ba084" kindref="member">IIOWrapper::update_linear_acceleration_compensation</ref>(uint32_t<sp/>val)</highlight></codeline>
<codeline lineno="1823"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1824"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classIIOWrapper_1a3b99dc4a11bfc1044779befc29c9385a" kindref="member">updateField</ref>(ADIS_MSC_CTRL_ADDR,<sp/>val<sp/>&lt;&lt;<sp/>ADIS_LN_ACCL_COMP_POS,<sp/>ADIS_LN_ACCL_COMP);</highlight></codeline>
<codeline lineno="1825"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1826"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1827"><highlight class="normal"></highlight></codeline>
<codeline lineno="1828"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>ADIS_NULL_CNFG_ADDR</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1829"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classIIOWrapper_1a4b0d75039f36c1063c12c2335c230ffd" kindref="member">IIOWrapper::bias_correction_time_base_control</ref>(uint32_t<sp/>&amp;<sp/>result)</highlight></codeline>
<codeline lineno="1830"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1831"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="classIIOWrapper_1aa54f78cb0c53f73b6562e303367b20be" kindref="member">m_dev</ref>)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1832"><highlight class="normal"></highlight></codeline>
<codeline lineno="1833"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ret<sp/>=<sp/>iio_device_reg_read(<ref refid="classIIOWrapper_1aa54f78cb0c53f73b6562e303367b20be" kindref="member">m_dev</ref>,<sp/>ADIS_NULL_CNFG_ADDR,<sp/>&amp;result);</highlight></codeline>
<codeline lineno="1834"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ret)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1835"><highlight class="normal"></highlight></codeline>
<codeline lineno="1836"><highlight class="normal"><sp/><sp/>result<sp/>=<sp/>(result<sp/>&amp;<sp/>ADIS_TIME_BASE_CONTROL)<sp/>&gt;&gt;<sp/>ADIS_TIME_BASE_CONTROL_POS;</highlight></codeline>
<codeline lineno="1837"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1838"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1839"><highlight class="normal"></highlight></codeline>
<codeline lineno="1840"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classIIOWrapper_1a5818afde806f78c0868884d6b1f23bbf" kindref="member">IIOWrapper::update_bias_correction_time_base_control</ref>(uint32_t<sp/>val)</highlight></codeline>
<codeline lineno="1841"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1842"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classIIOWrapper_1a3b99dc4a11bfc1044779befc29c9385a" kindref="member">updateField</ref>(</highlight></codeline>
<codeline lineno="1843"><highlight class="normal"><sp/><sp/><sp/><sp/>ADIS_NULL_CNFG_ADDR,<sp/>val<sp/>&lt;&lt;<sp/>ADIS_TIME_BASE_CONTROL_POS,<sp/>ADIS_TIME_BASE_CONTROL);</highlight></codeline>
<codeline lineno="1844"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1845"><highlight class="normal"></highlight></codeline>
<codeline lineno="1846"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classIIOWrapper_1ab0d834e0075c408c546991934ac4ac7a" kindref="member">IIOWrapper::x_axis_gyroscope_bias_correction_enable</ref>(uint32_t<sp/>&amp;<sp/>result)</highlight></codeline>
<codeline lineno="1847"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1848"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="classIIOWrapper_1aa54f78cb0c53f73b6562e303367b20be" kindref="member">m_dev</ref>)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1849"><highlight class="normal"></highlight></codeline>
<codeline lineno="1850"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ret<sp/>=<sp/>iio_device_reg_read(<ref refid="classIIOWrapper_1aa54f78cb0c53f73b6562e303367b20be" kindref="member">m_dev</ref>,<sp/>ADIS_NULL_CNFG_ADDR,<sp/>&amp;result);</highlight></codeline>
<codeline lineno="1851"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ret)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1852"><highlight class="normal"></highlight></codeline>
<codeline lineno="1853"><highlight class="normal"><sp/><sp/>result<sp/>=<sp/>(result<sp/>&amp;<sp/>ADIS_X_AXIS_GYRO_BIAS_CORR_EN)<sp/>&gt;&gt;<sp/>ADIS_X_AXIS_GYRO_BIAS_CORR_EN_POS;</highlight></codeline>
<codeline lineno="1854"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1855"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1856"><highlight class="normal"></highlight></codeline>
<codeline lineno="1857"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classIIOWrapper_1acedff444962fb642b5d2417aaf5dd63a" kindref="member">IIOWrapper::update_x_axis_gyroscope_bias_correction_enable</ref>(uint32_t<sp/>val)</highlight></codeline>
<codeline lineno="1858"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1859"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classIIOWrapper_1a3b99dc4a11bfc1044779befc29c9385a" kindref="member">updateField</ref>(</highlight></codeline>
<codeline lineno="1860"><highlight class="normal"><sp/><sp/><sp/><sp/>ADIS_NULL_CNFG_ADDR,<sp/>val<sp/>&lt;&lt;<sp/>ADIS_X_AXIS_GYRO_BIAS_CORR_EN_POS,<sp/>ADIS_X_AXIS_GYRO_BIAS_CORR_EN);</highlight></codeline>
<codeline lineno="1861"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1862"><highlight class="normal"></highlight></codeline>
<codeline lineno="1863"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classIIOWrapper_1a73fd94d29e90e9b46a5c47453e5a76a7" kindref="member">IIOWrapper::y_axis_gyroscope_bias_correction_enable</ref>(uint32_t<sp/>&amp;<sp/>result)</highlight></codeline>
<codeline lineno="1864"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1865"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="classIIOWrapper_1aa54f78cb0c53f73b6562e303367b20be" kindref="member">m_dev</ref>)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1866"><highlight class="normal"></highlight></codeline>
<codeline lineno="1867"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ret<sp/>=<sp/>iio_device_reg_read(<ref refid="classIIOWrapper_1aa54f78cb0c53f73b6562e303367b20be" kindref="member">m_dev</ref>,<sp/>ADIS_NULL_CNFG_ADDR,<sp/>&amp;result);</highlight></codeline>
<codeline lineno="1868"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ret)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1869"><highlight class="normal"></highlight></codeline>
<codeline lineno="1870"><highlight class="normal"><sp/><sp/>result<sp/>=<sp/>(result<sp/>&amp;<sp/>ADIS_Y_AXIS_GYRO_BIAS_CORR_EN)<sp/>&gt;&gt;<sp/>ADIS_Y_AXIS_GYRO_BIAS_CORR_EN_POS;</highlight></codeline>
<codeline lineno="1871"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1872"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1873"><highlight class="normal"></highlight></codeline>
<codeline lineno="1874"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classIIOWrapper_1a4a20c51a3a2079f1c7e887605f6f78dc" kindref="member">IIOWrapper::update_y_axis_gyroscope_bias_correction_enable</ref>(uint32_t<sp/>val)</highlight></codeline>
<codeline lineno="1875"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1876"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classIIOWrapper_1a3b99dc4a11bfc1044779befc29c9385a" kindref="member">updateField</ref>(</highlight></codeline>
<codeline lineno="1877"><highlight class="normal"><sp/><sp/><sp/><sp/>ADIS_NULL_CNFG_ADDR,<sp/>val<sp/>&lt;&lt;<sp/>ADIS_Y_AXIS_GYRO_BIAS_CORR_EN_POS,<sp/>ADIS_Y_AXIS_GYRO_BIAS_CORR_EN);</highlight></codeline>
<codeline lineno="1878"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1879"><highlight class="normal"></highlight></codeline>
<codeline lineno="1880"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classIIOWrapper_1a00aa6acb648e5c90038132c537649773" kindref="member">IIOWrapper::z_axis_gyroscope_bias_correction_enable</ref>(uint32_t<sp/>&amp;<sp/>result)</highlight></codeline>
<codeline lineno="1881"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1882"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="classIIOWrapper_1aa54f78cb0c53f73b6562e303367b20be" kindref="member">m_dev</ref>)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1883"><highlight class="normal"></highlight></codeline>
<codeline lineno="1884"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ret<sp/>=<sp/>iio_device_reg_read(<ref refid="classIIOWrapper_1aa54f78cb0c53f73b6562e303367b20be" kindref="member">m_dev</ref>,<sp/>ADIS_NULL_CNFG_ADDR,<sp/>&amp;result);</highlight></codeline>
<codeline lineno="1885"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ret)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1886"><highlight class="normal"></highlight></codeline>
<codeline lineno="1887"><highlight class="normal"><sp/><sp/>result<sp/>=<sp/>(result<sp/>&amp;<sp/>ADIS_Z_AXIS_GYRO_BIAS_CORR_EN)<sp/>&gt;&gt;<sp/>ADIS_Z_AXIS_GYRO_BIAS_CORR_EN_POS;</highlight></codeline>
<codeline lineno="1888"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1889"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1890"><highlight class="normal"></highlight></codeline>
<codeline lineno="1891"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classIIOWrapper_1a70f3f6d8b2cdefb6a5a6cff54915c6e1" kindref="member">IIOWrapper::update_z_axis_gyroscope_bias_correction_enable</ref>(uint32_t<sp/>val)</highlight></codeline>
<codeline lineno="1892"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1893"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classIIOWrapper_1a3b99dc4a11bfc1044779befc29c9385a" kindref="member">updateField</ref>(</highlight></codeline>
<codeline lineno="1894"><highlight class="normal"><sp/><sp/><sp/><sp/>ADIS_NULL_CNFG_ADDR,<sp/>val<sp/>&lt;&lt;<sp/>ADIS_Z_AXIS_GYRO_BIAS_CORR_EN_POS,<sp/>ADIS_Z_AXIS_GYRO_BIAS_CORR_EN);</highlight></codeline>
<codeline lineno="1895"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1896"><highlight class="normal"></highlight></codeline>
<codeline lineno="1897"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classIIOWrapper_1a62287c7a5dfdd731494ed7ba1780663d" kindref="member">IIOWrapper::x_axis_accelerometer_bias_correction_enable</ref>(uint32_t<sp/>&amp;<sp/>result)</highlight></codeline>
<codeline lineno="1898"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1899"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="classIIOWrapper_1aa54f78cb0c53f73b6562e303367b20be" kindref="member">m_dev</ref>)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1900"><highlight class="normal"></highlight></codeline>
<codeline lineno="1901"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ret<sp/>=<sp/>iio_device_reg_read(<ref refid="classIIOWrapper_1aa54f78cb0c53f73b6562e303367b20be" kindref="member">m_dev</ref>,<sp/>ADIS_NULL_CNFG_ADDR,<sp/>&amp;result);</highlight></codeline>
<codeline lineno="1902"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ret)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1903"><highlight class="normal"></highlight></codeline>
<codeline lineno="1904"><highlight class="normal"><sp/><sp/>result<sp/>=<sp/>(result<sp/>&amp;<sp/>ADIS_X_AXIS_ACCEL_BIAS_CORR_EN)<sp/>&gt;&gt;<sp/>ADIS_X_AXIS_ACCEL_BIAS_CORR_EN_POS;</highlight></codeline>
<codeline lineno="1905"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1906"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1907"><highlight class="normal"></highlight></codeline>
<codeline lineno="1908"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classIIOWrapper_1a43ae9191af8bc6da154d7b301848ac41" kindref="member">IIOWrapper::update_x_axis_accelerometer_bias_correction_enable</ref>(uint32_t<sp/>val)</highlight></codeline>
<codeline lineno="1909"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1910"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classIIOWrapper_1a3b99dc4a11bfc1044779befc29c9385a" kindref="member">updateField</ref>(</highlight></codeline>
<codeline lineno="1911"><highlight class="normal"><sp/><sp/><sp/><sp/>ADIS_NULL_CNFG_ADDR,<sp/>val<sp/>&lt;&lt;<sp/>ADIS_X_AXIS_ACCEL_BIAS_CORR_EN_POS,<sp/>ADIS_X_AXIS_ACCEL_BIAS_CORR_EN);</highlight></codeline>
<codeline lineno="1912"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1913"><highlight class="normal"></highlight></codeline>
<codeline lineno="1914"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classIIOWrapper_1a9f393e7caf03730f7ddcd003c2556dfe" kindref="member">IIOWrapper::y_axis_accelerometer_bias_correction_enable</ref>(uint32_t<sp/>&amp;<sp/>result)</highlight></codeline>
<codeline lineno="1915"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1916"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="classIIOWrapper_1aa54f78cb0c53f73b6562e303367b20be" kindref="member">m_dev</ref>)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1917"><highlight class="normal"></highlight></codeline>
<codeline lineno="1918"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ret<sp/>=<sp/>iio_device_reg_read(<ref refid="classIIOWrapper_1aa54f78cb0c53f73b6562e303367b20be" kindref="member">m_dev</ref>,<sp/>ADIS_NULL_CNFG_ADDR,<sp/>&amp;result);</highlight></codeline>
<codeline lineno="1919"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ret)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1920"><highlight class="normal"></highlight></codeline>
<codeline lineno="1921"><highlight class="normal"><sp/><sp/>result<sp/>=<sp/>(result<sp/>&amp;<sp/>ADIS_Y_AXIS_ACCEL_BIAS_CORR_EN)<sp/>&gt;&gt;<sp/>ADIS_Y_AXIS_ACCEL_BIAS_CORR_EN_POS;</highlight></codeline>
<codeline lineno="1922"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1923"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1924"><highlight class="normal"></highlight></codeline>
<codeline lineno="1925"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classIIOWrapper_1ace85be9c516ad0dce1d76700c440d0e7" kindref="member">IIOWrapper::update_y_axis_accelerometer_bias_correction_enable</ref>(uint32_t<sp/>val)</highlight></codeline>
<codeline lineno="1926"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1927"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classIIOWrapper_1a3b99dc4a11bfc1044779befc29c9385a" kindref="member">updateField</ref>(</highlight></codeline>
<codeline lineno="1928"><highlight class="normal"><sp/><sp/><sp/><sp/>ADIS_NULL_CNFG_ADDR,<sp/>val<sp/>&lt;&lt;<sp/>ADIS_Y_AXIS_ACCEL_BIAS_CORR_EN_POS,<sp/>ADIS_Y_AXIS_ACCEL_BIAS_CORR_EN);</highlight></codeline>
<codeline lineno="1929"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1930"><highlight class="normal"></highlight></codeline>
<codeline lineno="1931"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classIIOWrapper_1a56ca0c938bef97c190ee7ae56736fcda" kindref="member">IIOWrapper::z_axis_accelerometer_bias_correction_enable</ref>(uint32_t<sp/>&amp;<sp/>result)</highlight></codeline>
<codeline lineno="1932"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1933"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="classIIOWrapper_1aa54f78cb0c53f73b6562e303367b20be" kindref="member">m_dev</ref>)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1934"><highlight class="normal"></highlight></codeline>
<codeline lineno="1935"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ret<sp/>=<sp/>iio_device_reg_read(<ref refid="classIIOWrapper_1aa54f78cb0c53f73b6562e303367b20be" kindref="member">m_dev</ref>,<sp/>ADIS_NULL_CNFG_ADDR,<sp/>&amp;result);</highlight></codeline>
<codeline lineno="1936"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ret)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1937"><highlight class="normal"></highlight></codeline>
<codeline lineno="1938"><highlight class="normal"><sp/><sp/>result<sp/>=<sp/>(result<sp/>&amp;<sp/>ADIS_Z_AXIS_ACCEL_BIAS_CORR_EN)<sp/>&gt;&gt;<sp/>ADIS_Z_AXIS_ACCEL_BIAS_CORR_EN_POS;</highlight></codeline>
<codeline lineno="1939"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1940"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1941"><highlight class="normal"></highlight></codeline>
<codeline lineno="1942"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classIIOWrapper_1ad501d5b8096992254282b710ae3593bf" kindref="member">IIOWrapper::update_z_axis_accelerometer_bias_correction_enable</ref>(uint32_t<sp/>val)</highlight></codeline>
<codeline lineno="1943"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1944"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classIIOWrapper_1a3b99dc4a11bfc1044779befc29c9385a" kindref="member">updateField</ref>(</highlight></codeline>
<codeline lineno="1945"><highlight class="normal"><sp/><sp/><sp/><sp/>ADIS_NULL_CNFG_ADDR,<sp/>val<sp/>&lt;&lt;<sp/>ADIS_Z_AXIS_ACCEL_BIAS_CORR_EN_POS,<sp/>ADIS_Z_AXIS_ACCEL_BIAS_CORR_EN);</highlight></codeline>
<codeline lineno="1946"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1947"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1948"><highlight class="normal"></highlight></codeline>
<codeline lineno="1949"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>ADIS_BIAS_CORRECTION_UPDATE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1950"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classIIOWrapper_1a2da8f4f3cd36e8e2cff6befcb53ecbbe" kindref="member">IIOWrapper::bias_correction_update</ref>()</highlight></codeline>
<codeline lineno="1951"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1952"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="classIIOWrapper_1aa54f78cb0c53f73b6562e303367b20be" kindref="member">m_dev</ref>)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1953"><highlight class="normal"></highlight></codeline>
<codeline lineno="1954"><highlight class="normal"><sp/><sp/>uint16_t<sp/>cmd<sp/>=<sp/>ADIS_BIAS_CORRECTION_UPDATE;</highlight></codeline>
<codeline lineno="1955"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(iio_device_reg_write(<ref refid="classIIOWrapper_1aa54f78cb0c53f73b6562e303367b20be" kindref="member">m_dev</ref>,<sp/>ADIS_GLOB_CMD_ADDR,<sp/>cmd)<sp/>==<sp/>0);</highlight></codeline>
<codeline lineno="1956"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1957"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1958"><highlight class="normal"></highlight></codeline>
<codeline lineno="1959"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classIIOWrapper_1a2cb403633337d848e3e334460098a954" kindref="member">IIOWrapper::factory_calibration_restore</ref>()</highlight></codeline>
<codeline lineno="1960"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1961"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="classIIOWrapper_1aa54f78cb0c53f73b6562e303367b20be" kindref="member">m_dev</ref>)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1962"><highlight class="normal"></highlight></codeline>
<codeline lineno="1963"><highlight class="normal"><sp/><sp/>uint16_t<sp/>cmd<sp/>=<sp/>ADIS_FACTORY_CALIBRATION_RESTORE;</highlight></codeline>
<codeline lineno="1964"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(iio_device_reg_write(<ref refid="classIIOWrapper_1aa54f78cb0c53f73b6562e303367b20be" kindref="member">m_dev</ref>,<sp/>ADIS_GLOB_CMD_ADDR,<sp/>cmd)<sp/>==<sp/>0);</highlight></codeline>
<codeline lineno="1965"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1966"><highlight class="normal"></highlight></codeline>
<codeline lineno="1967"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classIIOWrapper_1a9063348d525f98961fca0e5a8d1b2942" kindref="member">IIOWrapper::sensor_self_test</ref>()</highlight></codeline>
<codeline lineno="1968"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1969"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="classIIOWrapper_1aa54f78cb0c53f73b6562e303367b20be" kindref="member">m_dev</ref>)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1970"><highlight class="normal"></highlight></codeline>
<codeline lineno="1971"><highlight class="normal"><sp/><sp/>uint16_t<sp/>cmd<sp/>=<sp/>ADIS_SENSOR_SELF_TEST;</highlight></codeline>
<codeline lineno="1972"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(iio_device_reg_write(<ref refid="classIIOWrapper_1aa54f78cb0c53f73b6562e303367b20be" kindref="member">m_dev</ref>,<sp/>ADIS_GLOB_CMD_ADDR,<sp/>cmd)<sp/>==<sp/>0);</highlight></codeline>
<codeline lineno="1973"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1974"><highlight class="normal"></highlight></codeline>
<codeline lineno="1975"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classIIOWrapper_1a39973a796e6e9f809b8284f011ccaa36" kindref="member">IIOWrapper::flash_memory_update</ref>()</highlight></codeline>
<codeline lineno="1976"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1977"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="classIIOWrapper_1aa54f78cb0c53f73b6562e303367b20be" kindref="member">m_dev</ref>)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1978"><highlight class="normal"></highlight></codeline>
<codeline lineno="1979"><highlight class="normal"><sp/><sp/>uint16_t<sp/>cmd<sp/>=<sp/>ADIS_FLASH_MEMORY_UPDATE;</highlight></codeline>
<codeline lineno="1980"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(iio_device_reg_write(<ref refid="classIIOWrapper_1aa54f78cb0c53f73b6562e303367b20be" kindref="member">m_dev</ref>,<sp/>ADIS_GLOB_CMD_ADDR,<sp/>cmd)<sp/>==<sp/>0);</highlight></codeline>
<codeline lineno="1981"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1982"><highlight class="normal"></highlight></codeline>
<codeline lineno="1983"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>ADIS_FLASH_MEMORY_TEST</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1984"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classIIOWrapper_1af97abb3a23be70f995eb1becb1863dfb" kindref="member">IIOWrapper::flash_memory_test</ref>()</highlight></codeline>
<codeline lineno="1985"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1986"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="classIIOWrapper_1aa54f78cb0c53f73b6562e303367b20be" kindref="member">m_dev</ref>)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1987"><highlight class="normal"></highlight></codeline>
<codeline lineno="1988"><highlight class="normal"><sp/><sp/>uint16_t<sp/>cmd<sp/>=<sp/>ADIS_FLASH_MEMORY_TEST;</highlight></codeline>
<codeline lineno="1989"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(iio_device_reg_write(<ref refid="classIIOWrapper_1aa54f78cb0c53f73b6562e303367b20be" kindref="member">m_dev</ref>,<sp/>ADIS_GLOB_CMD_ADDR,<sp/>cmd)<sp/>==<sp/>0);</highlight></codeline>
<codeline lineno="1990"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1991"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1992"><highlight class="normal"></highlight></codeline>
<codeline lineno="1993"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classIIOWrapper_1a06c8b2dd5e06296e6071515d42678338" kindref="member">IIOWrapper::software_reset</ref>()</highlight></codeline>
<codeline lineno="1994"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1995"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="classIIOWrapper_1aa54f78cb0c53f73b6562e303367b20be" kindref="member">m_dev</ref>)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1996"><highlight class="normal"></highlight></codeline>
<codeline lineno="1997"><highlight class="normal"><sp/><sp/>uint16_t<sp/>cmd<sp/>=<sp/>ADIS_SOFTWARE_RESET_CMD;</highlight></codeline>
<codeline lineno="1998"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(iio_device_reg_write(<ref refid="classIIOWrapper_1aa54f78cb0c53f73b6562e303367b20be" kindref="member">m_dev</ref>,<sp/>ADIS_GLOB_CMD_ADDR,<sp/>cmd)<sp/>==<sp/>0);</highlight></codeline>
<codeline lineno="1999"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2000"><highlight class="normal"></highlight></codeline>
<codeline lineno="2001"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classIIOWrapper_1a7ece889e328ab46d471031934eb93b33" kindref="member">IIOWrapper::firmware_revision</ref>(std::string<sp/>&amp;<sp/>result)</highlight></codeline>
<codeline lineno="2002"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2003"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="classIIOWrapper_1aa54f78cb0c53f73b6562e303367b20be" kindref="member">m_dev</ref>)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2004"><highlight class="normal"></highlight></codeline>
<codeline lineno="2005"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>valuec[32];</highlight></codeline>
<codeline lineno="2006"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ret<sp/>=<sp/>iio_device_debug_attr_read(<ref refid="classIIOWrapper_1aa54f78cb0c53f73b6562e303367b20be" kindref="member">m_dev</ref>,<sp/></highlight><highlight class="stringliteral">&quot;firmware_revision&quot;</highlight><highlight class="normal">,<sp/>valuec,<sp/>32);</highlight></codeline>
<codeline lineno="2007"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ret<sp/>&lt;<sp/>0)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2008"><highlight class="normal"></highlight></codeline>
<codeline lineno="2009"><highlight class="normal"><sp/><sp/>result<sp/>=<sp/>valuec;</highlight></codeline>
<codeline lineno="2010"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2011"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2012"><highlight class="normal"></highlight></codeline>
<codeline lineno="2013"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classIIOWrapper_1a392b3968397a63a0bf235bb7515f5879" kindref="member">IIOWrapper::firmware_date</ref>(std::string<sp/>&amp;<sp/>result)</highlight></codeline>
<codeline lineno="2014"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2015"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="classIIOWrapper_1aa54f78cb0c53f73b6562e303367b20be" kindref="member">m_dev</ref>)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2016"><highlight class="normal"></highlight></codeline>
<codeline lineno="2017"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>valuec[32];</highlight></codeline>
<codeline lineno="2018"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ret<sp/>=<sp/>iio_device_debug_attr_read(<ref refid="classIIOWrapper_1aa54f78cb0c53f73b6562e303367b20be" kindref="member">m_dev</ref>,<sp/></highlight><highlight class="stringliteral">&quot;firmware_date&quot;</highlight><highlight class="normal">,<sp/>valuec,<sp/>32);</highlight></codeline>
<codeline lineno="2019"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ret<sp/>&lt;<sp/>0)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2020"><highlight class="normal"></highlight></codeline>
<codeline lineno="2021"><highlight class="normal"><sp/><sp/>result<sp/>=<sp/>valuec;</highlight></codeline>
<codeline lineno="2022"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2023"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2024"><highlight class="normal"></highlight></codeline>
<codeline lineno="2025"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classIIOWrapper_1a1f0c7c86eba809ac5e0505b12e7b8143" kindref="member">IIOWrapper::product_id</ref>(uint32_t<sp/>&amp;<sp/>result)</highlight></codeline>
<codeline lineno="2026"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2027"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="classIIOWrapper_1aa54f78cb0c53f73b6562e303367b20be" kindref="member">m_dev</ref>)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2028"><highlight class="normal"></highlight></codeline>
<codeline lineno="2029"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>valuel;</highlight></codeline>
<codeline lineno="2030"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ret<sp/>=<sp/>iio_device_debug_attr_read_longlong(<ref refid="classIIOWrapper_1aa54f78cb0c53f73b6562e303367b20be" kindref="member">m_dev</ref>,<sp/></highlight><highlight class="stringliteral">&quot;product_id&quot;</highlight><highlight class="normal">,<sp/>&amp;valuel);</highlight></codeline>
<codeline lineno="2031"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ret)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2032"><highlight class="normal"></highlight></codeline>
<codeline lineno="2033"><highlight class="normal"><sp/><sp/>result<sp/>=<sp/>valuel;</highlight></codeline>
<codeline lineno="2034"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2035"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2036"><highlight class="normal"></highlight></codeline>
<codeline lineno="2037"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classIIOWrapper_1a9d05c33bbd4eef378b584d656a56cfc7" kindref="member">IIOWrapper::serial_number</ref>(uint32_t<sp/>&amp;<sp/>result)</highlight></codeline>
<codeline lineno="2038"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2039"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="classIIOWrapper_1aa54f78cb0c53f73b6562e303367b20be" kindref="member">m_dev</ref>)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2040"><highlight class="normal"></highlight></codeline>
<codeline lineno="2041"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>valuel;</highlight></codeline>
<codeline lineno="2042"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ret<sp/>=<sp/>iio_device_debug_attr_read_longlong(<ref refid="classIIOWrapper_1aa54f78cb0c53f73b6562e303367b20be" kindref="member">m_dev</ref>,<sp/></highlight><highlight class="stringliteral">&quot;serial_number&quot;</highlight><highlight class="normal">,<sp/>&amp;valuel);</highlight></codeline>
<codeline lineno="2043"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ret)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2044"><highlight class="normal"></highlight></codeline>
<codeline lineno="2045"><highlight class="normal"><sp/><sp/>result<sp/>=<sp/>valuel;</highlight></codeline>
<codeline lineno="2046"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2047"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2048"><highlight class="normal"></highlight></codeline>
<codeline lineno="2049"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classIIOWrapper_1af2bd81f3dca62979b41cf5018f72a173" kindref="member">IIOWrapper::flash_counter</ref>(uint32_t<sp/>&amp;<sp/>result)</highlight></codeline>
<codeline lineno="2050"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2051"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="classIIOWrapper_1aa54f78cb0c53f73b6562e303367b20be" kindref="member">m_dev</ref>)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2052"><highlight class="normal"></highlight></codeline>
<codeline lineno="2053"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>valuel;</highlight></codeline>
<codeline lineno="2054"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ret<sp/>=<sp/>iio_device_debug_attr_read_longlong(<ref refid="classIIOWrapper_1aa54f78cb0c53f73b6562e303367b20be" kindref="member">m_dev</ref>,<sp/></highlight><highlight class="stringliteral">&quot;flash_count&quot;</highlight><highlight class="normal">,<sp/>&amp;valuel);</highlight></codeline>
<codeline lineno="2055"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ret)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2056"><highlight class="normal"></highlight></codeline>
<codeline lineno="2057"><highlight class="normal"><sp/><sp/>result<sp/>=<sp/>valuel;</highlight></codeline>
<codeline lineno="2058"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2059"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2060"><highlight class="normal"></highlight></codeline>
<codeline lineno="2061"><highlight class="normal"></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="classIIOWrapper_1a45fe53b29bb3c69fd167caa42418b56e" kindref="member">IIOWrapper::get_scale_accel</ref>()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classIIOWrapper_1ac4a267304bf82229d032adf4c167c8be" kindref="member">m_scale_accel_x</ref>;<sp/>}</highlight></codeline>
<codeline lineno="2062"><highlight class="normal"></highlight></codeline>
<codeline lineno="2063"><highlight class="normal"></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="classIIOWrapper_1a9155426d173e6adb8c6436598cab9d6b" kindref="member">IIOWrapper::get_scale_anglvel</ref>()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classIIOWrapper_1a60201aaf24995e68520d846c5446cd23" kindref="member">m_scale_anglvel_x</ref>;<sp/>}</highlight></codeline>
<codeline lineno="2064"><highlight class="normal"></highlight></codeline>
<codeline lineno="2065"><highlight class="normal"></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="classIIOWrapper_1a0986611e409cfa128ec0f5b5429c8b72" kindref="member">IIOWrapper::get_scale_deltavelocity</ref>()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classIIOWrapper_1a6b769d1cfe0c7e2f09d7af4cdbea5c09" kindref="member">m_scale_deltavelocity_x</ref>;<sp/>}</highlight></codeline>
<codeline lineno="2066"><highlight class="normal"></highlight></codeline>
<codeline lineno="2067"><highlight class="normal"></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="classIIOWrapper_1a133f8dcccf4727d7a97ba1f708c7c249" kindref="member">IIOWrapper::get_scale_deltaangl</ref>()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classIIOWrapper_1a9d05021dd126ae2446d4bfc8e122d926" kindref="member">m_scale_deltaangl_x</ref>;<sp/>}</highlight></codeline>
<codeline lineno="2068"><highlight class="normal"></highlight></codeline>
<codeline lineno="2069"><highlight class="normal"></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="classIIOWrapper_1a022888d663a4dbead44e37a84c45411b" kindref="member">IIOWrapper::get_scale_temp</ref>()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classIIOWrapper_1ac33c30566920a17f9f0b20321c7bb4ae" kindref="member">m_scale_temp</ref><sp/>/<sp/>1000.0;<sp/>}</highlight></codeline>
    </programlisting>
    <location file="src/iio_wrapper.cpp"/>
  </compounddef>
</doxygen>
